### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse*
fullName: com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse
name: addConfigurationSettingWithResponse
nameWithType: ConfigurationClient.addConfigurationSettingWithResponse
members:
- uid: com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse(com.azure.data.appconfiguration.models.ConfigurationSetting,com.azure.core.util.Context)
  fullName: com.azure.data.appconfiguration.ConfigurationClient.addConfigurationSettingWithResponse(ConfigurationSetting setting, Context context)
  name: addConfigurationSettingWithResponse(ConfigurationSetting setting, Context context)
  nameWithType: ConfigurationClient.addConfigurationSettingWithResponse(ConfigurationSetting setting, Context context)
  summary: |-
    Adds a configuration value in the service if that key and label does not exist. The label value of the
     ConfigurationSetting is optional.

     <p><strong>Code Samples</strong></p>

     <p>Add a setting with the key "prodDBConnection", label "westUS", and value "db_connection".</p>

     <pre>
     Response&lt;ConfigurationSetting&gt; responseResultSetting = configurationClient
         .addConfigurationSettingWithResponse&#40;
             new ConfigurationSetting&#40;&#41;
                 .setKey&#40;&quot;prodDBConnection&quot;&#41;.setLabel&#40;&quot;westUS&quot;&#41;.setValue&#40;&quot;db_connection&quot;&#41;,
             new Context&#40;key1, value1&#41;&#41;;
     final ConfigurationSetting resultSetting = responseResultSetting.getValue&#40;&#41;;
     System.out.printf&#40;&quot;Key: %s, Label: %s, Value: %s&quot;, resultSetting.getKey&#40;&#41;, resultSetting.getLabel&#40;&#41;,
         resultSetting.getValue&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The setting to add based on its key and optional label combination.
    name: setting
    type: <xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ConfigurationSetting> addConfigurationSettingWithResponse(ConfigurationSetting setting, Context context)
  returns:
    description: |-
      A REST response containing the the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> that was created, or <code>null</code>, if a
       key collision occurs or the key is an invalid value (which will also throw ServiceRequestException described
       below).
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
