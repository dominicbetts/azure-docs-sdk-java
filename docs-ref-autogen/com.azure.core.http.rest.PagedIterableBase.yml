### YamlMime:JavaType
uid: com.azure.core.http.rest.PagedIterableBase
fullName: com.azure.core.http.rest.PagedIterableBase<T,P>
name: PagedIterableBase<T,P>
nameWithType: PagedIterableBase<T,P>
summary: |-
  This class provides utility to iterate over responses that extend <xref uid="com.azure.core.http.rest.PagedResponse" data-throw-if-not-resolved="false">PagedResponse</xref> using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> and <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> interfaces.

  **Code sample using <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> by page**

  ```java
  // process the streamByPage
   CustomPagedFlux<String> customPagedFlux = createCustomInstance();
   PagedIterableBase<String, PagedResponse<String>> customPagedIterableResponse =
       new PagedIterableBase<>(customPagedFlux);
   customPagedIterableResponse.streamByPage().forEach(resp -> {
       System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
           resp.getRequest().getUrl(), resp.getStatusCode());
       resp.getItems().forEach(value -> {
           System.out.printf("Response value is %s %n", value);
       });
   });
  ```

  **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page**

  ```java
  // process the iterableByPage
   customPagedIterableResponse.iterableByPage().forEach(resp -> {
       System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
           resp.getRequest().getUrl(), resp.getStatusCode());
       resp.getItems().forEach(value -> {
           System.out.printf("Response value is %s %n", value);
       });
   });
  ```

  **Code sample using <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref> by page and while loop**

  ```java
  // iterate over each page
   Iterator<PagedResponse<String>> iterator = customPagedIterableResponse.iterableByPage().iterator();
   while (iterator.hasNext()) {
       PagedResponse<String> resp = iterator.next();
       System.out.printf("Response headers are %s. Url %s  and status code %d %n", resp.getHeaders(),
           resp.getRequest().getUrl(), resp.getStatusCode());
       resp.getItems().forEach(value -> {
           System.out.printf("Response value is %s %n", value);
       });
   }
  ```
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False" />
- <xref href="com.azure.core.util.IterableStream" data-throw-if-not-resolved="False" />
- <xref href="com.azure.core.util.paging.ContinuablePagedIterable" data-throw-if-not-resolved="False" />
inheritedMembers:
- com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- com.azure.core.util.IterableStream.iterator()
- com.azure.core.util.IterableStream.stream()
- com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()
- com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)
- com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)
- com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)
- com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()
- com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)
- com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)
- com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)
- java.lang.Object.clone()
- java.lang.Object.equals(java.lang.Object)
- java.lang.Object.finalize()
- java.lang.Object.getClass()
- java.lang.Object.hashCode()
- java.lang.Object.notify()
- java.lang.Object.notifyAll()
- java.lang.Object.toString()
- java.lang.Object.wait()
- java.lang.Object.wait(long)
- java.lang.Object.wait(long,int)
syntax: public class PagedIterableBase<T,P> extends ContinuablePagedIterable<String,T,P>
constructors:
- com.azure.core.http.rest.PagedIterableBase.PagedIterableBase(com.azure.core.http.rest.PagedFluxBase<T,P>)
type: class
typeParameters:
- name: T
- name: P
metadata: {}
package: com.azure.core.http.rest
artifact: com.azure:azure-core:1.7.0
