### YamlMime:JavaMember
uid: com.azure.search.documents.SearchAsyncClient.uploadDocumentsWithResponse*
fullName: com.azure.search.documents.SearchAsyncClient.uploadDocumentsWithResponse
name: uploadDocumentsWithResponse
nameWithType: SearchAsyncClient.uploadDocumentsWithResponse
members:
- uid: com.azure.search.documents.SearchAsyncClient.uploadDocumentsWithResponse(java.lang.Iterable<?>,com.azure.search.documents.models.IndexDocumentsOptions)
  fullName: com.azure.search.documents.SearchAsyncClient.uploadDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)
  name: uploadDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)
  nameWithType: SearchAsyncClient.uploadDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)
  summary: |-
    Uploads a collection of documents to the target index.

     <p><strong>Code Sample</strong></p>

     <p> Upload dynamic SearchDocument. </p>

     <pre>
     SearchDocument searchDocument = new SearchDocument&#40;&#41;;
     searchDocument.put&#40;&quot;hotelId&quot;, &quot;1&quot;&#41;;
     searchDocument.put&#40;&quot;hotelName&quot;, &quot;test&quot;&#41;;
     searchAsyncClient.uploadDocumentsWithResponse&#40;Collections.singletonList&#40;searchDocument&#41;, null&#41;
         .subscribe&#40;resultResponse -&gt; &#123;
             System.out.println&#40;&quot;The status code of the response is &quot; + resultResponse.getStatusCode&#40;&#41;&#41;;
             for &#40;IndexingResult indexingResult : resultResponse.getValue&#40;&#41;.getResults&#40;&#41;&#41; &#123;
                 System.out.printf&#40;&quot;Does document with key %s upload successfully? %b%n&quot;, indexingResult.getKey&#40;&#41;,
                     indexingResult.isSucceeded&#40;&#41;&#41;;
             &#125;
         &#125;&#41;;
     </pre>
  parameters:
  - description: collection of documents to upload to the target Index.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;?&gt;
  - description: Options that allow specifying document indexing behavior.
    name: options
    type: <xref href="com.azure.search.documents.models.IndexDocumentsOptions?alt=com.azure.search.documents.models.IndexDocumentsOptions&text=IndexDocumentsOptions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<IndexDocumentsResult>> uploadDocumentsWithResponse(Iterable<?> documents, IndexDocumentsOptions options)
  returns:
    description: A response containing the result of the document indexing actions.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.search.documents.models.IndexDocumentsResult?alt=com.azure.search.documents.models.IndexDocumentsResult&text=IndexDocumentsResult" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.search.documents
artifact: com.azure:azure-search-documents:11.0.0
