### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl*
fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl
name: uploadPagesFromUrl
nameWithType: PageBlobClient.uploadPagesFromUrl
members:
- uid: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  name: uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  nameWithType: PageBlobClient.uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  summary: "Writes one or more pages from the source page blob to this page blob. The write size must be a multiple of 512.\n For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-page\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n PageRange pageRange = new PageRange&#40;&#41;\n     .setStart&#40;0&#41;\n     .setEnd&#40;511&#41;;\n \n PageBlobItem pageBlob = client.uploadPagesFromUrl&#40;pageRange, url, sourceOffset&#41;;\n \n System.out.printf&#40;&quot;Uploaded page blob from URL with sequence number %s%n&quot;, pageBlob.getBlobSequenceNumber&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: |-
      A <xref uid="PageRange" data-throw-if-not-resolved="false">PageRange</xref> object. Given that pages must be aligned with 512-byte boundaries, the start
       offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte ranges
       are 0-511, 512-1023, etc.
    name: range
    type: <xref href="com.azure.storage.blob.models.PageRange?alt=com.azure.storage.blob.models.PageRange&text=PageRange" data-throw-if-not-resolved="False" />
  - description: |-
      The url to the blob that will be the source of the copy.  A source blob in the same storage
       account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
       must either be public or must be authenticated via a shared access signature. If the source blob is public, no
       authentication is required to perform the operation.
    name: sourceUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The source offset to copy from.  Pass null or 0 to copy from the beginning of source page
       blob.
    name: sourceOffset
    type: <xref href="java.lang.Long?alt=java.lang.Long&text=Long" data-throw-if-not-resolved="False" />
  syntax: public PageBlobItem uploadPagesFromUrl(PageRange range, String sourceUrl, Long sourceOffset)
  returns:
    description: The information of the uploaded pages.
    type: <xref href="com.azure.storage.blob.models.PageBlobItem?alt=com.azure.storage.blob.models.PageBlobItem&text=PageBlobItem" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0
