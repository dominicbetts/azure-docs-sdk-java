### YamlMime:JavaMember
uid: com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse*
fullName: com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse
name: createOrUpdateDataSourceConnectionWithResponse
nameWithType: SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse
members:
- uid: com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean)
  fullName: com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)
  name: createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)
  nameWithType: SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)
  summary: |-
    Creates a new Azure Cognitive Search data source or updates a data source if it already exists.

     <p><strong>Code Sample</strong></p>

     <p> Create or update search indexer data source connection named "dataSource". </p>

     <pre>
     searchIndexerAsyncClient.getDataSourceConnection&#40;&quot;dataSource&quot;&#41;
         .flatMap&#40;dataSource -&gt; &#123;
             dataSource.setContainer&#40;new SearchIndexerDataContainer&#40;&quot;updatecontainer&quot;&#41;&#41;;
             return searchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse&#40;dataSource, true&#41;;
         &#125;&#41;
         .subscribe&#40;updateDataSource -&gt;
             System.out.printf&#40;&quot;The status code of the response is %s.%nThe dataSource name is %s. &quot;
                 + &quot;The container name of dataSource is %s.%n&quot;, updateDataSource.getStatusCode&#40;&#41;,
             updateDataSource.getValue&#40;&#41;.getName&#40;&#41;, updateDataSource.getValue&#40;&#41;.getContainer&#40;&#41;.getName&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: The definition of the <xref uid="SearchIndexerDataSourceConnection" data-throw-if-not-resolved="false">SearchIndexerDataSourceConnection</xref> to create or update.
    name: dataSource
    type: <xref href="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection" data-throw-if-not-resolved="False" />
  - description: |-
      <code>true</code> to update if the <code>dataSource</code> is the same as the current service value.
       <code>false</code> to always update existing value.
    name: onlyIfUnchanged
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<SearchIndexerDataSourceConnection>> createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)
  returns:
    description: a data source response.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.search.documents.indexes
artifact: com.azure:azure-search-documents:11.0.0
