### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.setHttpHeadersWithResponse*
fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.setHttpHeadersWithResponse
name: setHttpHeadersWithResponse
nameWithType: DataLakePathAsyncClient.setHttpHeadersWithResponse
members:
- uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.setHttpHeadersWithResponse(com.azure.storage.file.datalake.models.PathHttpHeaders,com.azure.storage.file.datalake.models.DataLakeRequestConditions)
  fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.setHttpHeadersWithResponse(PathHttpHeaders headers, DataLakeRequestConditions requestConditions)
  name: setHttpHeadersWithResponse(PathHttpHeaders headers, DataLakeRequestConditions requestConditions)
  nameWithType: DataLakePathAsyncClient.setHttpHeadersWithResponse(PathHttpHeaders headers, DataLakeRequestConditions requestConditions)
  summary: "Changes a resources's HTTP header properties. If only one HTTP header is updated, the others will all be erased.\n In order to preserve existing values, they must be passed alongside the header being changed.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n \n client.setHttpHeadersWithResponse&#40;new PathHttpHeaders&#40;&#41;\n     .setContentLanguage&#40;&quot;en-US&quot;&#41;\n     .setContentType&#40;&quot;binary&quot;&#41;, requestConditions&#41;.subscribe&#40;response -&gt;\n     System.out.printf&#40;&quot;Set HTTP headers completed with status %d%n&quot;, response.getStatusCode&#40;&#41;&#41;&#41;;\n </pre>\n\n <p>For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\">Azure Docs</a></p>"
  parameters:
  - description: <xref uid="PathHttpHeaders" data-throw-if-not-resolved="false">PathHttpHeaders</xref>
    name: headers
    type: <xref href="com.azure.storage.file.datalake.models.PathHttpHeaders?alt=com.azure.storage.file.datalake.models.PathHttpHeaders&text=PathHttpHeaders" data-throw-if-not-resolved="False" />
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> setHttpHeadersWithResponse(PathHttpHeaders headers, DataLakeRequestConditions requestConditions)
  returns:
    description: A reactive response signalling completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
