### YamlMime:JavaMember
uid: com.azure.security.keyvault.secrets.SecretClient.updateSecretPropertiesWithResponse*
fullName: com.azure.security.keyvault.secrets.SecretClient.updateSecretPropertiesWithResponse
name: updateSecretPropertiesWithResponse
nameWithType: SecretClient.updateSecretPropertiesWithResponse
members:
- uid: com.azure.security.keyvault.secrets.SecretClient.updateSecretPropertiesWithResponse(com.azure.security.keyvault.secrets.models.SecretProperties,com.azure.core.util.Context)
  fullName: com.azure.security.keyvault.secrets.SecretClient.updateSecretPropertiesWithResponse(SecretProperties secretProperties, Context context)
  name: updateSecretPropertiesWithResponse(SecretProperties secretProperties, Context context)
  nameWithType: SecretClient.updateSecretPropertiesWithResponse(SecretProperties secretProperties, Context context)
  summary: |-
    Updates the attributes associated with the secret. The value of the secret in the key vault cannot be changed.
     Only attributes populated in <code>secretProperties</code> are changed. Attributes not specified in the request are
     not changed. This operation requires the <code>secrets/set</code> permission.

     <p>The <code>secret</code> is required and its fields <xref uid="SecretProperties#getName()" data-throw-if-not-resolved="false">name</xref> and
     <xref uid="SecretProperties#getVersion()" data-throw-if-not-resolved="false">version</xref> cannot be null.</p>

     <p><strong>Code sample</strong></p>
     <p>Gets the latest version of the secret, changes its expiry time, and the updates the secret in the key vault.
     </p>
     <pre>
     SecretProperties secretProperties = secretClient.getSecret&#40;&quot;secretName&quot;&#41;.getProperties&#40;&#41;;
     secretProperties.setExpiresOn&#40;OffsetDateTime.now&#40;&#41;.plusDays&#40;60&#41;&#41;;
     SecretProperties updatedSecretBase = secretClient.updateSecretPropertiesWithResponse&#40;secretProperties,
         new Context&#40;key2, value2&#41;&#41;.getValue&#40;&#41;;
     KeyVaultSecret updatedSecret = secretClient.getSecret&#40;updatedSecretBase.getName&#40;&#41;&#41;;
     System.out.printf&#40;&quot;Updated Secret is returned with name %s, value %s and expires %s%n&quot;,
         updatedSecret.getName&#40;&#41;, updatedSecret.getValue&#40;&#41;, updatedSecret.getProperties&#40;&#41;.getExpiresOn&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The <xref uid="SecretProperties" data-throw-if-not-resolved="false">secret properties</xref> object with updated properties.
    name: secretProperties
    type: <xref href="com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the HTTP pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<SecretProperties> updateSecretPropertiesWithResponse(SecretProperties secretProperties, Context context)
  returns:
    description: A <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains the <xref uid="SecretProperties" data-throw-if-not-resolved="false">updated secret</xref>.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.secrets.models.SecretProperties?alt=com.azure.security.keyvault.secrets.models.SecretProperties&text=SecretProperties" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.secrets
artifact: com.azure:azure-security-keyvault-secrets:4.2.0
