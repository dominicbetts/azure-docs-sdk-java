### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlockWithResponse*
fullName: com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlockWithResponse
name: stageBlockWithResponse
nameWithType: BlockBlobAsyncClient.stageBlockWithResponse
members:
- uid: com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlockWithResponse(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],java.lang.String)
  fullName: com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlockWithResponse(String base64BlockId, Flux<ByteBuffer> data, long length, byte[] contentMd5, String leaseId)
  name: stageBlockWithResponse(String base64BlockId, Flux<ByteBuffer> data, long length, byte[] contentMd5, String leaseId)
  nameWithType: BlockBlobAsyncClient.stageBlockWithResponse(String base64BlockId, Flux<ByteBuffer> data, long length, byte[] contentMd5, String leaseId)
  summary: |-
    Uploads the specified block to the block blob's "staging area" to be later committed by a call to
     commitBlockList. For more information, see the
     <a href="https://docs.microsoft.com/rest/api/storageservices/put-block">Azure Docs</a>.
     <p>
     Note that the data passed must be replayable if retries are enabled (the default). In other words, the
     <code>Flux</code> must produce the same data each time it is subscribed to.

     <p><strong>Code Samples</strong></p>

     <pre>
     client.stageBlockWithResponse&#40;base64BlockID, data, length, md5, leaseId&#41;.subscribe&#40;response -&gt;
         System.out.printf&#40;&quot;Staging block completed with status %d%n&quot;, response.getStatusCode&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: |-
      A Base64 encoded <code>String</code> that specifies the ID for this block. Note that all block
       ids for a given blob must be the same length.
    name: base64BlockId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The data to write to the block. Note that this <code>Flux</code> must be replayable if retries are enabled
       (the default). In other words, the Flux must produce the same data each time it is subscribed to.
    name: data
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The exact length of the data. It is important that this value match precisely the length of the
       data emitted by the <code>Flux</code>.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: |-
      An MD5 hash of the block content. This hash is used to verify the integrity of the block during
       transport. When this header is specified, the storage service compares the hash of the content that has arrived
       with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
       operation will fail.
    name: contentMd5
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: The lease ID the active lease on the blob must match.
    name: leaseId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> stageBlockWithResponse(String base64BlockId, Flux<ByteBuffer> data, long length, byte[] contentMd5, String leaseId)
  returns:
    description: A reactive response signalling completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0
