### YamlMime:JavaMember
uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData*
fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData
name: verifyData
nameWithType: CryptographyClient.verifyData
members:
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature)
  name: verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature)
  nameWithType: CryptographyClient.verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature)
  summary: |-
    Verifies a signature against the raw data using the configured key. The verify operation supports both symmetric
     keys and asymmetric keys.
     In case of asymmetric keys public portion of the key is used to verify the signature . This operation requires
     the keys/verify permission.

     <p>The <xref uid="SignatureAlgorithm" data-throw-if-not-resolved="false">signature algorithm</xref> indicates the type of algorithm to use to create the
     signature from the digest. Possible values include:
     <xref uid="SignatureAlgorithm#ES256" data-throw-if-not-resolved="false">ES256</xref>, <xref uid="SignatureAlgorithm#ES384" data-throw-if-not-resolved="false">E384</xref>,
     <xref uid="SignatureAlgorithm#ES512" data-throw-if-not-resolved="false">ES512</xref>, <xref uid="SignatureAlgorithm#ES256K" data-throw-if-not-resolved="false">ES246K</xref>,
     <xref uid="SignatureAlgorithm#PS256" data-throw-if-not-resolved="false">PS256</xref>, <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref>,
     <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref>, <xref uid="SignatureAlgorithm#RS256" data-throw-if-not-resolved="false">RS256</xref>,
     <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref> and <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Verifies the signature against the raw data. Subscribes to the call asynchronously and prints out the
     verification details when a response has been received.</p>
     <pre>
     VerifyResult verifyResult =  cryptographyClient.verify&#40;SignatureAlgorithm.ES256, data, signature&#41;;
     System.out.printf&#40;&quot;Verification status %s&quot;, verifyResult.isValid&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The algorithm to use for signing.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm&text=SignatureAlgorithm" data-throw-if-not-resolved="False" />
  - description: The raw content against which signature is to be verified.
    name: data
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: The signature to be verified.
    name: signature
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  syntax: public VerifyResult verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature)
  returns:
    description: The <xref uid="Boolean" data-throw-if-not-resolved="false">Boolean</xref> indicating the signature verification result.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.VerifyResult?alt=com.azure.security.keyvault.keys.cryptography.models.VerifyResult&text=VerifyResult" data-throw-if-not-resolved="False" />
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[],com.azure.core.util.Context)
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature, Context context)
  name: verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature, Context context)
  nameWithType: CryptographyClient.verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature, Context context)
  summary: |-
    Verifies a signature against the raw data using the configured key. The verify operation supports both symmetric
     keys and asymmetric keys.
     In case of asymmetric keys public portion of the key is used to verify the signature . This operation requires
     the keys/verify permission.

     <p>The <xref uid="SignatureAlgorithm" data-throw-if-not-resolved="false">signature algorithm</xref> indicates the type of algorithm to use to create the
     signature from the digest. Possible values include:
     <xref uid="SignatureAlgorithm#ES256" data-throw-if-not-resolved="false">ES256</xref>, <xref uid="SignatureAlgorithm#ES384" data-throw-if-not-resolved="false">E384</xref>,
     <xref uid="SignatureAlgorithm#ES512" data-throw-if-not-resolved="false">ES512</xref>, <xref uid="SignatureAlgorithm#ES256K" data-throw-if-not-resolved="false">ES246K</xref>,
     <xref uid="SignatureAlgorithm#PS256" data-throw-if-not-resolved="false">PS256</xref>, <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref>,
     <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref>, <xref uid="SignatureAlgorithm#RS256" data-throw-if-not-resolved="false">RS256</xref>,
     <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref> and <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Verifies the signature against the raw data. Subscribes to the call asynchronously and prints out the
     verification details when a response has been received.</p>
     <pre>
     VerifyResult verifyResponse =  cryptographyClient.verify&#40;SignatureAlgorithm.ES256, data, signature&#41;;
     System.out.printf&#40;&quot;Verification status %s&quot;, verifyResponse.isValid&#40;&#41;, new Context&#40;key2, value2&#41;&#41;;
     </pre>
  parameters:
  - description: The algorithm to use for signing.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm&text=SignatureAlgorithm" data-throw-if-not-resolved="False" />
  - description: The raw content against which signature is to be verified.
    name: data
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: The signature to be verified.
    name: signature
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public VerifyResult verifyData(SignatureAlgorithm algorithm, byte[] data, byte[] signature, Context context)
  returns:
    description: The <xref uid="Boolean" data-throw-if-not-resolved="false">Boolean</xref> indicating the signature verification result.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.VerifyResult?alt=com.azure.security.keyvault.keys.cryptography.models.VerifyResult&text=VerifyResult" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.security.keyvault.keys.cryptography
artifact: com.azure:azure-security-keyvault-keys:4.2.0
