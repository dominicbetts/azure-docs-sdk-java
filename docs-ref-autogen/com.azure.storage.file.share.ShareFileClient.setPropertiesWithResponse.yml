### YamlMime:JavaMember
uid: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse*
fullName: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse
name: setPropertiesWithResponse
nameWithType: ShareFileClient.setPropertiesWithResponse
members:
- uid: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)
  name: setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)
  summary: |-
    Sets the user-defined httpHeaders to associate to the file.

     <p>If <code>null</code> is passed for the httpHeaders it will clear the httpHeaders associated to the file.</p>

     <p><strong>Code Samples</strong></p>

     <p>Set the httpHeaders of contentType of "text/plain"</p>

     <pre>
     ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;
     ShareFileHttpHeaders httpHeaders = new ShareFileHttpHeaders&#40;&#41;
         .setContentType&#40;&quot;text&#47;html&quot;&#41;
         .setContentEncoding&#40;&quot;gzip&quot;&#41;
         .setContentLanguage&#40;&quot;en&quot;&#41;
         .setCacheControl&#40;&quot;no-transform&quot;&#41;
         .setContentDisposition&#40;&quot;attachment&quot;&#41;;
     FileSmbProperties smbProperties = new FileSmbProperties&#40;&#41;
         .setNtfsFileAttributes&#40;EnumSet.of&#40;NtfsFileAttributes.READ_ONLY&#41;&#41;
         .setFileCreationTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFileLastWriteTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFilePermissionKey&#40;&quot;filePermissionKey&quot;&#41;;
     String filePermission = &quot;filePermission&quot;;
     &#47;&#47; NOTE: filePermission and filePermissionKey should never be both set
     fileClient.setPropertiesWithResponse&#40;1024, httpHeaders, smbProperties, filePermission, requestConditions, null,
         null&#41;;
     System.out.println&#40;&quot;Setting the file httpHeaders completed.&quot;&#41;;
     </pre>

     <p>Clear the httpHeaders of the file and preserve the SMB properties</p>

     <pre>
     ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;
     Response&lt;ShareFileInfo&gt; response = fileClient.setPropertiesWithResponse&#40;1024, null, null, null, requestConditions,
         Duration.ofSeconds&#40;1&#41;, new Context&#40;key1, value1&#41;&#41;;
     System.out.printf&#40;&quot;Setting the file httpHeaders completed with status code %d&quot;, response.getStatusCode&#40;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties">Azure Docs</a>.</p>
  parameters:
  - description: New file size of the file
    name: newFileSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: The user settable file http headers.
    name: httpHeaders
    type: <xref href="com.azure.storage.file.share.models.ShareFileHttpHeaders?alt=com.azure.storage.file.share.models.ShareFileHttpHeaders&text=ShareFileHttpHeaders" data-throw-if-not-resolved="False" />
  - description: The user settable file smb properties.
    name: smbProperties
    type: <xref href="com.azure.storage.file.share.FileSmbProperties?alt=com.azure.storage.file.share.FileSmbProperties&text=FileSmbProperties" data-throw-if-not-resolved="False" />
  - description: The file permission of the file
    name: filePermission
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: <xref uid="ShareRequestConditions" data-throw-if-not-resolved="false">ShareRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ShareFileInfo> setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)
  returns:
    description: Response containing the <xref uid="ShareFileInfo" data-throw-if-not-resolved="false">file info</xref> with headers and status code
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileInfo?alt=com.azure.storage.file.share.models.ShareFileInfo&text=ShareFileInfo" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)
  name: setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)
  nameWithType: ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)
  summary: |-
    Sets the user-defined httpHeaders to associate to the file.

     <p>If <code>null</code> is passed for the httpHeaders it will clear the httpHeaders associated to the file.</p>

     <p><strong>Code Samples</strong></p>

     <p>Set the httpHeaders of contentType of "text/plain"</p>

     <pre>
     ShareFileHttpHeaders httpHeaders = new ShareFileHttpHeaders&#40;&#41;
         .setContentType&#40;&quot;text&#47;html&quot;&#41;
         .setContentEncoding&#40;&quot;gzip&quot;&#41;
         .setContentLanguage&#40;&quot;en&quot;&#41;
         .setCacheControl&#40;&quot;no-transform&quot;&#41;
         .setContentDisposition&#40;&quot;attachment&quot;&#41;;
     FileSmbProperties smbProperties = new FileSmbProperties&#40;&#41;
         .setNtfsFileAttributes&#40;EnumSet.of&#40;NtfsFileAttributes.READ_ONLY&#41;&#41;
         .setFileCreationTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFileLastWriteTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFilePermissionKey&#40;&quot;filePermissionKey&quot;&#41;;
     String filePermission = &quot;filePermission&quot;;
     &#47;&#47; NOTE: filePermission and filePermissionKey should never be both set
     Response&lt;ShareFileInfo&gt; response = fileClient.setPropertiesWithResponse&#40;1024, httpHeaders, smbProperties,
         filePermission, Duration.ofSeconds&#40;1&#41;, new Context&#40;key1, value1&#41;&#41;;
     System.out.printf&#40;&quot;Setting the file httpHeaders completed with status code %d&quot;, response.getStatusCode&#40;&#41;&#41;;
     </pre>

     <p>Clear the httpHeaders of the file and preserve the SMB properties</p>

     <pre>
     Response&lt;ShareFileInfo&gt; response = fileClient.setPropertiesWithResponse&#40;1024, null, null, null,
         Duration.ofSeconds&#40;1&#41;, new Context&#40;key1, value1&#41;&#41;;
     System.out.printf&#40;&quot;Setting the file httpHeaders completed with status code %d&quot;, response.getStatusCode&#40;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties">Azure Docs</a>.</p>
  parameters:
  - description: New file size of the file
    name: newFileSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: The user settable file http headers.
    name: httpHeaders
    type: <xref href="com.azure.storage.file.share.models.ShareFileHttpHeaders?alt=com.azure.storage.file.share.models.ShareFileHttpHeaders&text=ShareFileHttpHeaders" data-throw-if-not-resolved="False" />
  - description: The user settable file smb properties.
    name: smbProperties
    type: <xref href="com.azure.storage.file.share.FileSmbProperties?alt=com.azure.storage.file.share.FileSmbProperties&text=FileSmbProperties" data-throw-if-not-resolved="False" />
  - description: The file permission of the file
    name: filePermission
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ShareFileInfo> setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)
  returns:
    description: Response containing the <xref uid="ShareFileInfo" data-throw-if-not-resolved="false">file info</xref> with headers and status code
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileInfo?alt=com.azure.storage.file.share.models.ShareFileInfo&text=ShareFileInfo" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.share
artifact: com.azure:azure-storage-file-share:12.6.0
