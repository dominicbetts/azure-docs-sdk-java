### YamlMime:JavaMember
uid: com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKey*
fullName: com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKey
name: createRsaKey
nameWithType: KeyAsyncClient.createRsaKey
members:
- uid: com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKey(com.azure.security.keyvault.keys.models.CreateRsaKeyOptions)
  fullName: com.azure.security.keyvault.keys.KeyAsyncClient.createRsaKey(CreateRsaKeyOptions createRsaKeyOptions)
  name: createRsaKey(CreateRsaKeyOptions createRsaKeyOptions)
  nameWithType: KeyAsyncClient.createRsaKey(CreateRsaKeyOptions createRsaKeyOptions)
  summary: |-
    Creates a new Rsa key and stores it in the key vault. The create Rsa key operation can be used to create any Rsa
     key type in key vault. If the named key already exists, Azure Key Vault creates a new version of the key. It
     requires the <code>keys/create</code> permission.

     <p>The <xref uid="CreateRsaKeyOptions" data-throw-if-not-resolved="false">CreateRsaKeyOptions</xref> is required. The <xref uid="CreateRsaKeyOptions#getKeySize()" data-throw-if-not-resolved="false">keySize</xref> can be
     optionally specified. The <xref uid="CreateRsaKeyOptions#getExpiresOn()" data-throw-if-not-resolved="false">expires</xref> and
     <xref uid="CreateRsaKeyOptions#getNotBefore()" data-throw-if-not-resolved="false">notBefore</xref> values are optional. The
     <xref uid="CreateRsaKeyOptions#isEnabled()" data-throw-if-not-resolved="false">enabled</xref> field is set to true by Azure Key Vault, if not specified.</p>

     <p>The <xref uid="CreateRsaKeyOptions#getKeyType()" data-throw-if-not-resolved="false">keyType</xref> indicates the type of key to create. Possible values
     include: <xref uid="KeyType#RSA" data-throw-if-not-resolved="false">RSA</xref> and <xref uid="KeyType#RSA_HSM" data-throw-if-not-resolved="false">RSA-HSM</xref>.</p>

     <p><strong>Code Samples</strong></p>
     <p>Creates a new RSA key with size 2048 which activates in one day and expires in one year. Subscribes to the
     call asynchronously and prints out the newly created key details when a response has been received.</p>

     <pre>
     CreateRsaKeyOptions createRsaKeyOptions = new CreateRsaKeyOptions&#40;&quot;keyName&quot;&#41;
         .setKeySize&#40;2048&#41;
         .setNotBefore&#40;OffsetDateTime.now&#40;&#41;.plusDays&#40;1&#41;&#41;
         .setExpiresOn&#40;OffsetDateTime.now&#40;&#41;.plusYears&#40;1&#41;&#41;;
     keyAsyncClient.createRsaKey&#40;createRsaKeyOptions&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;keyResponse -&gt;
             System.out.printf&#40;&quot;Key is created with name %s and id %s %n&quot;, keyResponse.getName&#40;&#41;,
                 keyResponse.getId&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: |-
      The key configuration object containing information about the rsa key being
           created.
    name: createRsaKeyOptions
    type: <xref href="com.azure.security.keyvault.keys.models.CreateRsaKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateRsaKeyOptions&text=CreateRsaKeyOptions" data-throw-if-not-resolved="False" />
  syntax: public Mono<KeyVaultKey> createRsaKey(CreateRsaKeyOptions createRsaKeyOptions)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing the <xref uid="KeyVaultKey" data-throw-if-not-resolved="false">created key</xref>.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.keys
artifact: com.azure:azure-security-keyvault-keys:4.2.0
