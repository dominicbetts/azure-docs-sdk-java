### YamlMime:JavaMember
uid: com.azure.storage.file.share.ShareFileAsyncClient.listRanges*
fullName: com.azure.storage.file.share.ShareFileAsyncClient.listRanges
name: listRanges
nameWithType: ShareFileAsyncClient.listRanges
members:
- uid: com.azure.storage.file.share.ShareFileAsyncClient.listRanges()
  fullName: com.azure.storage.file.share.ShareFileAsyncClient.listRanges()
  name: listRanges()
  nameWithType: ShareFileAsyncClient.listRanges()
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges for the file client.</p>

     <pre>
     shareFileAsyncClient.listRanges&#40;&#41;.subscribe&#40;range -&gt;
         System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;, range.getStart&#40;&#41;, range.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  syntax: public PagedFlux<ShareFileRange> listRanges()
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileAsyncClient.listRanges(com.azure.storage.file.share.models.ShareFileRange)
  fullName: com.azure.storage.file.share.ShareFileAsyncClient.listRanges(ShareFileRange range)
  name: listRanges(ShareFileRange range)
  nameWithType: ShareFileAsyncClient.listRanges(ShareFileRange range)
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges within the file range from 1KB to 2KB.</p>

     <pre>
     shareFileAsyncClient.listRanges&#40;new ShareFileRange&#40;1024, 2048L&#41;&#41;
         .subscribe&#40;result -&gt; System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;,
             result.getStart&#40;&#41;, result.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  parameters:
  - description: Optional byte range which returns file data only from the specified range.
    name: range
    type: <xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ShareFileRange> listRanges(ShareFileRange range)
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files that satisfy the requirements
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileAsyncClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions)
  fullName: com.azure.storage.file.share.ShareFileAsyncClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions)
  name: listRanges(ShareFileRange range, ShareRequestConditions requestConditions)
  nameWithType: ShareFileAsyncClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions)
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges within the file range from 1KB to 2KB.</p>

     <pre>
     ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;
     shareFileAsyncClient.listRanges&#40;new ShareFileRange&#40;1024, 2048L&#41;, requestConditions&#41;
         .subscribe&#40;result -&gt; System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;,
             result.getStart&#40;&#41;, result.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  parameters:
  - description: Optional byte range which returns file data only from the specified range.
    name: range
    type: <xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />
  - description: <xref uid="ShareRequestConditions" data-throw-if-not-resolved="false">ShareRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ShareFileRange> listRanges(ShareFileRange range, ShareRequestConditions requestConditions)
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files that satisfy the requirements
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.share
artifact: com.azure:azure-storage-file-share:12.6.0
