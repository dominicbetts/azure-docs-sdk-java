### YamlMime:JavaMember
uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData*
fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData
name: signData
nameWithType: CryptographyClient.signData
members:
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData(SignatureAlgorithm algorithm, byte[] data)
  name: signData(SignatureAlgorithm algorithm, byte[] data)
  nameWithType: CryptographyClient.signData(SignatureAlgorithm algorithm, byte[] data)
  summary: |-
    Creates a signature from the raw data using the configured key. The sign data operation supports both asymmetric
     and symmetric keys. This operation requires the keys/sign permission.

     <p>The <xref uid="SignatureAlgorithm" data-throw-if-not-resolved="false">signature algorithm</xref> indicates the type of algorithm to use to create the
     signature from the digest. Possible values include:
     <xref uid="SignatureAlgorithm#ES256" data-throw-if-not-resolved="false">ES256</xref>, <xref uid="SignatureAlgorithm#ES384" data-throw-if-not-resolved="false">E384</xref>,
     <xref uid="SignatureAlgorithm#ES512" data-throw-if-not-resolved="false">ES512</xref>, <xref uid="SignatureAlgorithm#ES256K" data-throw-if-not-resolved="false">ES246K</xref>,
     <xref uid="SignatureAlgorithm#PS256" data-throw-if-not-resolved="false">PS256</xref>, <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref>,
     <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref>, <xref uid="SignatureAlgorithm#RS256" data-throw-if-not-resolved="false">RS256</xref>,
     <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref> and <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Signs the raw data. Subscribes to the call asynchronously and prints out the signature details when a response
     has been received.</p>
     <pre>
     byte[] data = new byte[100];
     new Random&#40;0x1234567L&#41;.nextBytes&#40;data&#41;;
     SignResult signResult = cryptographyClient.sign&#40;SignatureAlgorithm.ES256, data&#41;;
     System.out.printf&#40;&quot;Received signature of length %d with algorithm %s&quot;, signResult.getSignature&#40;&#41;.length&#41;;
     </pre>
  parameters:
  - description: The algorithm to use for signing.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm&text=SignatureAlgorithm" data-throw-if-not-resolved="False" />
  - description: The content from which signature is to be created.
    name: data
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  syntax: public SignResult signData(SignatureAlgorithm algorithm, byte[] data)
  returns:
    description: A <xref uid="SignResult" data-throw-if-not-resolved="false">SignResult</xref> whose <xref uid="SignResult#getSignature()" data-throw-if-not-resolved="false">signature</xref> contains the created signature.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignResult?alt=com.azure.security.keyvault.keys.cryptography.models.SignResult&text=SignResult" data-throw-if-not-resolved="False" />
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],com.azure.core.util.Context)
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.signData(SignatureAlgorithm algorithm, byte[] data, Context context)
  name: signData(SignatureAlgorithm algorithm, byte[] data, Context context)
  nameWithType: CryptographyClient.signData(SignatureAlgorithm algorithm, byte[] data, Context context)
  summary: |-
    Creates a signature from the raw data using the configured key. The sign data operation supports both asymmetric
     and
     symmetric keys. This operation requires the keys/sign permission.

     <p>The <xref uid="SignatureAlgorithm" data-throw-if-not-resolved="false">signature algorithm</xref> indicates the type of algorithm to use to create the
     signature from the digest. Possible values include:
     <xref uid="SignatureAlgorithm#ES256" data-throw-if-not-resolved="false">ES256</xref>, <xref uid="SignatureAlgorithm#ES384" data-throw-if-not-resolved="false">E384</xref>,
     <xref uid="SignatureAlgorithm#ES512" data-throw-if-not-resolved="false">ES512</xref>, <xref uid="SignatureAlgorithm#ES256K" data-throw-if-not-resolved="false">ES246K</xref>,
     <xref uid="SignatureAlgorithm#PS256" data-throw-if-not-resolved="false">PS256</xref>, <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref>,
     <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref>, <xref uid="SignatureAlgorithm#RS256" data-throw-if-not-resolved="false">RS256</xref>,
     <xref uid="SignatureAlgorithm#RS384" data-throw-if-not-resolved="false">RS384</xref> and <xref uid="SignatureAlgorithm#RS512" data-throw-if-not-resolved="false">RS512</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Signs the raw data. Subscribes to the call asynchronously and prints out the signature details when a response
     has been received.</p>
     <pre>
     byte[] plainTextData = new byte[100];
     new Random&#40;0x1234567L&#41;.nextBytes&#40;plainTextData&#41;;
     SignResult signReponse = cryptographyClient.sign&#40;SignatureAlgorithm.ES256, plainTextData&#41;;
     System.out.printf&#40;&quot;Received signature of length %d with algorithm %s&quot;, signReponse.getSignature&#40;&#41;.length,
         new Context&#40;key1, value1&#41;&#41;;
     </pre>
  parameters:
  - description: The algorithm to use for signing.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm&text=SignatureAlgorithm" data-throw-if-not-resolved="False" />
  - description: The content from which signature is to be created.
    name: data
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public SignResult signData(SignatureAlgorithm algorithm, byte[] data, Context context)
  returns:
    description: A <xref uid="SignResult" data-throw-if-not-resolved="false">SignResult</xref> whose <xref uid="SignResult#getSignature()" data-throw-if-not-resolved="false">signature</xref> contains the created signature.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.SignResult?alt=com.azure.security.keyvault.keys.cryptography.models.SignResult&text=SignResult" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.security.keyvault.keys.cryptography
artifact: com.azure:azure-security-keyvault-keys:4.2.0
