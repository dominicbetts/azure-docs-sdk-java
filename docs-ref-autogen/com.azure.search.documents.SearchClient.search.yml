### YamlMime:JavaMember
uid: com.azure.search.documents.SearchClient.search*
fullName: com.azure.search.documents.SearchClient.search
name: search
nameWithType: SearchClient.search
members:
- uid: com.azure.search.documents.SearchClient.search(java.lang.String)
  fullName: com.azure.search.documents.SearchClient.search(String searchText)
  name: search(String searchText)
  nameWithType: SearchClient.search(String searchText)
  summary: "Searches for documents in the Azure Cognitive Search index.\n <p>\n If <code>searchText</code> is set to <code>null</code> or <code>\"*\"</code> all documents will be matched, see\n <a href=\"https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search\">simple query\n syntax in Azure Cognitive Search</a> for more information about search query syntax.\n\n <p><strong>Code Sample</strong></p>\n\n <p> Search text from documents in service. </p>\n\n <pre>\n SearchPagedIterable searchPagedIterable = searchClient.search&#40;&quot;searchText&quot;&#41;;\n System.out.printf&#40;&quot;There are around %d results.&quot;, searchPagedIterable.getTotalCount&#40;&#41;&#41;;\n \n for &#40;SearchPagedResponse resultResponse: searchPagedIterable.iterableByPage&#40;&#41;&#41; &#123;\n     System.out.println&#40;&quot;The status code of the response is &quot; + resultResponse.getStatusCode&#40;&#41;&#41;;\n     resultResponse.getValue&#40;&#41;.forEach&#40;searchResult -&gt; &#123;\n         for &#40;Map.Entry&lt;String, Object&gt; keyValuePair: searchResult\n             .getDocument&#40;SearchDocument.class&#41;.entrySet&#40;&#41;&#41; &#123;\n             System.out.printf&#40;&quot;Document key %s, document value %s&quot;, keyValuePair.getKey&#40;&#41;,\n                 keyValuePair.getValue&#40;&#41;&#41;;\n         &#125;\n     &#125;&#41;;\n &#125;\n </pre>"
  parameters:
  - description: A full-text search query expression.
    name: searchText
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public SearchPagedIterable search(String searchText)
  returns:
    description: |-
      A <xref uid="SearchPagedIterable" data-throw-if-not-resolved="false">SearchPagedIterable</xref> that iterates over <xref uid="SearchResult" data-throw-if-not-resolved="false">SearchResult</xref> objects and provides access to the
       <xref uid="SearchPagedResponse" data-throw-if-not-resolved="false">SearchPagedResponse</xref> object for each page containing HTTP response and count, facet, and coverage
       information.
    type: <xref href="com.azure.search.documents.util.SearchPagedIterable?alt=com.azure.search.documents.util.SearchPagedIterable&text=SearchPagedIterable" data-throw-if-not-resolved="False" />
- uid: com.azure.search.documents.SearchClient.search(java.lang.String,com.azure.search.documents.models.SearchOptions,com.azure.core.util.Context)
  fullName: com.azure.search.documents.SearchClient.search(String searchText, SearchOptions searchOptions, Context context)
  name: search(String searchText, SearchOptions searchOptions, Context context)
  nameWithType: SearchClient.search(String searchText, SearchOptions searchOptions, Context context)
  summary: |-
    Searches for documents in the Azure Cognitive Search index.
     <p>
     If <code>searchText</code> is set to <code>null</code> or <code>"*"</code> all documents will be matched, see
     <a href="https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search">simple query
     syntax in Azure Cognitive Search</a> for more information about search query syntax.

     <p><strong>Code Sample</strong></p>

     <p> Search text from documents in service with option. </p>

     <pre>
     SearchPagedIterable searchPagedIterable = searchClient.search&#40;&quot;searchText&quot;,
         new SearchOptions&#40;&#41;.setOrderBy&#40;&quot;hotelId desc&quot;&#41;, new Context&#40;key1, value1&#41;&#41;;
     System.out.printf&#40;&quot;There are around %d results.&quot;, searchPagedIterable.getTotalCount&#40;&#41;&#41;;
     for &#40;SearchPagedResponse resultResponse: searchPagedIterable.iterableByPage&#40;&#41;&#41; &#123;
         System.out.println&#40;&quot;The status code of the response is &quot; + resultResponse.getStatusCode&#40;&#41;&#41;;
         resultResponse.getValue&#40;&#41;.forEach&#40;searchResult -&gt; &#123;
             for &#40;Map.Entry&lt;String, Object&gt; keyValuePair: searchResult
                 .getDocument&#40;SearchDocument.class&#41;.entrySet&#40;&#41;&#41; &#123;
                 System.out.printf&#40;&quot;Document key %s, document value %s&quot;, keyValuePair.getKey&#40;&#41;,
                     keyValuePair.getValue&#40;&#41;&#41;;
             &#125;
         &#125;&#41;;
     &#125;
     </pre>
  parameters:
  - description: A full-text search query expression.
    name: searchText
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Parameters to further refine the search query
    name: searchOptions
    type: <xref href="com.azure.search.documents.models.SearchOptions?alt=com.azure.search.documents.models.SearchOptions&text=SearchOptions" data-throw-if-not-resolved="False" />
  - description: additional context that is passed through the Http pipeline during the service call
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public SearchPagedIterable search(String searchText, SearchOptions searchOptions, Context context)
  returns:
    description: |-
      A <xref uid="SearchPagedIterable" data-throw-if-not-resolved="false">SearchPagedIterable</xref> that iterates over <xref uid="SearchResult" data-throw-if-not-resolved="false">SearchResult</xref> objects and provides access to the
       <xref uid="SearchPagedResponse" data-throw-if-not-resolved="false">SearchPagedResponse</xref> object for each page containing HTTP response and count, facet, and coverage
       information.
    type: <xref href="com.azure.search.documents.util.SearchPagedIterable?alt=com.azure.search.documents.util.SearchPagedIterable&text=SearchPagedIterable" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.search.documents
artifact: com.azure:azure-search-documents:11.0.0
