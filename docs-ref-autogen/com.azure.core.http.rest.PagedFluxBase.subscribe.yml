### YamlMime:JavaMember
uid: com.azure.core.http.rest.PagedFluxBase.subscribe*
fullName: com.azure.core.http.rest.PagedFluxBase<T,P>.subscribe
name: subscribe
nameWithType: PagedFluxBase<T,P>.subscribe
members:
- uid: com.azure.core.http.rest.PagedFluxBase.subscribe(reactor.core.CoreSubscriber<? super T>)
  fullName: com.azure.core.http.rest.PagedFluxBase<T,P>.subscribe(CoreSubscriber<? super T> coreSubscriber)
  name: subscribe(CoreSubscriber<? super T> coreSubscriber)
  nameWithType: PagedFluxBase<T,P>.subscribe(CoreSubscriber<? super T> coreSubscriber)
  summary: "Subscribe to consume all items of type <code>T</code> in the sequence respectively.\n This is recommended for most common scenarios. This will seamlessly fetch next\n page when required and provide with a <xref uid=\"Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> of items.\n\n <p><strong>Code sample</strong></p>\n <pre>\n pagedFluxBase.subscribe&#40;new BaseSubscriber&lt;Integer&gt;&#40;&#41; &#123;\n         &#123;@literal @&#125;Override\n         protected void hookOnSubscribe&#40;Subscription subscription&#41; &#123;\n             System.out.println&#40;&quot;Subscribed to paged flux processing items&quot;&#41;;\n             super.hookOnSubscribe&#40;subscription&#41;;\n         &#125;\n \n         &#123;@literal @&#125;Override\n         protected void hookOnNext&#40;Integer value&#41; &#123;\n             System.out.println&#40;&quot;Processing item &quot; + value&#41;;\n         &#125;\n \n         &#123;@literal @&#125;Override\n         protected void hookOnComplete&#40;&#41; &#123;\n             System.out.println&#40;&quot;Completed processing&quot;&#41;;\n         &#125;\n     &#125;&#41;;\n </pre>"
  overridden: com.azure.core.util.paging.ContinuablePagedFluxCore.subscribe(reactor.core.CoreSubscriber<? super T>)
  parameters:
  - description: The subscriber for this <xref uid="PagedFluxBase" data-throw-if-not-resolved="false">PagedFluxBase</xref>
    name: coreSubscriber
    type: <xref href="reactor.core.CoreSubscriber?alt=reactor.core.CoreSubscriber&text=CoreSubscriber" data-throw-if-not-resolved="False" />&lt;<xref href="? super T?alt=? super T&text=? super T" data-throw-if-not-resolved="False" />&gt;
  syntax: public void subscribe(CoreSubscriber<? super T> coreSubscriber)
type: method
metadata: {}
package: com.azure.core.http.rest
artifact: com.azure:azure-core:1.7.0
