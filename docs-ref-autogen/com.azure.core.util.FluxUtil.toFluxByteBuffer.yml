### YamlMime:JavaMember
uid: com.azure.core.util.FluxUtil.toFluxByteBuffer*
fullName: com.azure.core.util.FluxUtil.toFluxByteBuffer
name: toFluxByteBuffer
nameWithType: FluxUtil.toFluxByteBuffer
members:
- uid: com.azure.core.util.FluxUtil.toFluxByteBuffer(java.io.InputStream)
  fullName: com.azure.core.util.FluxUtil.toFluxByteBuffer(InputStream inputStream)
  name: toFluxByteBuffer(InputStream inputStream)
  nameWithType: FluxUtil.toFluxByteBuffer(InputStream inputStream)
  summary: |-
    Converts an <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> into a <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> of <xref uid="ByteBuffer" data-throw-if-not-resolved="false">ByteBuffer</xref> using a chunk size of 4096.
     <p>
     Given that <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> is not guaranteed to be replayable the returned <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> should be considered
     non-replayable as well.
     <p>
     If the passed <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> is <code>null</code> <xref uid="Flux#empty()" data-throw-if-not-resolved="false">Flux#empty()</xref> will be returned.
  parameters:
  - description: The <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> to convert into a <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref>.
    name: inputStream
    type: <xref href="java.io.InputStream?alt=java.io.InputStream&text=InputStream" data-throw-if-not-resolved="False" />
  syntax: public static Flux<ByteBuffer> toFluxByteBuffer(InputStream inputStream)
  returns:
    description: A <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> of <xref uid="ByteBuffer" data-throw-if-not-resolved="false">ByteBuffers</xref> that contains the contents of the stream.
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.core.util.FluxUtil.toFluxByteBuffer(java.io.InputStream,int)
  fullName: com.azure.core.util.FluxUtil.toFluxByteBuffer(InputStream inputStream, int chunkSize)
  name: toFluxByteBuffer(InputStream inputStream, int chunkSize)
  nameWithType: FluxUtil.toFluxByteBuffer(InputStream inputStream, int chunkSize)
  summary: |-
    Converts an <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> into a <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> of <xref uid="ByteBuffer" data-throw-if-not-resolved="false">ByteBuffer</xref>.
     <p>
     Given that <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> is not guaranteed to be replayable the returned <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> should be considered
     non-replayable as well.
     <p>
     If the passed <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> is <code>null</code> <xref uid="Flux#empty()" data-throw-if-not-resolved="false">Flux#empty()</xref> will be returned.
  parameters:
  - description: The <xref uid="InputStream" data-throw-if-not-resolved="false">InputStream</xref> to convert into a <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref>.
    name: inputStream
    type: <xref href="java.io.InputStream?alt=java.io.InputStream&text=InputStream" data-throw-if-not-resolved="False" />
  - description: The requested size for each <xref uid="ByteBuffer" data-throw-if-not-resolved="false">ByteBuffer</xref>.
    name: chunkSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public static Flux<ByteBuffer> toFluxByteBuffer(InputStream inputStream, int chunkSize)
  returns:
    description: A <xref uid="Flux" data-throw-if-not-resolved="false">Flux</xref> of <xref uid="ByteBuffer" data-throw-if-not-resolved="false">ByteBuffers</xref> that contains the contents of the stream.
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.core.util
artifact: com.azure:azure-core:1.7.0
