### YamlMime:JavaMember
uid: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment*
fullName: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment
name: analyzeSentiment
nameWithType: TextAnalyticsClient.analyzeSentiment
members:
- uid: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment(java.lang.String)
  fullName: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment(String document)
  name: analyzeSentiment(String document)
  nameWithType: TextAnalyticsClient.analyzeSentiment(String document)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label\n (Positive, Negative, and Neutral) for the document and each sentence within i\n\n This method will use the default language that sets up in\n <xref uid=\"TextAnalyticsClientBuilder#defaultLanguage(String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as\n the language.\n\n <p><strong>Code Sample</strong></p>\n <p>Analyze the sentiments of documents</p>\n <pre>\n final DocumentSentiment documentSentiment =\n     textAnalyticsClient.analyzeSentiment&#40;&quot;The hotel was dark and unclean.&quot;&#41;;\n \n System.out.printf&#40;\n     &quot;Recognized sentiment: %s, positive score: %.2f, neutral score: %.2f, negative score: %.2f.%n&quot;,\n     documentSentiment.getSentiment&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n \n for &#40;SentenceSentiment sentenceSentiment : documentSentiment.getSentences&#40;&#41;&#41; &#123;\n     System.out.printf&#40;\n         &quot;Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f, negative score: %.2f.%n&quot;,\n         sentenceSentiment.getSentiment&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n &#125;\n </pre>"
  parameters:
  - description: |-
      The document to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: document
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public DocumentSentiment analyzeSentiment(String document)
  returns:
    description: A <xref uid="DocumentSentiment" data-throw-if-not-resolved="false">analyzed document sentiment</xref> of the document.
    type: <xref href="com.azure.ai.textanalytics.models.DocumentSentiment?alt=com.azure.ai.textanalytics.models.DocumentSentiment&text=DocumentSentiment" data-throw-if-not-resolved="False" />
- uid: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment(java.lang.String,java.lang.String)
  fullName: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentiment(String document, String language)
  name: analyzeSentiment(String document, String language)
  nameWithType: TextAnalyticsClient.analyzeSentiment(String document, String language)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label\n (Positive, Negative, and Neutral) for the document and each sentence within i\n\n <p><strong>Code Sample</strong></p>\n <p>Analyze the sentiments in a document with a provided language representation.</p>\n <pre>\n final DocumentSentiment documentSentiment = textAnalyticsClient.analyzeSentiment&#40;\n     &quot;The hotel was dark and unclean.&quot;, &quot;en&quot;&#41;;\n \n System.out.printf&#40;\n     &quot;Recognized sentiment: %s, positive score: %.2f, neutral score: %.2f, negative score: %.2f.%n&quot;,\n     documentSentiment.getSentiment&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n     documentSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n \n for &#40;SentenceSentiment sentenceSentiment : documentSentiment.getSentences&#40;&#41;&#41; &#123;\n     System.out.printf&#40;\n         &quot;Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f, negative score: %.2f.%n&quot;,\n         sentenceSentiment.getSentiment&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n         sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n &#125;\n </pre>"
  parameters:
  - description: |-
      The document to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: document
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The 2 letter ISO 639-1 representation of language for the document. If not set, uses "en" for
       English as default.
    name: language
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public DocumentSentiment analyzeSentiment(String document, String language)
  returns:
    description: A <xref uid="DocumentSentiment" data-throw-if-not-resolved="false">analyzed document sentiment</xref> of the document.
    type: <xref href="com.azure.ai.textanalytics.models.DocumentSentiment?alt=com.azure.ai.textanalytics.models.DocumentSentiment&text=DocumentSentiment" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.ai.textanalytics
artifact: com.azure:azure-ai-textanalytics:1.0.1
