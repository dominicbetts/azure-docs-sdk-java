### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.PageBlobAsyncClient.uploadPagesFromUrlWithResponse*
fullName: com.azure.storage.blob.specialized.PageBlobAsyncClient.uploadPagesFromUrlWithResponse
name: uploadPagesFromUrlWithResponse
nameWithType: PageBlobAsyncClient.uploadPagesFromUrlWithResponse
members:
- uid: com.azure.storage.blob.specialized.PageBlobAsyncClient.uploadPagesFromUrlWithResponse(com.azure.storage.blob.models.PageRange,java.lang.String,java.lang.Long,byte[],com.azure.storage.blob.models.PageBlobRequestConditions,com.azure.storage.blob.models.BlobRequestConditions)
  fullName: com.azure.storage.blob.specialized.PageBlobAsyncClient.uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions)
  name: uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions)
  nameWithType: PageBlobAsyncClient.uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions)
  summary: "Writes one or more pages from the source page blob to this page blob. The write size must be a multiple of 512.\n For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-page\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n PageRange pageRange = new PageRange&#40;&#41;\n     .setStart&#40;0&#41;\n     .setEnd&#40;511&#41;;\n InputStream dataStream = new ByteArrayInputStream&#40;data.getBytes&#40;StandardCharsets.UTF_8&#41;&#41;;\n byte[] sourceContentMD5 = new byte[512];\n PageBlobRequestConditions pageBlobRequestConditions = new PageBlobRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n BlobRequestConditions sourceRequestConditions = new BlobRequestConditions&#40;&#41;\n     .setIfUnmodifiedSince&#40;OffsetDateTime.now&#40;&#41;.minusDays&#40;3&#41;&#41;;\n \n client.uploadPagesFromUrlWithResponse&#40;pageRange, url, sourceOffset, sourceContentMD5, pageBlobRequestConditions,\n         sourceRequestConditions&#41;\n     .subscribe&#40;response -&gt; System.out.printf&#40;\n         &quot;Uploaded page blob from URL with sequence number %s%n&quot;, response.getValue&#40;&#41;.getBlobSequenceNumber&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: |-
      The destination <xref uid="PageRange" data-throw-if-not-resolved="false">PageRange</xref> range. Given that pages must be aligned with 512-byte boundaries,
       the start offset must be a modulus of 512 and the end offset must be a modulus of 512 - 1. Examples of valid byte
       ranges are 0-511, 512-1023, etc.
    name: range
    type: <xref href="com.azure.storage.blob.models.PageRange?alt=com.azure.storage.blob.models.PageRange&text=PageRange" data-throw-if-not-resolved="False" />
  - description: |-
      The url to the blob that will be the source of the copy.  A source blob in the same storage
       account can be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
       must either be public or must be authenticated via a shared access signature. If the source blob is public, no
       authentication is required to perform the operation.
    name: sourceUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The source offset to copy from.  Pass null or 0 to copy from the beginning of source blob.
    name: sourceOffset
    type: <xref href="java.lang.Long?alt=java.lang.Long&text=Long" data-throw-if-not-resolved="False" />
  - description: |-
      An MD5 hash of the page content. This hash is used to verify the integrity of the page
       during transport. When this header is specified, the storage service compares the hash of the content that has
       arrived with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not
       match, the operation will fail.
    name: sourceContentMd5
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: <xref uid="PageBlobRequestConditions" data-throw-if-not-resolved="false">PageBlobRequestConditions</xref>
    name: destRequestConditions
    type: <xref href="com.azure.storage.blob.models.PageBlobRequestConditions?alt=com.azure.storage.blob.models.PageBlobRequestConditions&text=PageBlobRequestConditions" data-throw-if-not-resolved="False" />
  - description: <xref uid="BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    name: sourceRequestConditions
    type: <xref href="com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<PageBlobItem>> uploadPagesFromUrlWithResponse(PageRange range, String sourceUrl, Long sourceOffset, byte[] sourceContentMd5, PageBlobRequestConditions destRequestConditions, BlobRequestConditions sourceRequestConditions)
  returns:
    description: A reactive response containing the information of the uploaded pages.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.blob.models.PageBlobItem?alt=com.azure.storage.blob.models.PageBlobItem&text=PageBlobItem" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0
