### YamlMime:JavaMember
uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.mergeCertificateWithResponse*
fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.mergeCertificateWithResponse
name: mergeCertificateWithResponse
nameWithType: CertificateAsyncClient.mergeCertificateWithResponse
members:
- uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.mergeCertificateWithResponse(com.azure.security.keyvault.certificates.models.MergeCertificateOptions)
  fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions)
  name: mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions)
  nameWithType: CertificateAsyncClient.mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions)
  summary: |-
    Merges a certificate or a certificate chain with a key pair currently available in the service. This operation requires
     the <code>certificates/create</code> permission.

     <p><strong>Code Samples</strong></p>
     <p> Merges a certificate with a kay pair available in the service.</p>

     <pre>
     List&lt;byte[]&gt; x509CertsToMerge = new ArrayList&lt;&gt;&#40;&#41;;
     MergeCertificateOptions mergeConfig =
         new MergeCertificateOptions&#40;&quot;certificateName&quot;, x509CertsToMerge&#41;.setEnabled&#40;false&#41;;
     certificateAsyncClient.mergeCertificateWithResponse&#40;mergeConfig&#41;
         .subscribe&#40;certificateResponse -&gt; System.out.printf&#40;&quot;Received Certificate with name %s and key id %s&quot;,
             certificateResponse.getValue&#40;&#41;.getProperties&#40;&#41;.getName&#40;&#41;, certificateResponse.getValue&#40;&#41;.getKeyId&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: the merge certificate options holding the x509 certificates.
    name: mergeCertificateOptions
    type: <xref href="com.azure.security.keyvault.certificates.models.MergeCertificateOptions?alt=com.azure.security.keyvault.certificates.models.MergeCertificateOptions&text=MergeCertificateOptions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<KeyVaultCertificateWithPolicy>> mergeCertificateWithResponse(MergeCertificateOptions mergeCertificateOptions)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains the merged certificate.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy?alt=com.azure.security.keyvault.certificates.models.KeyVaultCertificateWithPolicy&text=KeyVaultCertificateWithPolicy" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.certificates
artifact: com.azure:azure-security-keyvault-certificates:4.1.0
