### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteFileWithResponse*
fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteFileWithResponse
name: deleteFileWithResponse
nameWithType: DataLakeFileSystemAsyncClient.deleteFileWithResponse
members:
- uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteFileWithResponse(java.lang.String,com.azure.storage.file.datalake.models.DataLakeRequestConditions)
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteFileWithResponse(String fileName, DataLakeRequestConditions requestConditions)
  name: deleteFileWithResponse(String fileName, DataLakeRequestConditions requestConditions)
  nameWithType: DataLakeFileSystemAsyncClient.deleteFileWithResponse(String fileName, DataLakeRequestConditions requestConditions)
  summary: "Deletes the specified file in the file system. If the file doesn't exist the operation fails.\n For more information see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete\">Azure\n Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions&#40;&#41;\n     .setLeaseId&#40;leaseId&#41;;\n \n client.deleteFileWithResponse&#40;fileName, requestConditions&#41;\n     .subscribe&#40;response -&gt; System.out.println&#40;&quot;Delete request completed&quot;&#41;&#41;;\n </pre>"
  parameters:
  - description: Name of the file to delete.
    name: fileName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> deleteFileWithResponse(String fileName, DataLakeRequestConditions requestConditions)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing containing status code and HTTP headers
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
