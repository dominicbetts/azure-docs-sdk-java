### YamlMime:JavaMember
uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey*
fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey
name: wrapKey
nameWithType: CryptographyClient.wrapKey
members:
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey(KeyWrapAlgorithm algorithm, byte[] key)
  name: wrapKey(KeyWrapAlgorithm algorithm, byte[] key)
  nameWithType: CryptographyClient.wrapKey(KeyWrapAlgorithm algorithm, byte[] key)
  summary: |-
    Wraps a symmetric key using the configured key. The wrap operation supports wrapping a symmetric key with both
     symmetric and asymmetric keys. This operation requires the keys/wrapKey permission.

     <p>The <xref uid="KeyWrapAlgorithm" data-throw-if-not-resolved="false">wrap algorithm</xref> indicates the type of algorithm to use for wrapping the specified
     key content. Possible values include:
     <xref uid="KeyWrapAlgorithm#RSA1_5" data-throw-if-not-resolved="false">RSA1_5</xref>, <xref uid="KeyWrapAlgorithm#RSA_OAEP" data-throw-if-not-resolved="false">RSA_OAEP</xref> and <xref uid="KeyWrapAlgorithm#RSA_OAEP_256" data-throw-if-not-resolved="false">RSA_OAEP_256</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Wraps the key content. Subscribes to the call asynchronously and prints out the wrapped key details when a
     response has been received.</p>
     <pre>
     byte[] key = new byte[100];
     new Random&#40;0x1234567L&#41;.nextBytes&#40;key&#41;;
     WrapResult wrapResult = cryptographyClient.wrapKey&#40;KeyWrapAlgorithm.RSA_OAEP, key&#41;;
     System.out.printf&#40;&quot;Received encypted key of length %d with algorithm %s&quot;, wrapResult.getEncryptedKey&#40;&#41;.length,
         wrapResult.getAlgorithm&#40;&#41;.toString&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The encryption algorithm to use for wrapping the key.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm&text=KeyWrapAlgorithm" data-throw-if-not-resolved="False" />
  - description: The key content to be wrapped
    name: key
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  syntax: public WrapResult wrapKey(KeyWrapAlgorithm algorithm, byte[] key)
  returns:
    description: |-
      The <xref uid="WrapResult" data-throw-if-not-resolved="false">WrapResult</xref> whose <xref uid="WrapResult#getEncryptedKey()" data-throw-if-not-resolved="false">encrypted key</xref> contains the wrapped
           key result.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.WrapResult?alt=com.azure.security.keyvault.keys.cryptography.models.WrapResult&text=WrapResult" data-throw-if-not-resolved="False" />
- uid: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[],com.azure.core.util.Context)
  fullName: com.azure.security.keyvault.keys.cryptography.CryptographyClient.wrapKey(KeyWrapAlgorithm algorithm, byte[] key, Context context)
  name: wrapKey(KeyWrapAlgorithm algorithm, byte[] key, Context context)
  nameWithType: CryptographyClient.wrapKey(KeyWrapAlgorithm algorithm, byte[] key, Context context)
  summary: |-
    Wraps a symmetric key using the configured key. The wrap operation supports wrapping a symmetric key with both
     symmetric and asymmetric keys. This operation requires the keys/wrapKey permission.

     <p>The <xref uid="KeyWrapAlgorithm" data-throw-if-not-resolved="false">wrap algorithm</xref> indicates the type of algorithm to use for wrapping the specified
     key content. Possible values include:
     <xref uid="KeyWrapAlgorithm#RSA1_5" data-throw-if-not-resolved="false">RSA1_5</xref>, <xref uid="KeyWrapAlgorithm#RSA_OAEP" data-throw-if-not-resolved="false">RSA_OAEP</xref> and <xref uid="KeyWrapAlgorithm#RSA_OAEP_256" data-throw-if-not-resolved="false">RSA_OAEP_256</xref></p>

     <p><strong>Code Samples</strong></p>
     <p>Wraps the key content. Subscribes to the call asynchronously and prints out the wrapped key details when a
     response has been received.</p>
     <pre>
     byte[] keyContent = new byte[100];
     new Random&#40;0x1234567L&#41;.nextBytes&#40;keyContent&#41;;
     WrapResult keyWrapResponse = cryptographyClient.wrapKey&#40;KeyWrapAlgorithm.RSA_OAEP, keyContent&#41;;
     System.out.printf&#40;&quot;Received encypted key of length %d with algorithm %s&quot;, keyWrapResponse.getEncryptedKey&#40;&#41;.length,
         keyWrapResponse.getAlgorithm&#40;&#41;.toString&#40;&#41;, new Context&#40;key1, value1&#41;&#41;;
     </pre>
  parameters:
  - description: The encryption algorithm to use for wrapping the key.
    name: algorithm
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm?alt=com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm&text=KeyWrapAlgorithm" data-throw-if-not-resolved="False" />
  - description: The key content to be wrapped
    name: key
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public WrapResult wrapKey(KeyWrapAlgorithm algorithm, byte[] key, Context context)
  returns:
    description: |-
      The <xref uid="WrapResult" data-throw-if-not-resolved="false">WrapResult</xref> whose <xref uid="WrapResult#getEncryptedKey()" data-throw-if-not-resolved="false">encrypted key</xref> contains the wrapped
           key result.
    type: <xref href="com.azure.security.keyvault.keys.cryptography.models.WrapResult?alt=com.azure.security.keyvault.keys.cryptography.models.WrapResult&text=WrapResult" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.security.keyvault.keys.cryptography
artifact: com.azure:azure-security-keyvault-keys:4.2.0
