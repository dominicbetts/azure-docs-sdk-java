### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.setPermissionsWithResponse*
fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.setPermissionsWithResponse
name: setPermissionsWithResponse
nameWithType: DataLakePathAsyncClient.setPermissionsWithResponse
members:
- uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.setPermissionsWithResponse(com.azure.storage.file.datalake.models.PathPermissions,java.lang.String,java.lang.String,com.azure.storage.file.datalake.models.DataLakeRequestConditions)
  fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.setPermissionsWithResponse(PathPermissions permissions, String group, String owner, DataLakeRequestConditions requestConditions)
  name: setPermissionsWithResponse(PathPermissions permissions, String group, String owner, DataLakeRequestConditions requestConditions)
  nameWithType: DataLakePathAsyncClient.setPermissionsWithResponse(PathPermissions permissions, String group, String owner, DataLakeRequestConditions requestConditions)
  summary: "Changes the permissions, group and/or owner for a resource.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n PathPermissions permissions = new PathPermissions&#40;&#41;\n     .setGroup&#40;new RolePermissions&#40;&#41;.setExecutePermission&#40;true&#41;.setReadPermission&#40;true&#41;&#41;\n     .setOwner&#40;new RolePermissions&#40;&#41;.setExecutePermission&#40;true&#41;.setReadPermission&#40;true&#41;.setWritePermission&#40;true&#41;&#41;\n     .setOther&#40;new RolePermissions&#40;&#41;.setReadPermission&#40;true&#41;&#41;;\n String group = &quot;group&quot;;\n String owner = &quot;owner&quot;;\n \n client.setPermissionsWithResponse&#40;permissions, group, owner, requestConditions&#41;.subscribe&#40;\n     response -&gt; System.out.printf&#40;&quot;Last Modified Time: %s&quot;, response.getValue&#40;&#41;.getLastModified&#40;&#41;&#41;&#41;;\n </pre>\n\n <p>For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\">Azure Docs</a></p>"
  parameters:
  - description: <xref uid="PathPermissions" data-throw-if-not-resolved="false">PathPermissions</xref>
    name: permissions
    type: <xref href="com.azure.storage.file.datalake.models.PathPermissions?alt=com.azure.storage.file.datalake.models.PathPermissions&text=PathPermissions" data-throw-if-not-resolved="False" />
  - description: The group of the resource.
    name: group
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The owner of the resource.
    name: owner
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<PathInfo>> setPermissionsWithResponse(PathPermissions permissions, String group, String owner, DataLakeRequestConditions requestConditions)
  returns:
    description: A reactive response containing the resource info.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathInfo?alt=com.azure.storage.file.datalake.models.PathInfo&text=PathInfo" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
