### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSettingWithResponse*
fullName: com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSettingWithResponse
name: setConfigurationSettingWithResponse
nameWithType: ConfigurationClient.setConfigurationSettingWithResponse
members:
- uid: com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSettingWithResponse(com.azure.data.appconfiguration.models.ConfigurationSetting,boolean,com.azure.core.util.Context)
  fullName: com.azure.data.appconfiguration.ConfigurationClient.setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged, Context context)
  name: setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged, Context context)
  nameWithType: ConfigurationClient.setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged, Context context)
  summary: "Creates or updates a configuration value in the service. Partial updates are not supported and the entire\n configuration setting is updated.\n\n If <xref uid=\"ConfigurationSetting#getETag()\" data-throw-if-not-resolved=\"false\">ETag</xref> is specified, the configuration value is updated if the current\n setting's ETag matches. If the ETag's value is equal to the wildcard character (<code>\"*\"</code>), the setting will\n always be updated.\n\n <p><strong>Code Samples</strong></p>\n\n <p>Add a setting with the key \"prodDBConnection\" and value \"db_connection\".</p>\n <p>Update setting's value \"db_connection\" to \"updated_db_connection\"</p>\n\n <pre>\n &#47;&#47; Add a setting with the key &quot;prodDBConnection&quot;, label &quot;westUS&quot;, and value &quot;db_connection&quot;\n Response&lt;ConfigurationSetting&gt; responseSetting = configurationClient.setConfigurationSettingWithResponse&#40;\n     new ConfigurationSetting&#40;&#41;.setKey&#40;&quot;prodDBConnection&quot;&#41;.setLabel&#40;&quot;westUS&quot;&#41;.setValue&#40;&quot;db_connection&quot;&#41;,\n     false,\n     new Context&#40;key2, value2&#41;&#41;;\n final ConfigurationSetting initSetting = responseSetting.getValue&#40;&#41;;\n System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, initSetting.getKey&#40;&#41;, initSetting.getValue&#40;&#41;&#41;;\n \n &#47;&#47; Update the value of the setting to &quot;updated_db_connection&quot;.\n responseSetting = configurationClient.setConfigurationSettingWithResponse&#40;\n     new ConfigurationSetting&#40;&#41;.setKey&#40;&quot;prodDBConnection&quot;&#41;.setLabel&#40;&quot;westUS&quot;&#41;.setValue&#40;&quot;updated_db_connection&quot;&#41;,\n     false,\n     new Context&#40;key2, value2&#41;&#41;;\n final ConfigurationSetting updatedSetting = responseSetting.getValue&#40;&#41;;\n System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, updatedSetting.getKey&#40;&#41;, updatedSetting.getValue&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: The setting to create or update based on its key, optional label and optional ETag combination.
    name: setting
    type: <xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />
  - description: |-
      A boolean indicates if <code>setting</code> <xref uid="ConfigurationSetting#getETag" data-throw-if-not-resolved="false">ETag</xref> is used as a
       IF-MATCH header.
    name: ifUnchanged
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ConfigurationSetting> setConfigurationSettingWithResponse(ConfigurationSetting setting, boolean ifUnchanged, Context context)
  returns:
    description: |-
      A REST response contains the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> that was created or updated, or <code>null</code>,
       if the configuration value does not exist or the key is an invalid value (which will also throw
       ServiceRequestException described below).
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
