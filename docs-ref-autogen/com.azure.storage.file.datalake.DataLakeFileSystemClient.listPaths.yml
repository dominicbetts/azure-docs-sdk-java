### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths*
fullName: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths
name: listPaths
nameWithType: DataLakeFileSystemClient.listPaths
members:
- uid: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths()
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths()
  name: listPaths()
  nameWithType: DataLakeFileSystemClient.listPaths()
  summary: |-
    Returns a lazy loaded list of files/directories in this account. The returned <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> can be
     consumed while new items are automatically retrieved as needed. For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list#filesystem">Azure Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     client.listPaths&#40;&#41;.forEach&#40;path -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;, path.getName&#40;&#41;&#41;&#41;;
     </pre>
  syntax: public PagedIterable<PathItem> listPaths()
  returns:
    description: The list of files/directories.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths(com.azure.storage.file.datalake.models.ListPathsOptions,java.time.Duration)
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemClient.listPaths(ListPathsOptions options, Duration timeout)
  name: listPaths(ListPathsOptions options, Duration timeout)
  nameWithType: DataLakeFileSystemClient.listPaths(ListPathsOptions options, Duration timeout)
  summary: "Returns a lazy loaded list of files/directories in this account. The returned <xref uid=\"PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> can be\n consumed while new items are automatically retrieved as needed. For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list#filesystem\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n ListPathsOptions options = new ListPathsOptions&#40;&#41;\n     .setPath&#40;&quot;pathPrefixToMatch&quot;&#41;\n     .setMaxResults&#40;10&#41;;\n \n client.listPaths&#40;options, timeout&#41;.forEach&#40;path -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;, path.getName&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: A <xref uid="ListPathsOptions" data-throw-if-not-resolved="false">ListPathsOptions</xref> which specifies what data should be returned by the service.
    name: options
    type: <xref href="com.azure.storage.file.datalake.models.ListPathsOptions?alt=com.azure.storage.file.datalake.models.ListPathsOptions&text=ListPathsOptions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<PathItem> listPaths(ListPathsOptions options, Duration timeout)
  returns:
    description: The list of files/directories.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
