### YamlMime:JavaType
uid: com.microsoft.azure.functions.annotation.TableInput
fullName: com.microsoft.azure.functions.annotation.TableInput
name: TableInput
nameWithType: TableInput
summary: |-
  Place this on a parameter whose value would come from storage table. The parameter type can be one of the following:

   *  Any native Java types such as int, String, byte\[\]
   *  Nullable values using Optional<T>
   *  Any POJO type

  The following example shows an HTTP trigger which returned the total count of the items in a table storage:

  ```java
  @FunctionName("getallcount")
   public int run(
      @HttpTrigger(name = "req",
                    methods = {"get"},
                    authLevel = AuthorizationLevel.ANONYMOUS) Object dummyShouldNotBeUsed,
      @TableInput(name = "items",
                   tableName = "mytablename",
                   partitionKey = "myparkey",
                   connection = "myconnvarname") MyItem[] items
   ) {
       return items.length;
   }
  ```
syntax: public interface TableInput implements Annotation
methods:
- com.microsoft.azure.functions.annotation.TableInput.connection()
- com.microsoft.azure.functions.annotation.TableInput.dataType()
- com.microsoft.azure.functions.annotation.TableInput.filter()
- com.microsoft.azure.functions.annotation.TableInput.name()
- com.microsoft.azure.functions.annotation.TableInput.partitionKey()
- com.microsoft.azure.functions.annotation.TableInput.rowKey()
- com.microsoft.azure.functions.annotation.TableInput.tableName()
- com.microsoft.azure.functions.annotation.TableInput.take()
type: interface
implements:
- <xref href="java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation" data-throw-if-not-resolved="False" />
metadata: {}
package: com.microsoft.azure.functions.annotation
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
