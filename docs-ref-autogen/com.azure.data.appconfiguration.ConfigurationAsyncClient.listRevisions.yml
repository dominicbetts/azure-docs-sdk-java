### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions*
fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions
name: listRevisions
nameWithType: ConfigurationAsyncClient.listRevisions
members:
- uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions(com.azure.data.appconfiguration.models.SettingSelector)
  fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.listRevisions(SettingSelector selector)
  name: listRevisions(SettingSelector selector)
  nameWithType: ConfigurationAsyncClient.listRevisions(SettingSelector selector)
  summary: |-
    Lists chronological/historical representation of <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> resource(s). Revisions are provided
     in descending order from their <xref uid="ConfigurationSetting#getLastModified()" data-throw-if-not-resolved="false">lastModified</xref> date.
     Revisions expire after a period of time, see <a href="https://azure.microsoft.com/en-us/pricing/details/app-configuration/">Pricing</a>
     for more information.

     If <code>selector</code> is <code>null</code>, then all the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSettings</xref> are fetched
     in their current state. Otherwise, the results returned match the parameters given in <code>selector</code>.

     <p><strong>Code Samples</strong></p>

     <p>Retrieve all revisions of the setting that has the key "prodDBConnection".</p>

     <pre>
     client.listRevisions&#40;new SettingSelector&#40;&#41;.setKeyFilter&#40;&quot;prodDBConnection&quot;&#41;&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;setting -&gt;
             System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: Optional. Used to filter configuration setting revisions from the service.
    name: selector
    type: <xref href="com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ConfigurationSetting> listRevisions(SettingSelector selector)
  returns:
    description: Revisions of the ConfigurationSetting
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
