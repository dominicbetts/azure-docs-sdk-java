### YamlMime:JavaMember
uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse*
fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse
name: createOrUpdateIndexerWithResponse
nameWithType: SearchIndexerClient.createOrUpdateIndexerWithResponse
members:
- uid: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse(com.azure.search.documents.indexes.models.SearchIndexer,boolean,com.azure.core.util.Context)
  fullName: com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  name: createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  nameWithType: SearchIndexerClient.createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  summary: |-
    Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists.

     <p><strong>Code Sample</strong></p>

     <p> Create or update search indexer named "searchIndexer". </p>

     <pre>
     SearchIndexer searchIndexerFromService = searchIndexerClient.getIndexer&#40;&quot;searchIndexer&quot;&#41;;
     searchIndexerFromService.setFieldMappings&#40;Collections.singletonList&#40;
         new FieldMapping&#40;&quot;hotelName&quot;&#41;.setTargetFieldName&#40;&quot;HotelName&quot;&#41;&#41;&#41;;
     Response&lt;SearchIndexer&gt; indexerFromService = searchIndexerClient.createOrUpdateIndexerWithResponse&#40;
         searchIndexerFromService, true, new Context&#40;key1, value1&#41;&#41;;
     System.out.printf&#40;&quot;The status code of the response is %s.%nThe indexer name is %s. &quot;
         + &quot;The target field name of indexer is %s.%n&quot;, indexerFromService.getStatusCode&#40;&#41;,
         indexerFromService.getValue&#40;&#41;.getName&#40;&#41;,
         indexerFromService.getValue&#40;&#41;.getFieldMappings&#40;&#41;.get&#40;0&#41;.getTargetFieldName&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The <xref uid="SearchIndexer" data-throw-if-not-resolved="false">SearchIndexer</xref> to create or update.
    name: indexer
    type: <xref href="com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer" data-throw-if-not-resolved="False" />
  - description: |-
      <code>true</code> to update if the <code>indexer</code> is the same as the current service value.
       <code>false</code> to always update existing value.
    name: onlyIfUnchanged
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  - description: additional context that is passed through the HTTP pipeline during the service call
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<SearchIndexer> createOrUpdateIndexerWithResponse(SearchIndexer indexer, boolean onlyIfUnchanged, Context context)
  returns:
    description: A response object containing the Indexer.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.search.documents.indexes.models.SearchIndexer?alt=com.azure.search.documents.indexes.models.SearchIndexer&text=SearchIndexer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.search.documents.indexes
artifact: com.azure:azure-search-documents:11.0.0
