### YamlMime:JavaMember
uid: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates*
fullName: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates
name: listPropertiesOfCertificates
nameWithType: CertificateClient.listPropertiesOfCertificates
members:
- uid: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates()
  fullName: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates()
  name: listPropertiesOfCertificates()
  nameWithType: CertificateClient.listPropertiesOfCertificates()
  summary: |-
    List certificates in a the key vault. Retrieves the set of certificates resources in the key vault and the individual
     certificate response in the iterable is represented by <xref uid="CertificateProperties" data-throw-if-not-resolved="false">CertificateProperties</xref> as only the certificate identifier, thumbprint,
     attributes and tags are provided in the response. The policy and individual certificate versions are not listed in
     the response. This operation requires the certificates/list permission.

     <p>It is possible to get certificates with all the properties excluding the policy from this information. Loop over the <xref uid="CertificateProperties" data-throw-if-not-resolved="false">CertificateProperties</xref> and
     call <xref uid="CertificateClient#getCertificateVersion(String, String)" data-throw-if-not-resolved="false">CertificateClient#getCertificateVersion(String, String)</xref> . This will return the <xref uid="KeyVaultCertificate" data-throw-if-not-resolved="false">certificate</xref>
     with all its properties excluding the policy.</p>

     <pre>
     for &#40;CertificateProperties certificateProperties : certificateClient.listPropertiesOfCertificates&#40;&#41;&#41; &#123;
         KeyVaultCertificate certificateWithAllProperties = certificateClient
             .getCertificateVersion&#40;certificateProperties.getName&#40;&#41;, certificateProperties.getVersion&#40;&#41;&#41;;
         System.out.printf&#40;&quot;Received certificate with name %s and secret id %s&quot;,
             certificateWithAllProperties.getProperties&#40;&#41;.getName&#40;&#41;,
             certificateWithAllProperties.getSecretId&#40;&#41;&#41;;
     &#125;
     </pre>
  syntax: public PagedIterable<CertificateProperties> listPropertiesOfCertificates()
  returns:
    description: A <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing <xref uid="CertificateProperties" data-throw-if-not-resolved="false">certificate</xref> for all the certificates in the vault.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates(boolean,com.azure.core.util.Context)
  fullName: com.azure.security.keyvault.certificates.CertificateClient.listPropertiesOfCertificates(boolean includePending, Context context)
  name: listPropertiesOfCertificates(boolean includePending, Context context)
  nameWithType: CertificateClient.listPropertiesOfCertificates(boolean includePending, Context context)
  summary: |-
    List certificates in a the key vault. Retrieves the set of certificates resources in the key vault and the individual
     certificate response in the iterable is represented by <xref uid="CertificateProperties" data-throw-if-not-resolved="false">CertificateProperties</xref> as only the certificate identifier, thumbprint,
     attributes and tags are provided in the response. The policy and individual certificate versions are not listed in
     the response. This operation requires the certificates/list permission.

     <p>It is possible to get certificates with all the properties excluding the policy from this information. Loop over the <xref uid="CertificateProperties" data-throw-if-not-resolved="false">CertificateProperties</xref> and
     call <xref uid="CertificateClient#getCertificateVersion(String, String)" data-throw-if-not-resolved="false">CertificateClient#getCertificateVersion(String, String)</xref> . This will return the <xref uid="KeyVaultCertificate" data-throw-if-not-resolved="false">certificate</xref>
     with all its properties excluding the policy.</p>

     <pre>
     for &#40;CertificateProperties certificateProperties : certificateClient
         .listPropertiesOfCertificates&#40;true, new Context&#40;key1, value1&#41;&#41;&#41; &#123;
         KeyVaultCertificate certificateWithAllProperties = certificateClient
             .getCertificateVersion&#40;certificateProperties.getName&#40;&#41;, certificateProperties.getVersion&#40;&#41;&#41;;
         System.out.printf&#40;&quot;Received certificate with name %s and secret id %s&quot;,
             certificateWithAllProperties.getProperties&#40;&#41;.getName&#40;&#41;,
             certificateWithAllProperties.getSecretId&#40;&#41;&#41;;
     &#125;
     </pre>
  parameters:
  - description: indicate if pending certificates should be included in the results.
    name: includePending
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<CertificateProperties> listPropertiesOfCertificates(boolean includePending, Context context)
  returns:
    description: A <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing <xref uid="CertificateProperties" data-throw-if-not-resolved="false">certificate</xref> for all the certificates in the vault.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.CertificateProperties?alt=com.azure.security.keyvault.certificates.models.CertificateProperties&text=CertificateProperties" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.certificates
artifact: com.azure:azure-security-keyvault-certificates:4.1.0
