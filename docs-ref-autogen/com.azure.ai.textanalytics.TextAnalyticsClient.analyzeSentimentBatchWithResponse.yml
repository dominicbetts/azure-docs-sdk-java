### YamlMime:JavaMember
uid: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentimentBatchWithResponse*
fullName: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentimentBatchWithResponse
name: analyzeSentimentBatchWithResponse
nameWithType: TextAnalyticsClient.analyzeSentimentBatchWithResponse
members:
- uid: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentimentBatchWithResponse(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions,com.azure.core.util.Context)
  fullName: com.azure.ai.textanalytics.TextAnalyticsClient.analyzeSentimentBatchWithResponse(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options, Context context)
  name: analyzeSentimentBatchWithResponse(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options, Context context)
  nameWithType: TextAnalyticsClient.analyzeSentimentBatchWithResponse(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options, Context context)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label\n (Positive, Negative, and Neutral) for the document and each sentence within it.\n\n <p><strong>Code Sample</strong></p>\n <p>Analyze the sentiments with http response in a list of <xref uid=\"TextDocumentInput\" data-throw-if-not-resolved=\"false\">documents</xref> with request\n options.</p>\n <pre>\n List&lt;TextDocumentInput&gt; textDocumentInputs = Arrays.asList&#40;\n     new TextDocumentInput&#40;&quot;1&quot;, &quot;The hotel was dark and unclean. The restaurant had amazing gnocchi.&quot;&#41;\n         .setLanguage&#40;&quot;en&quot;&#41;,\n     new TextDocumentInput&#40;&quot;2&quot;, &quot;The restaurant had amazing gnocchi. The hotel was dark and unclean.&quot;&#41;\n         .setLanguage&#40;&quot;en&quot;&#41;\n &#41;;\n \n &#47;&#47; Analyzing batch sentiments\n Response&lt;AnalyzeSentimentResultCollection&gt; response =\n     textAnalyticsClient.analyzeSentimentBatchWithResponse&#40;textDocumentInputs,\n         new TextAnalyticsRequestOptions&#40;&#41;.setIncludeStatistics&#40;true&#41;, Context.NONE&#41;;\n \n &#47;&#47; Response's status code\n System.out.printf&#40;&quot;Status code of request response: %d%n&quot;, response.getStatusCode&#40;&#41;&#41;;\n AnalyzeSentimentResultCollection resultCollection = response.getValue&#40;&#41;;\n \n &#47;&#47; Batch statistics\n TextDocumentBatchStatistics batchStatistics = resultCollection.getStatistics&#40;&#41;;\n System.out.printf&#40;&quot;A batch of documents statistics, transaction count: %s, valid document count: %s.%n&quot;,\n     batchStatistics.getTransactionCount&#40;&#41;, batchStatistics.getValidDocumentCount&#40;&#41;&#41;;\n \n &#47;&#47; Analyzed sentiment for each of documents from a batch of documents\n resultCollection.forEach&#40;analyzeSentimentResult -&gt; &#123;\n     System.out.printf&#40;&quot;Document ID: %s%n&quot;, analyzeSentimentResult.getId&#40;&#41;&#41;;\n     &#47;&#47; Valid document\n     DocumentSentiment documentSentiment = analyzeSentimentResult.getDocumentSentiment&#40;&#41;;\n     System.out.printf&#40;\n         &quot;Recognized document sentiment: %s, positive score: %.2f, neutral score: %.2f, &quot;\n             + &quot;negative score: %.2f.%n&quot;,\n         documentSentiment.getSentiment&#40;&#41;,\n         documentSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n         documentSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n         documentSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n     documentSentiment.getSentences&#40;&#41;.forEach&#40;sentenceSentiment -&gt; &#123;\n         System.out.printf&#40;\n             &quot;Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f,&quot;\n                 + &quot; negative score: %.2f.%n&quot;,\n             sentenceSentiment.getSentiment&#40;&#41;,\n             sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n             sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n             sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;;\n     &#125;&#41;;\n &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      A list of <xref uid="TextDocumentInput" data-throw-if-not-resolved="false">documents</xref> to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.TextDocumentInput?alt=com.azure.ai.textanalytics.models.TextDocumentInput&text=TextDocumentInput" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The <xref uid="TextAnalyticsRequestOptions" data-throw-if-not-resolved="false">options</xref> to configure the scoring model for documents
       and show statistics.
    name: options
    type: <xref href="com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<AnalyzeSentimentResultCollection> analyzeSentimentBatchWithResponse(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options, Context context)
  returns:
    description: A <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> that contains a <xref uid="AnalyzeSentimentResultCollection" data-throw-if-not-resolved="false">AnalyzeSentimentResultCollection</xref>.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.util.AnalyzeSentimentResultCollection?alt=com.azure.ai.textanalytics.util.AnalyzeSentimentResultCollection&text=AnalyzeSentimentResultCollection" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.ai.textanalytics
artifact: com.azure:azure-ai-textanalytics:1.0.1
