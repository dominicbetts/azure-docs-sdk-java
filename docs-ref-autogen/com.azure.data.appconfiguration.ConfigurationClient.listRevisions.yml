### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationClient.listRevisions*
fullName: com.azure.data.appconfiguration.ConfigurationClient.listRevisions
name: listRevisions
nameWithType: ConfigurationClient.listRevisions
members:
- uid: com.azure.data.appconfiguration.ConfigurationClient.listRevisions(com.azure.data.appconfiguration.models.SettingSelector)
  fullName: com.azure.data.appconfiguration.ConfigurationClient.listRevisions(SettingSelector selector)
  name: listRevisions(SettingSelector selector)
  nameWithType: ConfigurationClient.listRevisions(SettingSelector selector)
  summary: |-
    Lists chronological/historical representation of <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> resource(s). Revisions are provided
     in descending order from their <xref uid="ConfigurationSetting#getLastModified()" data-throw-if-not-resolved="false">lastModified</xref> date.
     Revisions expire after a period of time, see <a href="https://azure.microsoft.com/en-us/pricing/details/app-configuration/">Pricing</a>
     for more information.


     If <code>selector</code> is <code>null</code>, then all the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSettings</xref> are fetched
     in their current state. Otherwise, the results returned match the parameters given in <code>selector</code>.

     <p><strong>Code Samples</strong></p>

     <p>Retrieve all revisions of the setting that has the key "prodDBConnection".</p>

     <pre>
     SettingSelector settingSelector = new SettingSelector&#40;&#41;.setKeyFilter&#40;&quot;prodDBConnection&quot;&#41;;
     client.listRevisions&#40;settingSelector&#41;.streamByPage&#40;&#41;.forEach&#40;resp -&gt; &#123;
         System.out.printf&#40;&quot;Response headers are %s. Url %s  and status code %d %n&quot;, resp.getHeaders&#40;&#41;,
             resp.getRequest&#40;&#41;.getUrl&#40;&#41;, resp.getStatusCode&#40;&#41;&#41;;
         resp.getItems&#40;&#41;.forEach&#40;value -&gt; &#123;
             System.out.printf&#40;&quot;Response value is %d %n&quot;, value&#41;;
         &#125;&#41;;
     &#125;&#41;;
     </pre>
  parameters:
  - description: Optional. Used to filter configuration setting revisions from the service.
    name: selector
    type: <xref href="com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<ConfigurationSetting> listRevisions(SettingSelector selector)
  returns:
    description: <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> of <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> revisions.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.data.appconfiguration.ConfigurationClient.listRevisions(com.azure.data.appconfiguration.models.SettingSelector,com.azure.core.util.Context)
  fullName: com.azure.data.appconfiguration.ConfigurationClient.listRevisions(SettingSelector selector, Context context)
  name: listRevisions(SettingSelector selector, Context context)
  nameWithType: ConfigurationClient.listRevisions(SettingSelector selector, Context context)
  summary: |-
    Lists chronological/historical representation of <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> resource(s). Revisions are provided
     in descending order from their <xref uid="ConfigurationSetting#getLastModified()" data-throw-if-not-resolved="false">lastModified</xref> date.
     Revisions expire after a period of time, see <a href="https://azure.microsoft.com/en-us/pricing/details/app-configuration/">Pricing</a>
     for more information.

     If <code>selector</code> is <code>null</code>, then all the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSettings</xref> are fetched
     in their current state. Otherwise, the results returned match the parameters given in <code>selector</code>.

     <p><strong>Code Samples</strong></p>

     <p>Retrieve all revisions of the setting that has the key "prodDBConnection".</p>

     <pre>
     SettingSelector settingSelector = new SettingSelector&#40;&#41;.setKeyFilter&#40;&quot;prodDBConnection&quot;&#41;;
     Context ctx = new Context&#40;key2, value2&#41;;
     configurationClient.listRevisions&#40;settingSelector, ctx&#41;.forEach&#40;setting -&gt; &#123;
         System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;;
     &#125;&#41;;
     </pre>
  parameters:
  - description: Optional. Used to filter configuration setting revisions from the service.
    name: selector
    type: <xref href="com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<ConfigurationSetting> listRevisions(SettingSelector selector, Context context)
  returns:
    description: <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> of <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref> revisions.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
