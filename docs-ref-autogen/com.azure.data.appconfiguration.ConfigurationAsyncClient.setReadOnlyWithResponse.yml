### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.setReadOnlyWithResponse*
fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.setReadOnlyWithResponse
name: setReadOnlyWithResponse
nameWithType: ConfigurationAsyncClient.setReadOnlyWithResponse
members:
- uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.setReadOnlyWithResponse(com.azure.data.appconfiguration.models.ConfigurationSetting,boolean)
  fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly)
  name: setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly)
  nameWithType: ConfigurationAsyncClient.setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly)
  summary: |-
    Sets the read-only status for the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">ConfigurationSetting</xref>.

     <p><strong>Code Samples</strong></p>

     <p>Set the setting to read-only with the key-label "prodDBConnection"-"westUS".</p>

     <pre>
     client.setReadOnlyWithResponse&#40;new ConfigurationSetting&#40;&#41;.setKey&#40;&quot;prodDBConnection&quot;&#41;.setLabel&#40;&quot;westUS&quot;&#41;, true&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;response -&gt; &#123;
             final ConfigurationSetting result = response.getValue&#40;&#41;;
             System.out.printf&#40;&quot;Key: %s, Label: %s, Value: %s&quot;,
                 result.getKey&#40;&#41;, result.getLabel&#40;&#41;, result.getValue&#40;&#41;&#41;;
         &#125;&#41;;
     </pre>

     <p>Clear read-only of the setting with the key-label "prodDBConnection"-"westUS".</p>

     <pre>
     client.setReadOnlyWithResponse&#40;new ConfigurationSetting&#40;&#41;.setKey&#40;&quot;prodDBConnection&quot;&#41;.setLabel&#40;&quot;westUS&quot;&#41;, false&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;response -&gt; &#123;
             ConfigurationSetting result = response.getValue&#40;&#41;;
             System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, result.getKey&#40;&#41;, result.getValue&#40;&#41;&#41;;
         &#125;&#41;;
     </pre>
  parameters:
  - description: The configuration setting to set to read-only or not read-only based on the <code>isReadOnly</code>.
    name: setting
    type: <xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />
  - description: |-
      Flag used to set the read-only status of the configuration. <code>true</code> will put the
       configuration into a read-only state, <code>false</code> will clear the state.
    name: isReadOnly
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ConfigurationSetting>> setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly)
  returns:
    description: |-
      A REST response containing the read-only or not read-only ConfigurationSetting if <code>isReadOnly</code>
       is true or null, or false respectively. Or return <code>null</code> if the setting didn't exist.
       <code>null</code> is also returned if the <xref uid="ConfigurationSetting#getKey()" data-throw-if-not-resolved="false">key</xref> is an invalid value.
       (which will also throw HttpResponseException described below).
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
