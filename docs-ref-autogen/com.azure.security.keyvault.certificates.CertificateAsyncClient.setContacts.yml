### YamlMime:JavaMember
uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.setContacts*
fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.setContacts
name: setContacts
nameWithType: CertificateAsyncClient.setContacts
members:
- uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.setContacts(java.util.List<com.azure.security.keyvault.certificates.models.CertificateContact>)
  fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.setContacts(List<CertificateContact> contacts)
  name: setContacts(List<CertificateContact> contacts)
  nameWithType: CertificateAsyncClient.setContacts(List<CertificateContact> contacts)
  summary: |-
    Sets the certificate contacts on the key vault. This operation requires the <code>certificates/managecontacts</code> permission.

    <p>The <xref uid="LifetimeAction" data-throw-if-not-resolved="false">LifetimeAction</xref> of type <xref uid="CertificatePolicyAction#EMAIL_CONTACTS" data-throw-if-not-resolved="false">CertificatePolicyAction#EMAIL_CONTACTS</xref> set on a <xref uid="CertificatePolicy" data-throw-if-not-resolved="false">CertificatePolicy</xref> emails the contacts set on the vault when triggered.</p>

     <p><strong>Code Samples</strong></p>
     <p>Sets the certificate contacts in the Azure Key Vault. Prints out the
     returned contacts details.</p>

     <pre>
     CertificateContact contactToAdd = new CertificateContact&#40;&#41;.setName&#40;&quot;user&quot;&#41;.setEmail&#40;&quot;useremail&#123;@literal @&#125;exmaple.com&quot;&#41;;
     certificateAsyncClient.setContacts&#40;Arrays.asList&#40;contactToAdd&#41;&#41;.subscribe&#40;contact -&gt;
         System.out.printf&#40;&quot;Contact name %s and email %s&quot;, contact.getName&#40;&#41;, contact.getEmail&#40;&#41;&#41;
     &#41;;
     </pre>
  parameters:
  - description: The list of contacts to set on the vault.
    name: contacts
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact" data-throw-if-not-resolved="False" />&gt;
  syntax: public PagedFlux<CertificateContact> setContacts(List<CertificateContact> contacts)
  returns:
    description: A <xref uid="PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> containing all of the <xref uid="CertificateContact" data-throw-if-not-resolved="false">certificate contacts</xref> in the vault.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.CertificateContact?alt=com.azure.security.keyvault.certificates.models.CertificateContact&text=CertificateContact" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.certificates
artifact: com.azure:azure-security-keyvault-certificates:4.1.0
