### YamlMime:JavaMember
uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch*
fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch
name: processEventBatch
nameWithType: EventProcessorClientBuilder.processEventBatch
members:
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  name: processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  nameWithType: EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  summary: |-
    The function that is called for each event received by this <xref uid="EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the
     partition context and the event data. If the max wait time is set, the receive will wait for that duration to
     receive an event and if is no event received, the consumer will be invoked with a null event data.
  parameters:
  - description: The callback that's called when an event is received by this <xref uid="EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> or when the max wait duration has expired.
    name: processEventBatch
    type: <xref href="java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.messaging.eventhubs.models.EventBatchContext?alt=com.azure.messaging.eventhubs.models.EventBatchContext&text=EventBatchContext" data-throw-if-not-resolved="False" />&gt;
  - description: The maximum number of events that will be in the list when this callback is invoked.
    name: maxBatchSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)
  returns:
    description: The updated <xref uid="EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> instance.
    type: <xref href="com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder" data-throw-if-not-resolved="False" />
- uid: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)
  fullName: com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  name: processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  nameWithType: EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  summary: |-
    The function that is called for each event received by this <xref uid="EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref>. The input contains the
     partition context and the event data. If the max wait time is set, the receive will wait for that duration to
     receive an event and if is no event received, the consumer will be invoked with a null event data.

     <pre>
     EventProcessorClient eventProcessorClient = new EventProcessorClientBuilder&#40;&#41;
         .consumerGroup&#40;&quot;consumer-group&quot;&#41;
         .checkpointStore&#40;new SampleCheckpointStore&#40;&#41;&#41;
         .processEventBatch&#40;eventBatchContext -&gt; &#123;
             eventBatchContext.getEvents&#40;&#41;.forEach&#40;eventData -&gt; &#123;
                 System.out.println&#40;&quot;Partition id = &quot; + eventBatchContext.getPartitionContext&#40;&#41;.getPartitionId&#40;&#41;
                     + &quot;and sequence number of event = &quot; + eventData.getSequenceNumber&#40;&#41;&#41;;
             &#125;&#41;;
         &#125;, 50, Duration.ofSeconds&#40;30&#41;&#41;
         .processError&#40;errorContext -&gt; &#123;
             System.out.printf&#40;&quot;Error occurred in partition processor for partition &#123;&#125;, &#123;&#125;&quot;,
                 errorContext.getPartitionContext&#40;&#41;.getPartitionId&#40;&#41;,
                 errorContext.getThrowable&#40;&#41;&#41;;
         &#125;&#41;
         .connectionString&#40;connectionString&#41;
         .buildEventProcessorClient&#40;&#41;;
     </pre>
  parameters:
  - description: |-
      The callback that's called when an event is received  or when the max wait duration has
       expired.
    name: processEventBatch
    type: <xref href="java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.messaging.eventhubs.models.EventBatchContext?alt=com.azure.messaging.eventhubs.models.EventBatchContext&text=EventBatchContext" data-throw-if-not-resolved="False" />&gt;
  - description: The maximum number of events that will be in the list when this callback is invoked.
    name: maxBatchSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  - description: |-
      The max time duration to wait to receive a batch of events upto the max batch size before
       invoking this callback.
    name: maxWaitTime
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  syntax: public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)
  returns:
    description: The updated <xref uid="EventProcessorClient" data-throw-if-not-resolved="false">EventProcessorClient</xref> instance.
    type: <xref href="com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.messaging.eventhubs
artifact: com.azure:azure-messaging-eventhubs:5.1.1
