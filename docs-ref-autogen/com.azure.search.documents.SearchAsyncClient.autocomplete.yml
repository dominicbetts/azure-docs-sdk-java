### YamlMime:JavaMember
uid: com.azure.search.documents.SearchAsyncClient.autocomplete*
fullName: com.azure.search.documents.SearchAsyncClient.autocomplete
name: autocomplete
nameWithType: SearchAsyncClient.autocomplete
members:
- uid: com.azure.search.documents.SearchAsyncClient.autocomplete(java.lang.String,java.lang.String)
  fullName: com.azure.search.documents.SearchAsyncClient.autocomplete(String searchText, String suggesterName)
  name: autocomplete(String searchText, String suggesterName)
  nameWithType: SearchAsyncClient.autocomplete(String searchText, String suggesterName)
  summary: |-
    Autocompletes incomplete query terms based on input text and matching terms in the index.

     <p><strong>Code Sample</strong></p>

     <p> Autocomplete text from documents in service. </p>

     <pre>
     searchAsyncClient.autocomplete&#40;&quot;searchText&quot;, &quot;sg&quot;&#41;
         .subscribe&#40;result -&gt; &#123;
             System.out.printf&#40;&quot;The complete term is %s&quot;, result.getText&#40;&#41;&#41;;
         &#125;&#41;;
     </pre>
  parameters:
  - description: search text
    name: searchText
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: suggester name
    name: suggesterName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public AutocompletePagedFlux autocomplete(String searchText, String suggesterName)
  returns:
    description: auto complete result.
    type: <xref href="com.azure.search.documents.util.AutocompletePagedFlux?alt=com.azure.search.documents.util.AutocompletePagedFlux&text=AutocompletePagedFlux" data-throw-if-not-resolved="False" />
- uid: com.azure.search.documents.SearchAsyncClient.autocomplete(java.lang.String,java.lang.String,com.azure.search.documents.models.AutocompleteOptions)
  fullName: com.azure.search.documents.SearchAsyncClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)
  name: autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)
  nameWithType: SearchAsyncClient.autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)
  summary: |-
    Autocompletes incomplete query terms based on input text and matching terms in the index.

     <p><strong>Code Sample</strong></p>

     <p> Autocomplete text from documents in service with option. </p>

     <pre>
     searchAsyncClient.autocomplete&#40;&quot;searchText&quot;, &quot;sg&quot;,
         new AutocompleteOptions&#40;&#41;.setAutocompleteMode&#40;AutocompleteMode.ONE_TERM_WITH_CONTEXT&#41;&#41;
         .subscribe&#40;result -&gt;
             System.out.printf&#40;&quot;The complete term is %s&quot;, result.getText&#40;&#41;&#41;
         &#41;;
     </pre>
  parameters:
  - description: search text
    name: searchText
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: suggester name
    name: suggesterName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: autocomplete options
    name: autocompleteOptions
    type: <xref href="com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions" data-throw-if-not-resolved="False" />
  syntax: public AutocompletePagedFlux autocomplete(String searchText, String suggesterName, AutocompleteOptions autocompleteOptions)
  returns:
    description: auto complete result.
    type: <xref href="com.azure.search.documents.util.AutocompletePagedFlux?alt=com.azure.search.documents.util.AutocompletePagedFlux&text=AutocompletePagedFlux" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.search.documents
artifact: com.azure:azure-search-documents:11.0.0
