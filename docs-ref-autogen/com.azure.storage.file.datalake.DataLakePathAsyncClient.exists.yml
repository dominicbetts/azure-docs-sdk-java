### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.exists*
fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.exists
name: exists
nameWithType: DataLakePathAsyncClient.exists
members:
- uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.exists()
  fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.exists()
  name: exists()
  nameWithType: DataLakePathAsyncClient.exists()
  summary: |-
    Determines if the path this client represents exists in the cloud.
     <p>Note that this method does not guarantee that the path type (file/directory) matches expectations.</p>
     <p>For example, a DataLakeFileClient representing a path to a datalake directory will return true, and vice
     versa.</p>

     <p><strong>Code Samples</strong></p>

     <pre>
     client.exists&#40;&#41;.subscribe&#40;response -&gt; System.out.printf&#40;&quot;Exists? %b%n&quot;, response&#41;&#41;;
     </pre>
  syntax: public Mono<Boolean> exists()
  returns:
    description: true if the path exists, false if it doesn't
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
