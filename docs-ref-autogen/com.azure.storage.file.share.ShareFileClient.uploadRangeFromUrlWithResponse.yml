### YamlMime:JavaMember
uid: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse*
fullName: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse
name: uploadRangeFromUrlWithResponse
nameWithType: ShareFileClient.uploadRangeFromUrlWithResponse
members:
- uid: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)
  name: uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)
  summary: |-
    Uploads a range of bytes from one file to another file.

     <p><strong>Code Samples</strong></p>

     <p>Upload a number of bytes from a file at defined source and destination offsets </p>

     <pre>
     ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;
     Response&lt;ShareFileUploadRangeFromUrlInfo&gt; response = fileClient.uploadRangeFromUrlWithResponse&#40;6, 8, 0,
         &quot;sourceUrl&quot;, requestConditions, Duration.ofSeconds&#40;1&#41;, Context.NONE&#41;;
     System.out.println&#40;&quot;Completed upload range from url!&quot;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range">Azure Docs</a>.</p>
  parameters:
  - description: Specifies the number of bytes being transmitted in the request body.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Starting point of the upload range on the destination.
    name: destinationOffset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Starting point of the upload range on the source.
    name: sourceOffset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Specifies the URL of the source file.
    name: sourceUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: <xref uid="ShareRequestConditions" data-throw-if-not-resolved="false">ShareRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ShareFileUploadRangeFromUrlInfo> uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)
  returns:
    description: |-
      A response containing the <xref uid="ShareFileUploadRangeFromUrlInfo" data-throw-if-not-resolved="false">file upload range from url info</xref> with
       headers and response status code.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo?alt=com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo&text=ShareFileUploadRangeFromUrlInfo" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)
  name: uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)
  nameWithType: ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)
  summary: |-
    Uploads a range of bytes from one file to another file.

     <p><strong>Code Samples</strong></p>

     <p>Upload a number of bytes from a file at defined source and destination offsets </p>

     <pre>
     Response&lt;ShareFileUploadRangeFromUrlInfo&gt; response =
         fileClient.uploadRangeFromUrlWithResponse&#40;6, 8, 0, &quot;sourceUrl&quot;, Duration.ofSeconds&#40;1&#41;, Context.NONE&#41;;
     System.out.println&#40;&quot;Completed upload range from url!&quot;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range">Azure Docs</a>.</p>
  parameters:
  - description: Specifies the number of bytes being transmitted in the request body.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Starting point of the upload range on the destination.
    name: destinationOffset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Starting point of the upload range on the source.
    name: sourceOffset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Specifies the URL of the source file.
    name: sourceUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<ShareFileUploadRangeFromUrlInfo> uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)
  returns:
    description: |-
      A response containing the <xref uid="ShareFileUploadRangeFromUrlInfo" data-throw-if-not-resolved="false">file upload range from url info</xref> with
       headers and response status code.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo?alt=com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo&text=ShareFileUploadRangeFromUrlInfo" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.share
artifact: com.azure:azure-storage-file-share:12.6.0
