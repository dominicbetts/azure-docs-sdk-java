### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient*
fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient
name: buildDirectoryAsyncClient
nameWithType: DataLakePathClientBuilder.buildDirectoryAsyncClient
members:
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()
  name: buildDirectoryAsyncClient()
  nameWithType: DataLakePathClientBuilder.buildDirectoryAsyncClient()
  summary: |-
    Creates a <xref uid="DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DataLakeDirectoryAsyncClient</xref> based on options set in the builder.

     <p><strong>Code Samples</strong></p>

     <pre>
     DataLakeDirectoryAsyncClient client = new DataLakePathClientBuilder&#40;&#41;
         .endpoint&#40;endpoint&#41;
         .credential&#40;storageSharedKeyCredential&#41;
         .buildDirectoryAsyncClient&#40;&#41;;
     </pre>
  syntax: public DataLakeDirectoryAsyncClient buildDirectoryAsyncClient()
  returns:
    description: a <xref uid="DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DataLakeDirectoryAsyncClient</xref> created from the configurations in this builder.
    type: <xref href="com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient?alt=com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient&text=DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
