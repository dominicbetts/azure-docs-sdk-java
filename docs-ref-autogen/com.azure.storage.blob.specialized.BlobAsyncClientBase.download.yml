### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.download*
fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.download
name: download
nameWithType: BlobAsyncClientBase.download
members:
- uid: com.azure.storage.blob.specialized.BlobAsyncClientBase.download()
  fullName: com.azure.storage.blob.specialized.BlobAsyncClientBase.download()
  name: download()
  nameWithType: BlobAsyncClientBase.download()
  summary: |-
    Reads the entire blob. Uploading data must be done from the <xref uid="BlockBlobClient" data-throw-if-not-resolved="false">BlockBlobClient</xref>, <xref uid="PageBlobClient" data-throw-if-not-resolved="false">PageBlobClient</xref>, or
     <xref uid="AppendBlobClient" data-throw-if-not-resolved="false">AppendBlobClient</xref>.

     <p><strong>Code Samples</strong></p>

     <pre>
     ByteArrayOutputStream downloadData = new ByteArrayOutputStream&#40;&#41;;
     client.download&#40;&#41;.subscribe&#40;piece -&gt; &#123;
         try &#123;
             downloadData.write&#40;piece.array&#40;&#41;&#41;;
         &#125; catch &#40;IOException ex&#41; &#123;
             throw new UncheckedIOException&#40;ex&#41;;
         &#125;
     &#125;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob">Azure Docs</a></p>
  syntax: public Flux<ByteBuffer> download()
  returns:
    description: A reactive response containing the blob data.
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0
