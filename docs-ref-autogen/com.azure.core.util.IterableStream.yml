### YamlMime:JavaType
uid: com.azure.core.util.IterableStream
fullName: com.azure.core.util.IterableStream<T>
name: IterableStream<T>
nameWithType: IterableStream<T>
summary: |-
  This class provides utility to iterate over values using standard 'for-each' style loops or to convert them into a <xref uid="java.util.stream.Stream" data-throw-if-not-resolved="false">Stream</xref> and operate in that fashion.

  **Code sample using Stream**

  ```java
  // process the stream
   myIterableStream.stream().forEach(resp -> {
       if (resp.getStatusCode() == HttpURLConnection.HTTP_OK) {
           System.out.printf("Response headers are %s. Url %s%n", resp.getDeserializedHeaders(),
               resp.getRequest().getUrl());
           resp.getItems().forEach(value -> {
               System.out.printf("Response value is %d%n", value);
           });
       }
   });
  ```

  **Code sample using Iterator**

  ```java
  // Iterate over iterator
   for (PagedResponseBase<String, Integer> resp : myIterableStream) {
       if (resp.getStatusCode() == HttpURLConnection.HTTP_OK) {
           System.out.printf("Response headers are %s. Url %s%n", resp.getDeserializedHeaders(),
               resp.getRequest().getUrl());
           resp.getItems().forEach(value -> {
               System.out.printf("Response value is %d%n", value);
           });
       }
   }
  ```

  **Code sample using Stream and filter**

  ```java
  // process the stream
   myIterableStream.stream().filter(resp -> resp.getStatusCode() == HttpURLConnection.HTTP_OK)
       .limit(10)
       .forEach(resp -> {
           System.out.printf("Response headers are %s. Url %s%n", resp.getDeserializedHeaders(),
               resp.getRequest().getUrl());
           resp.getItems().forEach(value -> {
               System.out.printf("Response value is %d%n", value);
           });
       });
  ```
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False" />
inheritedMembers:
- java.lang.Object.clone()
- java.lang.Object.equals(java.lang.Object)
- java.lang.Object.finalize()
- java.lang.Object.getClass()
- java.lang.Object.hashCode()
- java.lang.Object.notify()
- java.lang.Object.notifyAll()
- java.lang.Object.toString()
- java.lang.Object.wait()
- java.lang.Object.wait(long)
- java.lang.Object.wait(long,int)
syntax: public class IterableStream<T> implements Iterable<T>
constructors:
- com.azure.core.util.IterableStream.IterableStream(java.lang.Iterable<T>)
- com.azure.core.util.IterableStream.IterableStream(reactor.core.publisher.Flux<T>)
methods:
- com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)
- com.azure.core.util.IterableStream.iterator()
- com.azure.core.util.IterableStream.stream()
type: class
typeParameters:
- name: T
implements:
- <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
metadata: {}
package: com.azure.core.util
artifact: com.azure:azure-core:1.7.0
