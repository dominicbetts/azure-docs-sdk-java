### YamlMime:JavaType
uid: com.microsoft.azure.functions.annotation.QueueOutput
fullName: com.microsoft.azure.functions.annotation.QueueOutput
name: QueueOutput
nameWithType: QueueOutput
summary: |-
  Place this on a parameter whose value would be written to a storage queue. The parameter type should be OutputBinding<T>, where T could be one of:

   *  Any native Java types such as int, String, byte\[\]
   *  Any POJO type

  The following example shows a Java function that creates a queue message for each HTTP request received.

  ```java
  @FunctionName("httpToQueue")
  @QueueOutput(name = "item", queueName = "myqueue-items", connection = "AzureWebJobsStorage")
   public String pushToQueue(
      @HttpTrigger(name = "request", methods = {HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS)
       final String message,
      @HttpOutput(name = "response") final OutputBinding<String> result
   ) {
       result.setValue(message + " has been added.");
       return message;
   }
  ```
syntax: public interface QueueOutput implements Annotation
methods:
- com.microsoft.azure.functions.annotation.QueueOutput.connection()
- com.microsoft.azure.functions.annotation.QueueOutput.dataType()
- com.microsoft.azure.functions.annotation.QueueOutput.name()
- com.microsoft.azure.functions.annotation.QueueOutput.queueName()
type: interface
implements:
- <xref href="java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation" data-throw-if-not-resolved="False" />
metadata: {}
package: com.microsoft.azure.functions.annotation
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
