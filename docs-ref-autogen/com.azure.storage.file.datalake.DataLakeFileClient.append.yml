### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileClient.append*
fullName: com.azure.storage.file.datalake.DataLakeFileClient.append
name: append
nameWithType: DataLakeFileClient.append
members:
- uid: com.azure.storage.file.datalake.DataLakeFileClient.append(java.io.InputStream,long,long)
  fullName: com.azure.storage.file.datalake.DataLakeFileClient.append(InputStream data, long fileOffset, long length)
  name: append(InputStream data, long fileOffset, long length)
  nameWithType: DataLakeFileClient.append(InputStream data, long fileOffset, long length)
  summary: |-
    Appends data to the specified resource to later be flushed (written) by a call to flush

     <p><strong>Code Samples</strong></p>

     <pre>
     client.append&#40;data, offset, length&#41;;
     System.out.println&#40;&quot;Append data completed&quot;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">Azure
     Docs</a></p>
  parameters:
  - description: The data to write to the file.
    name: data
    type: <xref href="java.io.InputStream?alt=java.io.InputStream&text=InputStream" data-throw-if-not-resolved="False" />
  - description: The position where the data is to be appended.
    name: fileOffset
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: The exact length of the data.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  syntax: public void append(InputStream data, long fileOffset, long length)
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0
