### YamlMime:JavaType
uid: com.microsoft.azure.functions.annotation.BlobOutput
fullName: com.microsoft.azure.functions.annotation.BlobOutput
name: BlobOutput
nameWithType: BlobOutput
summary: |-
  Place this on a parameter whose value would be written to a blob. The parameter type should be OutputBinding<T>, where T could be one of:

   *  Any native Java types such as int, String, byte\[\]
   *  Any POJO type

  The following example shows blob input and output bindings in a Java function. The function makes a copy of a text blob. The function is triggered by a queue message that contains the name of the blob to copy. The new blob is named \{originalblobname\}-Copy.

  ```java
  @FunctionName("copyTextBlob")
  @StorageAccount("AzureWebJobsStorage")
  @BlobOutput(name = "target", path = "samples-workitems/{queueTrigger}-Copy")
   public String blobCopy(
      @QueueTrigger(name = "filename",
                     queueName = "myqueue-items") String filename,
      @BlobInput(name = "source",
                  path = "samples-workitems/{queueTrigger}") String content
   ) {
       return content;
   }
  ```
syntax: public interface BlobOutput implements Annotation
methods:
- com.microsoft.azure.functions.annotation.BlobOutput.connection()
- com.microsoft.azure.functions.annotation.BlobOutput.dataType()
- com.microsoft.azure.functions.annotation.BlobOutput.name()
- com.microsoft.azure.functions.annotation.BlobOutput.path()
type: interface
implements:
- <xref href="java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation" data-throw-if-not-resolved="False" />
metadata: {}
package: com.microsoft.azure.functions.annotation
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
