### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse*
fullName: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse
name: breakLeaseWithResponse
nameWithType: BlobLeaseClient.breakLeaseWithResponse
members:
- uid: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse(com.azure.storage.blob.options.BlobBreakLeaseOptions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse(BlobBreakLeaseOptions options, Duration timeout, Context context)
  name: breakLeaseWithResponse(BlobBreakLeaseOptions options, Duration timeout, Context context)
  nameWithType: BlobLeaseClient.breakLeaseWithResponse(BlobBreakLeaseOptions options, Duration timeout, Context context)
  summary: "Breaks the previously acquired lease, if it exists.\n\n <p>If <code>null</code> is passed for <code>breakPeriodInSeconds</code> a fixed duration lease will break after the\n remaining lease period elapses and an infinite lease will break immediately.</p>\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n Integer retainLeaseInSeconds = 5;\n BlobLeaseRequestConditions requestConditions = new BlobLeaseRequestConditions&#40;&#41;\n     .setIfUnmodifiedSince&#40;OffsetDateTime.now&#40;&#41;.minusDays&#40;3&#41;&#41;;\n \n BlobBreakLeaseOptions options = new BlobBreakLeaseOptions&#40;&#41;\n     .setBreakPeriod&#40;Duration.ofSeconds&#40;retainLeaseInSeconds&#41;&#41;\n     .setRequestConditions&#40;requestConditions&#41;;\n \n System.out.printf&#40;&quot;The broken lease has %d seconds remaining on the lease&quot;, client\n     .breakLeaseWithResponse&#40;options, timeout, new Context&#40;key, value&#41;&#41;\n     .getValue&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: <xref uid="BlobBreakLeaseOptions" data-throw-if-not-resolved="false">BlobBreakLeaseOptions</xref>
    name: options
    type: <xref href="com.azure.storage.blob.options.BlobBreakLeaseOptions?alt=com.azure.storage.blob.options.BlobBreakLeaseOptions&text=BlobBreakLeaseOptions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<Integer> breakLeaseWithResponse(BlobBreakLeaseOptions options, Duration timeout, Context context)
  returns:
    description: The remaining time in the broken lease in seconds.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse(java.lang.Integer,com.azure.core.http.RequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.blob.specialized.BlobLeaseClient.breakLeaseWithResponse(Integer breakPeriodInSeconds, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  name: breakLeaseWithResponse(Integer breakPeriodInSeconds, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  nameWithType: BlobLeaseClient.breakLeaseWithResponse(Integer breakPeriodInSeconds, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  summary: "Breaks the previously acquired lease, if it exists.\n\n <p>If <code>null</code> is passed for <code>breakPeriodInSeconds</code> a fixed duration lease will break after the\n remaining lease period elapses and an infinite lease will break immediately.</p>\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n Integer retainLeaseInSeconds = 5;\n RequestConditions modifiedRequestConditions = new RequestConditions&#40;&#41;\n     .setIfUnmodifiedSince&#40;OffsetDateTime.now&#40;&#41;.minusDays&#40;3&#41;&#41;;\n \n System.out.printf&#40;&quot;The broken lease has %d seconds remaining on the lease&quot;, client\n     .breakLeaseWithResponse&#40;retainLeaseInSeconds, modifiedRequestConditions, timeout, new Context&#40;key, value&#41;&#41;\n     .getValue&#40;&#41;&#41;;\n </pre>"
  parameters:
  - description: |-
      An optional duration, between 0 and 60 seconds, that the lease should continue before
       it is broken. If the break period is longer than the time remaining on the lease the remaining time on the lease
       is used. A new lease will not be available before the break period has expired, but the lease may be held for
       longer than the break period.
    name: breakPeriodInSeconds
    type: <xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />
  - description: |-
      Standard HTTP Access conditions related to the modification of data. ETag and
       LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given
       request. The request will fail if the specified condition is not satisfied.
    name: modifiedRequestConditions
    type: <xref href="com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<Integer> breakLeaseWithResponse(Integer breakPeriodInSeconds, RequestConditions modifiedRequestConditions, Duration timeout, Context context)
  returns:
    description: The remaining time in the broken lease in seconds.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0
