### YamlMime:JavaMember
uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.listConfigurationSettings*
fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.listConfigurationSettings
name: listConfigurationSettings
nameWithType: ConfigurationAsyncClient.listConfigurationSettings
members:
- uid: com.azure.data.appconfiguration.ConfigurationAsyncClient.listConfigurationSettings(com.azure.data.appconfiguration.models.SettingSelector)
  fullName: com.azure.data.appconfiguration.ConfigurationAsyncClient.listConfigurationSettings(SettingSelector selector)
  name: listConfigurationSettings(SettingSelector selector)
  nameWithType: ConfigurationAsyncClient.listConfigurationSettings(SettingSelector selector)
  summary: |-
    Fetches the configuration settings that match the <code>selector</code>. If <code>selector</code> is <code>null</code>, then all
     the <xref uid="ConfigurationSetting" data-throw-if-not-resolved="false">configuration settings</xref> are fetched with their current values.

     <p><strong>Code Samples</strong></p>

     <p>Retrieve all settings that use the key "prodDBConnection".</p>

     <pre>
     client.listConfigurationSettings&#40;new SettingSelector&#40;&#41;.setKeyFilter&#40;&quot;prodDBConnection&quot;&#41;&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;setting -&gt;
             System.out.printf&#40;&quot;Key: %s, Value: %s&quot;, setting.getKey&#40;&#41;, setting.getValue&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: Optional. Selector to filter configuration setting results from the service.
    name: selector
    type: <xref href="com.azure.data.appconfiguration.models.SettingSelector?alt=com.azure.data.appconfiguration.models.SettingSelector&text=SettingSelector" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ConfigurationSetting> listConfigurationSettings(SettingSelector selector)
  returns:
    description: |-
      A Flux of ConfigurationSettings that matches the <code>selector</code>. If no options were provided, the Flux
       contains all of the current settings in the service.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.data.appconfiguration
artifact: com.azure:azure-data-appconfiguration:1.1.4
