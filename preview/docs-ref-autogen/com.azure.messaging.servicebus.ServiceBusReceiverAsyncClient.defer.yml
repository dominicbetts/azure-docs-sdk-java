### YamlMime:JavaMember
uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer*
fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer
name: defer
nameWithType: ServiceBusReceiverAsyncClient.defer
members:
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken)
  name: defer(String lockToken)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token. This will move message into the deferred
     subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> defer(String lockToken)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the Service Bus defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String,java.lang.String)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken, String sessionId)
  name: defer(String lockToken, String sessionId)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken, String sessionId)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token. This will move message into the deferred
     subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Session id of the message to defer. <code>null</code> if there is no session.
    name: sessionId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> defer(String lockToken, String sessionId)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify)
  name: defer(String lockToken, Map<String,Object> propertiesToModify)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token with modified message property. This will
     move message into the deferred subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Message properties to modify.
    name: propertiesToModify
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />&gt;
  syntax: public Mono<Void> defer(String lockToken, Map<String,Object> propertiesToModify)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)
  name: defer(String lockToken, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token with modified message property. This will
     move message into the deferred subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Message properties to modify.
    name: propertiesToModify
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      in which this operation is taking part in. The transaction should be created first by
       <xref uid="ServiceBusReceiverAsyncClient#createTransaction()" data-throw-if-not-resolved="false">ServiceBusReceiverAsyncClient#createTransaction()</xref> or
       <xref uid="ServiceBusSenderAsyncClient#createTransaction()" data-throw-if-not-resolved="false">ServiceBusSenderAsyncClient#createTransaction()</xref>.
    name: transactionContext
    type: <xref href="com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> defer(String lockToken, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId)
  name: defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token with modified message property. This will
     move message into the deferred subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Message properties to modify.
    name: propertiesToModify
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />&gt;
  - description: Session id of the message to defer. <code>null</code> if there is no session.
    name: sessionId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the Service Bus defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,com.azure.messaging.servicebus.ServiceBusTransactionContext)
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId, ServiceBusTransactionContext transactionContext)
  name: defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId, ServiceBusTransactionContext transactionContext)
  nameWithType: ServiceBusReceiverAsyncClient.defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId, ServiceBusTransactionContext transactionContext)
  summary: |-
    Defers a <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">message</xref> using its lock token with modified message property. This will
     move message into the deferred subqueue.
  parameters:
  - description: Lock token of the message.
    name: lockToken
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Message properties to modify.
    name: propertiesToModify
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />&gt;
  - description: Session id of the message to defer. <code>null</code> if there is no session.
    name: sessionId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      in which this operation is taking part in. The transaction should be created first by
       <xref uid="ServiceBusReceiverAsyncClient#createTransaction()" data-throw-if-not-resolved="false">ServiceBusReceiverAsyncClient#createTransaction()</xref> or
       <xref uid="ServiceBusSenderAsyncClient#createTransaction()" data-throw-if-not-resolved="false">ServiceBusSenderAsyncClient#createTransaction()</xref>.
    name: transactionContext
    type: <xref href="com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> defer(String lockToken, Map<String,Object> propertiesToModify, String sessionId, ServiceBusTransactionContext transactionContext)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> that completes when the Service Bus defer operation finishes.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.messaging.servicebus
artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
