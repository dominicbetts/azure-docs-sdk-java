### YamlMime:JavaType
uid: com.azure.resourcemanager.keyvault.models.Key
fullName: com.azure.resourcemanager.keyvault.models.Key
name: Key
nameWithType: Key
summary: An immutable client-side representation of an Azure Key Vault key.
syntax: public interface Key extends Indexable, HasInner<KeyVaultKey>, HasId, HasName, Updatable<Key.Update>
methods:
- com.azure.resourcemanager.keyvault.models.Key.backup()
- com.azure.resourcemanager.keyvault.models.Key.backupAsync()
- com.azure.resourcemanager.keyvault.models.Key.decrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.decryptAsync(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.encryptAsync(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.getAttributes()
- com.azure.resourcemanager.keyvault.models.Key.getJsonWebKey()
- com.azure.resourcemanager.keyvault.models.Key.getTags()
- com.azure.resourcemanager.keyvault.models.Key.isManaged()
- com.azure.resourcemanager.keyvault.models.Key.listVersions()
- com.azure.resourcemanager.keyvault.models.Key.listVersionsAsync()
- com.azure.resourcemanager.keyvault.models.Key.sign(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.signAsync(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.unwrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.unwrapKeyAsync(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.verify(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])
- com.azure.resourcemanager.keyvault.models.Key.verifyAsync(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])
- com.azure.resourcemanager.keyvault.models.Key.wrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])
- com.azure.resourcemanager.keyvault.models.Key.wrapKeyAsync(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])
type: interface
implements:
- <xref href="com.azure.resourcemanager.resources.fluentcore.arm.models.HasId?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasId&text=HasId" data-throw-if-not-resolved="False" />
- <xref href="com.azure.resourcemanager.resources.fluentcore.arm.models.HasName?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasName&text=HasName" data-throw-if-not-resolved="False" />
- <xref href="com.azure.resourcemanager.resources.fluentcore.model.HasInner?alt=com.azure.resourcemanager.resources.fluentcore.model.HasInner&text=HasInner" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey" data-throw-if-not-resolved="False" />&gt;
- <xref href="com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable" data-throw-if-not-resolved="False" />
- <xref href="com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.keyvault.models.Key.Update?alt=com.azure.resourcemanager.keyvault.models.Key.Update&text=Update" data-throw-if-not-resolved="False" />&gt;
metadata: {}
package: com.azure.resourcemanager.keyvault.models
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.0.0-beta.2
