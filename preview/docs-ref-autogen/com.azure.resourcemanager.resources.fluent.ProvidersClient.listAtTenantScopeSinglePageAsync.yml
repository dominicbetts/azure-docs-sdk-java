### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync*
fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync
name: listAtTenantScopeSinglePageAsync
nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand)
  name: listAtTenantScopeSinglePageAsync(Integer top, String expand)
  nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand)
  summary: Gets all resource providers for the tenant.
  parameters:
  - description: The number of results to return. If null is passed returns all providers.
    name: top
    type: <xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />
  - description: |-
      The properties to include in the results. For example, use &amp;$expand=metadata in the query
           string to retrieve resource provider metadata. To include property aliases in response, use
           $expand=resourceTypes/aliases.
    name: expand
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeSinglePageAsync(Integer top, String expand)
  returns:
    description: all resource providers for the tenant.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.inner.ProviderInner&text=ProviderInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  name: listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  summary: Gets all resource providers for the tenant.
  parameters:
  - description: The number of results to return. If null is passed returns all providers.
    name: top
    type: <xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />
  - description: |-
      The properties to include in the results. For example, use &amp;$expand=metadata in the query
           string to retrieve resource provider metadata. To include property aliases in response, use
           $expand=resourceTypes/aliases.
    name: expand
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  returns:
    description: all resource providers for the tenant.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.ProviderInner?alt=com.azure.resourcemanager.resources.fluent.inner.ProviderInner&text=ProviderInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
