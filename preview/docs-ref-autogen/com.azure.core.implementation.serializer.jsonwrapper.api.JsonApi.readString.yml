### YamlMime:JavaMember
uid: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.readString*
fullName: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.<T>readString
name: <T>readString
nameWithType: JsonApi.<T>readString
members:
- uid: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.<T>readString(java.lang.String,com.azure.core.implementation.serializer.jsonwrapper.api.Type<T>)
  fullName: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.<T>readString(String json, Type<T> type)
  name: <T>readString(String json, Type<T> type)
  nameWithType: JsonApi.<T>readString(String json, Type<T> type)
  summary: Deserialize string into object
  parameters:
  - description: string to deserialize
    name: json
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: type to deserialize to
    name: type
    type: <xref href="com.azure.core.implementation.serializer.jsonwrapper.api.Type?alt=com.azure.core.implementation.serializer.jsonwrapper.api.Type&text=Type" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
  syntax: public abstract T <T>readString(String json, Type<T> type)
  returns:
    description: Object of type T
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />
- uid: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.<T>readString(java.lang.String,java.lang.Class<? extends T>)
  fullName: com.azure.core.implementation.serializer.jsonwrapper.api.JsonApi.<T>readString(String json, Class<? extends T> cls)
  name: <T>readString(String json, Class<? extends T> cls)
  nameWithType: JsonApi.<T>readString(String json, Class<? extends T> cls)
  summary: Deserialize string into object
  parameters:
  - description: string to deserialize
    name: json
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: class type to deserialize to
    name: cls
    type: <xref href="java.lang.Class?alt=java.lang.Class&text=Class" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  syntax: public abstract T <T>readString(String json, Class<? extends T> cls)
  returns:
    description: Object of type T
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.core.implementation.serializer.jsonwrapper.api
artifact: com.azure:azure-core:1.3.0-beta.1
