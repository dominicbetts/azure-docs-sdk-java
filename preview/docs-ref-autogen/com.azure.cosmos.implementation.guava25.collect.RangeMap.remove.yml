### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.RangeMap.remove*
fullName: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>.remove
name: remove
nameWithType: RangeMap<K,V>.remove
members:
- uid: com.azure.cosmos.implementation.guava25.collect.RangeMap.remove(com.azure.cosmos.implementation.guava25.collect.Range<K>)
  fullName: com.azure.cosmos.implementation.guava25.collect.RangeMap<K,V>.remove(Range<K> range)
  name: remove(Range<K> range)
  nameWithType: RangeMap<K,V>.remove(Range<K> range)
  summary: |-
    Removes all associations from this range map in the specified range (optional operation).

     <p>If <code>!range.contains(k)</code>, <xref uid="#get(Comparable)" data-throw-if-not-resolved="false">get(k)</xref> will return the same result
     before and after a call to <code>remove(range)</code>. If <code>range.contains(k)</code>, then after a
     call to <code>remove(range)</code>, <code>get(k)</code> will return <code>null</code>.
  parameters:
  - name: range
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />&gt;
  syntax: public abstract void remove(Range<K> range)
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
