### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Iterators.cycle*
fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>cycle
name: <T>cycle
nameWithType: Iterators.<T>cycle
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>cycle(T...)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>cycle(T[] elements)
  name: <T>cycle(T[] elements)
  nameWithType: Iterators.<T>cycle(T[] elements)
  summary: |-
    Returns an iterator that cycles indefinitely over the provided elements.

     <p>The returned iterator supports <code>remove()</code>. After <code>remove()</code> is called,
     subsequent cycles omit the removed element, but <code>elements</code> does not change. The
     iterator's <code>hasNext()</code> method returns <code>true</code> until all of the original elements
     have been removed.

     <p><b>Warning:</b> Typical uses of the resulting iterator may produce an infinite loop. You
     should use an explicit <code>break</code> or be certain that you will eventually remove all the
     elements.
  parameters:
  - name: elements
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />[]
  syntax: public static Iterator<T> <T>cycle(T[] elements)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>cycle(java.lang.Iterable<T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>cycle(Iterable<T> iterable)
  name: <T>cycle(Iterable<T> iterable)
  nameWithType: Iterators.<T>cycle(Iterable<T> iterable)
  summary: |-
    Returns an iterator that cycles indefinitely over the elements of <code>iterable</code>.

     <p>The returned iterator supports <code>remove()</code> if the provided iterator does. After <code>
     remove()</code> is called, subsequent cycles omit the removed element, which is no longer in <code>
     iterable</code>. The iterator's <code>hasNext()</code> method returns <code>true</code> until <code>iterable</code>
     is empty.

     <p><b>Warning:</b> Typical uses of the resulting iterator may produce an infinite loop. You
     should use an explicit <code>break</code> or be certain that you will eventually remove all the
     elements.
  parameters:
  - name: iterable
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Iterator<T> <T>cycle(Iterable<T> iterable)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
