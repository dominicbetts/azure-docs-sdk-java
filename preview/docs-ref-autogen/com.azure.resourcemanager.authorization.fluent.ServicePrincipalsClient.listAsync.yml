### YamlMime:JavaMember
uid: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync*
fullName: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync
name: listAsync
nameWithType: ServicePrincipalsClient.listAsync
members:
- uid: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync()
  fullName: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync()
  name: listAsync()
  nameWithType: ServicePrincipalsClient.listAsync()
  summary: Gets a list of service principals from the current tenant.
  syntax: public PagedFlux<ServicePrincipalInner> listAsync()
  returns:
    description: a list of service principals from the current tenant.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner&text=ServicePrincipalInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync(java.lang.String)
  fullName: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync(String filter)
  name: listAsync(String filter)
  nameWithType: ServicePrincipalsClient.listAsync(String filter)
  summary: Gets a list of service principals from the current tenant.
  parameters:
  - description: The filter to apply to the operation.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ServicePrincipalInner> listAsync(String filter)
  returns:
    description: a list of service principals from the current tenant.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner&text=ServicePrincipalInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync(java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.authorization.fluent.ServicePrincipalsClient.listAsync(String filter, Context context)
  name: listAsync(String filter, Context context)
  nameWithType: ServicePrincipalsClient.listAsync(String filter, Context context)
  summary: Gets a list of service principals from the current tenant.
  parameters:
  - description: The filter to apply to the operation.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<ServicePrincipalInner> listAsync(String filter, Context context)
  returns:
    description: a list of service principals from the current tenant.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.inner.ServicePrincipalInner&text=ServicePrincipalInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.authorization.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
