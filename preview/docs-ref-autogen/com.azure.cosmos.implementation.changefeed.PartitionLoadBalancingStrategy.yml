### YamlMime:JavaType
uid: com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy
fullName: com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy
name: PartitionLoadBalancingStrategy
nameWithType: PartitionLoadBalancingStrategy
summary: |-
  A strategy defines which leases should be taken by the current host in a certain moment.

  It can set new <xref uid="com.azure.cosmos.implementation.changefeed.Lease" data-throw-if-not-resolved="false">Lease</xref> properties() for all returned leases if needed, including currently owned leases. Example

  ```java
  public class CustomStrategy : PartitionLoadBalancingStrategy
    {
        private STRING hostName;
        private STRING hostVersion;
        private Duration leaseExpirationInterval;

        private final STRING VersionPropertyKey = "version";

        public List selectLeasesToTake(List allLeases)
        {
            var takenLeases = this.findLeasesToTake(allLeases);
            foreach (var lease in takenLeases)
            {
                lease.Properties[VersionPropertyKey] = this.hostVersion;
            }

            return takenLeases;
        }

        private List findLeasesToTake(List allLeases)
        {
            List takenLeases = new List();
            foreach (var lease in allLeases)
            {
                if (string.IsNullOrWhiteSpace(lease.Owner) || this.IsExpired(lease))
                {
                    takenLeases.Add(lease);
                }

                if (lease.Owner != this.hostName)
                {
                    var ownerVersion = lease.Properties[VersionPropertyKey];
                    if (ownerVersion < this.hostVersion)
                    {
                        takenLeases.Add(lease);
                    }

                    // more logic for leases owned by other hosts
                }
            }

            return takenLeases;
        }

        private boolean isExpired(Lease lease)
        {
            return lease.Timestamp.ToUniversalTime() + this.leaseExpirationInterval < DateTime.UtcNow;
        }
    } *
  ```
syntax: public interface PartitionLoadBalancingStrategy
methods:
- com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy.selectLeasesToTake(java.util.List<com.azure.cosmos.implementation.changefeed.Lease>)
type: interface
metadata: {}
package: com.azure.cosmos.implementation.changefeed
artifact: com.azure:azure-cosmos:4.3.2-beta.2
