### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Iterables.elementsEqual*
fullName: com.azure.cosmos.implementation.guava25.collect.Iterables.elementsEqual
name: elementsEqual
nameWithType: Iterables.elementsEqual
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Iterables.elementsEqual(java.lang.Iterable<?>,java.lang.Iterable<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterables.elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)
  name: elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)
  nameWithType: Iterables.elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)
  summary: |-
    Determines whether two iterables contain equal elements in the same order. More specifically,
     this method returns <code>true</code> if <code>iterable1</code> and <code>iterable2</code> contain the same
     number of elements and every element of <code>iterable1</code> is equal to the corresponding element
     of <code>iterable2</code>.
  parameters:
  - name: iterable1
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;?&gt;
  - name: iterable2
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;?&gt;
  syntax: public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
