### YamlMime:JavaMember
uid: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync*
fullName: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync
name: exportWithResponseAsync
nameWithType: DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync
members:
- uid: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId)
  name: exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId)
  nameWithType: DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId)
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  parameters:
  - description: |-
      The name of the resource group that contains the resource. You can obtain this value
           from the Azure Resource Manager API or the portal.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the server.
    name: serverName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the scanned database.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The vulnerability assessment scan Id.
    name: scanId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<DatabaseVulnerabilityAssessmentScansExportInner>> exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId)
  returns:
    description: a database Vulnerability Assessment scan export resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner?alt=com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner&text=DatabaseVulnerabilityAssessmentScansExportInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId, Context context)
  name: exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId, Context context)
  nameWithType: DatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId, Context context)
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  parameters:
  - description: |-
      The name of the resource group that contains the resource. You can obtain this value
           from the Azure Resource Manager API or the portal.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the server.
    name: serverName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the scanned database.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The vulnerability assessment scan Id.
    name: scanId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<DatabaseVulnerabilityAssessmentScansExportInner>> exportWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String scanId, Context context)
  returns:
    description: a database Vulnerability Assessment scan export resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner?alt=com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner&text=DatabaseVulnerabilityAssessmentScansExportInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.sql.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
