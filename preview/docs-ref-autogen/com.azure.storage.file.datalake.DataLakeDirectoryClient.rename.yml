### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeDirectoryClient.rename*
fullName: com.azure.storage.file.datalake.DataLakeDirectoryClient.rename
name: rename
nameWithType: DataLakeDirectoryClient.rename
members:
- uid: com.azure.storage.file.datalake.DataLakeDirectoryClient.rename(java.lang.String,java.lang.String)
  fullName: com.azure.storage.file.datalake.DataLakeDirectoryClient.rename(String destinationFileSystem, String destinationPath)
  name: rename(String destinationFileSystem, String destinationPath)
  nameWithType: DataLakeDirectoryClient.rename(String destinationFileSystem, String destinationPath)
  summary: |-
    Moves the directory to another location within the file system.
     For more information see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create">Azure
     Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     DataLakeDirectoryClient renamedClient = client.rename&#40;fileSystemName, destinationPath&#41;;
     System.out.println&#40;&quot;Directory Client has been renamed&quot;&#41;;
     </pre>
  parameters:
  - description: |-
      The file system of the destination within the account.
       <code>null</code> for the current file system.
    name: destinationFileSystem
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      Relative path from the file system to rename the directory to, excludes the file system
       name. For example if you want to move a directory with fileSystem = "myfilesystem", path = "mydir/mysubdir" to
       another path in myfilesystem (ex: newdir) then set the destinationPath = "newdir"
    name: destinationPath
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public DataLakeDirectoryClient rename(String destinationFileSystem, String destinationPath)
  returns:
    description: A <xref uid="DataLakeDirectoryClient" data-throw-if-not-resolved="false">DataLakeDirectoryClient</xref> used to interact with the new directory created.
    type: <xref href="com.azure.storage.file.datalake.DataLakeDirectoryClient?alt=com.azure.storage.file.datalake.DataLakeDirectoryClient&text=DataLakeDirectoryClient" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
