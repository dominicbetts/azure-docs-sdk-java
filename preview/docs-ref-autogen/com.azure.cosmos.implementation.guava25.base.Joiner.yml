### YamlMime:JavaType
uid: com.azure.cosmos.implementation.guava25.base.Joiner
fullName: com.azure.cosmos.implementation.guava25.base.Joiner
name: Joiner
nameWithType: Joiner
summary: |-
  An object which joins pieces of text (specified as an array, <xref uid="java.lang.Iterable" data-throw-if-not-resolved="false">Iterable</xref>, varargs or even a <xref uid="java.util.Map" data-throw-if-not-resolved="false">Map</xref>) with a separator. It either appends the results to an <xref uid="" data-throw-if-not-resolved="false">Appendable</xref> or returns them as a <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref>. Example:

  ```java
  Joiner joiner = Joiner.on("; ").skipNulls();
    . . .
   return joiner.join("Harry", null, "Ron", "Hermione");
  ```

  This returns the string `"Harry; Ron; Hermione"`. Note that all input elements are converted to strings using <xref uid="java.lang.Object.toString()" data-throw-if-not-resolved="false">Object#toString()</xref> before being appended.

  If neither <xref uid="com.azure.cosmos.implementation.guava25.base.Joiner.skipNulls*" data-throw-if-not-resolved="false">#skipNulls()</xref> nor <xref uid="com.azure.cosmos.implementation.guava25.base.Joiner.useForNull*" data-throw-if-not-resolved="false">#useForNull(String)</xref> is specified, the joining methods will throw <xref uid="" data-throw-if-not-resolved="false">NullPointerException</xref> if any given element is null.

  **Warning: joiner instances are always immutable**; a configuration method such as `useForNull` has no effect on the instance it is invoked on! You must store and use the new joiner instance returned by the method. This makes joiners thread-safe, and safe to store as `static final` constants.

  ```java
  // Bad! Do not do this!
   Joiner joiner = Joiner.on(',');
   joiner.skipNulls(); // does nothing!
   return joiner.join("wrong", null, "wrong");
  ```

  See the Guava User Guide article on [`Joiner`][Joiner].


  [Joiner]: https://github.com/google/guava/wiki/StringsExplained#joiner
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False" />
inheritedMembers:
- java.lang.Object.clone()
- java.lang.Object.equals(java.lang.Object)
- java.lang.Object.finalize()
- java.lang.Object.getClass()
- java.lang.Object.hashCode()
- java.lang.Object.notify()
- java.lang.Object.notifyAll()
- java.lang.Object.toString()
- java.lang.Object.wait()
- java.lang.Object.wait(long)
- java.lang.Object.wait(long,int)
syntax: public class Joiner
methods:
- com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Iterable<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Object,java.lang.Object,java.lang.Object...)
- com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.lang.Object[])
- com.azure.cosmos.implementation.guava25.base.Joiner.<A>appendTo(A,java.util.Iterator<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Iterable<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object...)
- com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.lang.Object[])
- com.azure.cosmos.implementation.guava25.base.Joiner.appendTo(java.lang.StringBuilder,java.util.Iterator<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Iterable<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Object,java.lang.Object,java.lang.Object...)
- com.azure.cosmos.implementation.guava25.base.Joiner.join(java.lang.Object[])
- com.azure.cosmos.implementation.guava25.base.Joiner.join(java.util.Iterator<?>)
- com.azure.cosmos.implementation.guava25.base.Joiner.on(char)
- com.azure.cosmos.implementation.guava25.base.Joiner.on(java.lang.String)
- com.azure.cosmos.implementation.guava25.base.Joiner.skipNulls()
- com.azure.cosmos.implementation.guava25.base.Joiner.useForNull(java.lang.String)
- com.azure.cosmos.implementation.guava25.base.Joiner.withKeyValueSeparator(char)
- com.azure.cosmos.implementation.guava25.base.Joiner.withKeyValueSeparator(java.lang.String)
type: class
metadata: {}
package: com.azure.cosmos.implementation.guava25.base
artifact: com.azure:azure-cosmos:4.3.2-beta.2
