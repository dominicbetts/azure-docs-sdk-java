### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap.toImmutableListMultimap*
fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap<K,V>.<T,K,V>toImmutableListMultimap
name: <T,K,V>toImmutableListMultimap
nameWithType: ImmutableListMultimap<K,V>.<T,K,V>toImmutableListMultimap
members:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap.<T,K,V>toImmutableListMultimap(java.util.function.Function<? super T,? extends K>,java.util.function.Function<? super T,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap<K,V>.<T,K,V>toImmutableListMultimap(Function<? super T,? extends K> keyFunction, Function<? super T,? extends V> valueFunction)
  name: <T,K,V>toImmutableListMultimap(Function<? super T,? extends K> keyFunction, Function<? super T,? extends V> valueFunction)
  nameWithType: ImmutableListMultimap<K,V>.<T,K,V>toImmutableListMultimap(Function<? super T,? extends K> keyFunction, Function<? super T,? extends V> valueFunction)
  summary: |-
    Returns a <xref uid="Collector" data-throw-if-not-resolved="false">Collector</xref> that accumulates elements into an <code>ImmutableListMultimap</code>
     whose keys and values are the result of applying the provided mapping functions to the input
     elements.

     <p>For streams with <xref uid="java.util.stream#Ordering" data-throw-if-not-resolved="false">defined encounter order</xref>, that order
     is preserved, but entries are <a href="ImmutableMultimap.html#iteration">grouped by key</a>.

     <p>Example:

     <pre><code>
     static final Multimap<Character, String> FIRST_LETTER_MULTIMAP =
         Stream.of("banana", "apple", "carrot", "asparagus", "cherry")
             .collect(toImmutableListMultimap(str -> str.charAt(0), str -> str.substring(1)));

     // is equivalent to

     static final Multimap<Character, String> FIRST_LETTER_MULTIMAP =
         new ImmutableListMultimap.Builder<Character, String>()
             .put('b', "anana")
             .putAll('a', "pple", "sparagus")
             .putAll('c', "arrot", "herry")
             .build();
     </code></pre>
  parameters:
  - name: keyFunction
    type: <xref href="java.util.function.Function?alt=java.util.function.Function&text=Function" data-throw-if-not-resolved="False" />&lt;<xref href="? super T?alt=? super T&text=? super T" data-throw-if-not-resolved="False" />,<xref href="? extends K?alt=? extends K&text=? extends K" data-throw-if-not-resolved="False" />&gt;
  - name: valueFunction
    type: <xref href="java.util.function.Function?alt=java.util.function.Function&text=Function" data-throw-if-not-resolved="False" />&lt;<xref href="? super T?alt=? super T&text=? super T" data-throw-if-not-resolved="False" />,<xref href="? extends V?alt=? extends V&text=? extends V" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Collector<T,?,ImmutableListMultimap<K,V>> <T,K,V>toImmutableListMultimap(Function<? super T,? extends K> keyFunction, Function<? super T,? extends V> valueFunction)
  returns:
    type: <xref href="java.util.stream.Collector?alt=java.util.stream.Collector&text=Collector" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />,?,<xref href="com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap&text=ImmutableListMultimap" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
