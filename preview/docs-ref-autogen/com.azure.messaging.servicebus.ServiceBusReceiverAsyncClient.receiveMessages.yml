### YamlMime:JavaMember
uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.receiveMessages*
fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.receiveMessages
name: receiveMessages
nameWithType: ServiceBusReceiverAsyncClient.receiveMessages
members:
- uid: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.receiveMessages()
  fullName: com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.receiveMessages()
  name: receiveMessages()
  nameWithType: ServiceBusReceiverAsyncClient.receiveMessages()
  summary: |-
    Receives an <b>infinite</b> stream of <xref uid="ServiceBusReceivedMessage" data-throw-if-not-resolved="false">messages</xref> from the Service Bus entity.
     This Flux continuously receives messages from a Service Bus entity until either:

     <ul>
         <li>The receiver is closed.</li>
         <li>The subscription to the Flux is disposed.</li>
         <li>A terminal signal from a downstream subscriber is propagated upstream (ie. <xref uid="Flux#take(long)" data-throw-if-not-resolved="false">Flux#take(long)</xref> or
         <xref uid="Flux#take(Duration)" data-throw-if-not-resolved="false">Flux#take(Duration)</xref>).</li>
         <li>An <xref uid="AmqpException" data-throw-if-not-resolved="false">AmqpException</xref> occurs that causes the receive link to stop.</li>
     </ul>
  syntax: public Flux<ServiceBusReceivedMessageContext> receiveMessages()
  returns:
    description: An <b>infinite</b> stream of messages from the Service Bus entity.
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.messaging.servicebus.ServiceBusReceivedMessageContext?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessageContext&text=ServiceBusReceivedMessageContext" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.messaging.servicebus
artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
