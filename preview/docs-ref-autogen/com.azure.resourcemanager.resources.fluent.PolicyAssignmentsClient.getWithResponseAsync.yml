### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync*
fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync
name: getWithResponseAsync
nameWithType: PolicyAssignmentsClient.getWithResponseAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync(String scope, String policyAssignmentName)
  name: getWithResponseAsync(String scope, String policyAssignmentName)
  nameWithType: PolicyAssignmentsClient.getWithResponseAsync(String scope, String policyAssignmentName)
  summary: This operation retrieves a single policy assignment, given its name and the scope it was created at.
  parameters:
  - description: |-
      The scope of the policy assignment. Valid scopes are: management group (format:
           '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
           '/subscriptions/{subscriptionId}'), resource group (format:
           '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:
           '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
    name: scope
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the policy assignment to get.
    name: policyAssignmentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<PolicyAssignmentInner>> getWithResponseAsync(String scope, String policyAssignmentName)
  returns:
    description: the policy assignment.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner&text=PolicyAssignmentInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.getWithResponseAsync(String scope, String policyAssignmentName, Context context)
  name: getWithResponseAsync(String scope, String policyAssignmentName, Context context)
  nameWithType: PolicyAssignmentsClient.getWithResponseAsync(String scope, String policyAssignmentName, Context context)
  summary: This operation retrieves a single policy assignment, given its name and the scope it was created at.
  parameters:
  - description: |-
      The scope of the policy assignment. Valid scopes are: management group (format:
           '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
           '/subscriptions/{subscriptionId}'), resource group (format:
           '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:
           '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
    name: scope
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the policy assignment to get.
    name: policyAssignmentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<PolicyAssignmentInner>> getWithResponseAsync(String scope, String policyAssignmentName, Context context)
  returns:
    description: the policy assignment.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner&text=PolicyAssignmentInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
