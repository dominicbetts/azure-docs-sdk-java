### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire*
fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire
name: acquire
nameWithType: RntbdClientChannelPool.acquire
members:
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire()
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire()
  name: acquire()
  nameWithType: RntbdClientChannelPool.acquire()
  summary: |-
    Acquire a <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> from the current <xref uid="RntbdClientChannelPool" data-throw-if-not-resolved="false">pool</xref>.
     <p>
     TODO (DANOBLE) Javadoc for <xref uid="#acquire" data-throw-if-not-resolved="false">#acquire</xref>.
  syntax: public Future<Channel> acquire()
  returns:
    description: |-
      a <xref uid="Promise" data-throw-if-not-resolved="false">promise</xref> to be notified when the operation completes. If the operation fails, <code>
       channel</code> will be closed automatically.

       <p><strong>
       It is important to <xref uid="#release" data-throw-if-not-resolved="false">#release</xref> every <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> acquired from the pool, even when the <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> is closed explicitly.</strong>
    type: <xref href="io.netty.util.concurrent.Future?alt=io.netty.util.concurrent.Future&text=Future" data-throw-if-not-resolved="False" />&lt;<xref href="io.netty.channel.Channel?alt=io.netty.channel.Channel&text=Channel" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire(io.netty.util.concurrent.Promise<io.netty.channel.Channel>)
  fullName: com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.acquire(Promise<Channel> promise)
  name: acquire(Promise<Channel> promise)
  nameWithType: RntbdClientChannelPool.acquire(Promise<Channel> promise)
  summary: |-
    Acquire a <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> from the current <xref uid="RntbdClientChannelPool" data-throw-if-not-resolved="false">pool</xref>.
     <p>
     TODO (DANOBLE) Javadoc for <xref uid="#acquire" data-throw-if-not-resolved="false">#acquire</xref>.
  parameters:
  - description: a <xref uid="Promise" data-throw-if-not-resolved="false">promise</xref> to be notified when the operation completes.
    name: promise
    type: <xref href="io.netty.util.concurrent.Promise?alt=io.netty.util.concurrent.Promise&text=Promise" data-throw-if-not-resolved="False" />&lt;<xref href="io.netty.channel.Channel?alt=io.netty.channel.Channel&text=Channel" data-throw-if-not-resolved="False" />&gt;
  syntax: public Future<Channel> acquire(Promise<Channel> promise)
  returns:
    description: |-
      a reference to <code>promise</code>. If the operation fails, <code>channel</code> will be closed automatically.

       <p><strong>
       It is important to <xref uid="#release" data-throw-if-not-resolved="false">#release</xref> every <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> acquired from the pool, even when the <xref uid="Channel" data-throw-if-not-resolved="false">channel</xref> is closed explicitly.</strong>
    type: <xref href="io.netty.util.concurrent.Future?alt=io.netty.util.concurrent.Future&text=Future" data-throw-if-not-resolved="False" />&lt;<xref href="io.netty.channel.Channel?alt=io.netty.channel.Channel&text=Channel" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.directconnectivity.rntbd
artifact: com.azure:azure-cosmos:4.3.2-beta.2
