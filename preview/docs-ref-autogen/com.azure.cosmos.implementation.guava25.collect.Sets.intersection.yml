### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Sets.intersection*
fullName: com.azure.cosmos.implementation.guava25.collect.Sets.<E>intersection
name: <E>intersection
nameWithType: Sets.<E>intersection
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.<E>intersection(java.util.Set<E>,java.util.Set<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.<E>intersection(Set<E> set1, Set<?> set2)
  name: <E>intersection(Set<E> set1, Set<?> set2)
  nameWithType: Sets.<E>intersection(Set<E> set1, Set<?> set2)
  summary: |-
    Returns an unmodifiable <b>view</b> of the intersection of two sets. The returned set contains
     all elements that are contained by both backing sets. The iteration order of the returned set
     matches that of <code>set1</code>.

     <p>Results are undefined if <code>set1</code> and <code>set2</code> are sets based on different
     equivalence relations (as <code>HashSet</code>, <code>TreeSet</code>, and the keySet of an <code>
     IdentityHashMap</code> all are).

     <p><b>Note:</b> The returned view performs slightly better when <code>set1</code> is the smaller of
     the two sets. If you have reason to believe one of your sets will generally be smaller than the
     other, pass it first. Unfortunately, since this method sets the generic type of the returned
     set based on the type of the first set passed, this could in rare cases force you to make a
     cast, for example:

     <pre><code>
     Set<Object> aFewBadObjects = ...
     Set<String> manyBadStrings = ...

     // impossible for a non-String to be in the intersection
     SuppressWarnings("unchecked")
     Set<String> badStrings = (Set) Sets.intersection(
         aFewBadObjects, manyBadStrings);
     </code></pre>

     <p>This is unfortunate, but should come up only very rarely.
  parameters:
  - name: set1
    type: <xref href="java.util.Set?alt=java.util.Set&text=Set" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
  - name: set2
    type: <xref href="java.util.Set?alt=java.util.Set&text=Set" data-throw-if-not-resolved="False" />&lt;?&gt;
  syntax: public static Sets.SetView<E> <E>intersection(Set<E> set1, Set<?> set2)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Sets.SetView?alt=com.azure.cosmos.implementation.guava25.collect.Sets.SetView&text=SetView" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
