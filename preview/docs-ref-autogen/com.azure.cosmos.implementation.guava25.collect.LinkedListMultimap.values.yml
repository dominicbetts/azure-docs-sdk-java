### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.values*
fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.values
name: values
nameWithType: LinkedListMultimap<K,V>.values
members:
- uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.values()
  name: values()
  nameWithType: LinkedListMultimap<K,V>.values()
  summary: |-
    Returns a view collection containing the <i>value</i> from each key-value pair contained in
     this multimap, without collapsing duplicates (so <code>values().size() == size()</code>).

     <p>Changes to the returned collection will update the underlying multimap, and vice versa.
     However, <i>adding</i> to the returned collection is not possible.

     <p>The iterator generated by the returned collection traverses the values in the order they
     were added to the multimap. Because the values may have duplicates and follow the insertion
     ordering, this method returns a <xref uid="List" data-throw-if-not-resolved="false">List</xref>, instead of the <xref uid="Collection" data-throw-if-not-resolved="false">Collection</xref> specified in
     the <xref uid="ListMultimap" data-throw-if-not-resolved="false">ListMultimap</xref> interface.
  overridden: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.values()
  syntax: public List<V> values()
  returns:
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
