### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.generateSas*
fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.generateSas
name: generateSas
nameWithType: DataLakePathAsyncClient.generateSas
members:
- uid: com.azure.storage.file.datalake.DataLakePathAsyncClient.generateSas(com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues)
  fullName: com.azure.storage.file.datalake.DataLakePathAsyncClient.generateSas(DataLakeServiceSasSignatureValues dataLakeServiceSasSignatureValues)
  name: generateSas(DataLakeServiceSasSignatureValues dataLakeServiceSasSignatureValues)
  nameWithType: DataLakePathAsyncClient.generateSas(DataLakeServiceSasSignatureValues dataLakeServiceSasSignatureValues)
  summary: "Generates a service SAS for the path using the specified <xref uid=\"DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">DataLakeServiceSasSignatureValues</xref>\n Note : The client must be authenticated via <xref uid=\"StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n <p>See <xref uid=\"DataLakeServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">DataLakeServiceSasSignatureValues</xref> for more information on how to construct a service SAS.</p>\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n OffsetDateTime expiryTime = OffsetDateTime.now&#40;&#41;.plusDays&#40;1&#41;;\n PathSasPermission permission = new PathSasPermission&#40;&#41;.setReadPermission&#40;true&#41;;\n \n DataLakeServiceSasSignatureValues values = new DataLakeServiceSasSignatureValues&#40;expiryTime, permission&#41;\n     .setStartTime&#40;OffsetDateTime.now&#40;&#41;&#41;;\n \n client.generateSas&#40;values&#41;; &#47;&#47; Client must be authenticated via StorageSharedKeyCredential\n </pre>"
  parameters:
  - description: <xref uid="DataLakeServiceSasSignatureValues" data-throw-if-not-resolved="false">DataLakeServiceSasSignatureValues</xref>
    name: dataLakeServiceSasSignatureValues
    type: <xref href="com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues?alt=com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues&text=DataLakeServiceSasSignatureValues" data-throw-if-not-resolved="False" />
  syntax: public String generateSas(DataLakeServiceSasSignatureValues dataLakeServiceSasSignatureValues)
  returns:
    description: A <code>String</code> representing all SAS query parameters.
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
