### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse*
fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse
name: getPageRangesWithResponse
nameWithType: PageBlobClient.getPageRangesWithResponse
members:
- uid: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.blob.specialized.PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  name: getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: PageBlobClient.getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  summary: "Returns the list of valid page ranges for a page blob or snapshot of a page blob. For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n BlobRange blobRange = new BlobRange&#40;offset&#41;;\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n Context context = new Context&#40;key, value&#41;;\n \n PageList pageList = client\n     .getPageRangesWithResponse&#40;blobRange, blobRequestConditions, timeout, context&#41;.getValue&#40;&#41;;\n \n System.out.println&#40;&quot;Valid Page Ranges are:&quot;&#41;;\n for &#40;PageRange pageRange : pageList.getPageRange&#40;&#41;&#41; &#123;\n     System.out.printf&#40;&quot;Start: %s, End: %s%n&quot;, pageRange.getStart&#40;&#41;, pageRange.getEnd&#40;&#41;&#41;;\n &#125;\n </pre>"
  parameters:
  - description: <xref uid="BlobRange" data-throw-if-not-resolved="false">BlobRange</xref>
    name: blobRange
    type: <xref href="com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange" data-throw-if-not-resolved="False" />
  - description: <xref uid="BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<PageList> getPageRangesWithResponse(BlobRange blobRange, BlobRequestConditions requestConditions, Duration timeout, Context context)
  returns:
    description: All the page ranges.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.blob.models.PageList?alt=com.azure.storage.blob.models.PageList&text=PageList" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0-beta.1
