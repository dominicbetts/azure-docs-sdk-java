### YamlMime:JavaMember
uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync*
fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync
members:
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  summary: Create or update an Azure Cosmos DB SQL container.
  parameters:
  - description: Name of an Azure resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database account name.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database name.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB container name.
    name: containerName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Parameters to create and update Cosmos DB container.
    name: createUpdateSqlContainerParameters
    type: <xref href="com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters?alt=com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters&text=SqlContainerCreateUpdateParameters" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<SqlContainerGetResultsInner>> beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  returns:
    description: an Azure Cosmos DB container.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner&text=SqlContainerGetResultsInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  name: beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClient.beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  summary: Create or update an Azure Cosmos DB SQL container.
  parameters:
  - description: Name of an Azure resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database account name.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database name.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB container name.
    name: containerName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Parameters to create and update Cosmos DB container.
    name: createUpdateSqlContainerParameters
    type: <xref href="com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters?alt=com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters&text=SqlContainerCreateUpdateParameters" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<SqlContainerGetResultsInner>> beginCreateUpdateSqlContainerWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  returns:
    description: an Azure Cosmos DB container.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.inner.SqlContainerGetResultsInner&text=SqlContainerGetResultsInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.cosmos.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
