### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileClient.renameWithResponse*
fullName: com.azure.storage.file.datalake.DataLakeFileClient.renameWithResponse
name: renameWithResponse
nameWithType: DataLakeFileClient.renameWithResponse
members:
- uid: com.azure.storage.file.datalake.DataLakeFileClient.renameWithResponse(java.lang.String,java.lang.String,com.azure.storage.file.datalake.models.DataLakeRequestConditions,com.azure.storage.file.datalake.models.DataLakeRequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.datalake.DataLakeFileClient.renameWithResponse(String destinationFileSystem, String destinationPath, DataLakeRequestConditions sourceRequestConditions, DataLakeRequestConditions destinationRequestConditions, Duration timeout, Context context)
  name: renameWithResponse(String destinationFileSystem, String destinationPath, DataLakeRequestConditions sourceRequestConditions, DataLakeRequestConditions destinationRequestConditions, Duration timeout, Context context)
  nameWithType: DataLakeFileClient.renameWithResponse(String destinationFileSystem, String destinationPath, DataLakeRequestConditions sourceRequestConditions, DataLakeRequestConditions destinationRequestConditions, Duration timeout, Context context)
  summary: "Moves the file to another location within the file system.\n For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n DataLakeRequestConditions sourceRequestConditions = new DataLakeRequestConditions&#40;&#41;\n     .setLeaseId&#40;leaseId&#41;;\n DataLakeRequestConditions destinationRequestConditions = new DataLakeRequestConditions&#40;&#41;;\n \n DataLakeFileClient newRenamedClient = client.renameWithResponse&#40;fileSystemName, destinationPath,\n     sourceRequestConditions, destinationRequestConditions, timeout, new Context&#40;key1, value1&#41;&#41;.getValue&#40;&#41;;\n System.out.println&#40;&quot;Directory Client has been renamed&quot;&#41;;\n </pre>"
  parameters:
  - description: |-
      The file system of the destination within the account.
       <code>null</code> for the current file system.
    name: destinationFileSystem
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      Relative path from the file system to rename the file to, excludes the file system name.
       For example if you want to move a file with fileSystem = "myfilesystem", path = "mydir/hello.txt" to another path
       in myfilesystem (ex: newdir/hi.txt) then set the destinationPath = "newdir/hi.txt"
    name: destinationPath
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref> against the source.
    name: sourceRequestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref> against the destination.
    name: destinationRequestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Response<DataLakeFileClient> renameWithResponse(String destinationFileSystem, String destinationPath, DataLakeRequestConditions sourceRequestConditions, DataLakeRequestConditions destinationRequestConditions, Duration timeout, Context context)
  returns:
    description: |-
      A <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> that contains a <xref uid="DataLakeFileClient" data-throw-if-not-resolved="false">DataLakeFileClient</xref>
       used to interact with the file created.
    type: <xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.DataLakeFileClient?alt=com.azure.storage.file.datalake.DataLakeFileClient&text=DataLakeFileClient" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
