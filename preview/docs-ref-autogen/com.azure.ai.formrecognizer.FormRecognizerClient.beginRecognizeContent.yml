### YamlMime:JavaMember
uid: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent*
fullName: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent
name: beginRecognizeContent
nameWithType: FormRecognizerClient.beginRecognizeContent
members:
- uid: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent(java.io.InputStream,long)
  fullName: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent(InputStream form, long length)
  name: beginRecognizeContent(InputStream form, long length)
  nameWithType: FormRecognizerClient.beginRecognizeContent(InputStream form, long length)
  summary: |-
    Recognizes layout data using optical character recognition (OCR) and a custom trained model.
     <p>The service does not support cancellation of the long running operation and returns with an
     error message indicating absence of cancellation support.</p>

     <p><strong>Code sample</strong></p>
     <pre>
     File form = new File&#40;&quot;&#123;local&#47;file_path&#47;fileName.pdf&#125;&quot;&#41;;
     byte[] fileContent = Files.readAllBytes&#40;form.toPath&#40;&#41;&#41;;
     try &#40;InputStream targetStream = new ByteArrayInputStream&#40;fileContent&#41;&#41; &#123;
         formRecognizerClient.beginRecognizeContent&#40;targetStream, form.length&#40;&#41;&#41;
             .getFinalResult&#40;&#41;
             .forEach&#40;formPage -&gt; &#123;
                 System.out.printf&#40;&quot;Page Angle: %s%n&quot;, formPage.getTextAngle&#40;&#41;&#41;;
                 System.out.printf&#40;&quot;Page Dimension unit: %s%n&quot;, formPage.getUnit&#40;&#41;&#41;;
                 &#47;&#47; Table information
                 System.out.println&#40;&quot;Recognized Tables: &quot;&#41;;
                 formPage.getTables&#40;&#41;
                     .stream&#40;&#41;
                     .flatMap&#40;formTable -&gt; formTable.getCells&#40;&#41;.stream&#40;&#41;&#41;
                     .forEach&#40;recognizedTableCell -&gt; System.out.printf&#40;&quot;%s &quot;, recognizedTableCell.getText&#40;&#41;&#41;&#41;;
             &#125;&#41;;
     &#125;
     </pre>
  parameters:
  - description: The data of the form to recognize content information from.
    name: form
    type: <xref href="java.io.InputStream?alt=java.io.InputStream&text=InputStream" data-throw-if-not-resolved="False" />
  - description: The exact length of the data.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  syntax: public SyncPoller<FormRecognizerOperationResult,List<FormPage>> beginRecognizeContent(InputStream form, long length)
  returns:
    description: |-
      A <xref uid="SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> that polls the recognize content operation until it has completed, has failed,
       or has been cancelled. The completed operation returns a List of <xref uid="FormPage" data-throw-if-not-resolved="false">FormPage</xref>.
    type: <xref href="com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormPage?alt=com.azure.ai.formrecognizer.models.FormPage&text=FormPage" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent(java.io.InputStream,long,com.azure.ai.formrecognizer.models.RecognizeContentOptions,com.azure.core.util.Context)
  fullName: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeContent(InputStream form, long length, RecognizeContentOptions recognizeContentOptions, Context context)
  name: beginRecognizeContent(InputStream form, long length, RecognizeContentOptions recognizeContentOptions, Context context)
  nameWithType: FormRecognizerClient.beginRecognizeContent(InputStream form, long length, RecognizeContentOptions recognizeContentOptions, Context context)
  summary: "Recognizes content/layout data from the provided document data using optical character recognition (OCR).\n <p>The service does not support cancellation of the long running operation and returns with an\n error message indicating absence of cancellation support</p>\n\n <p><strong>Code sample</strong></p>\n <pre>\n File form = new File&#40;&quot;&#123;file_source_url&#125;&quot;&#41;;\n byte[] fileContent = Files.readAllBytes&#40;form.toPath&#40;&#41;&#41;;\n try &#40;InputStream targetStream = new ByteArrayInputStream&#40;fileContent&#41;&#41; &#123;\n \n     for &#40;FormPage formPage : formRecognizerClient.beginRecognizeContent&#40;targetStream, form.length&#40;&#41;,\n         new RecognizeContentOptions&#40;&#41;\n             .setPollInterval&#40;Duration.ofSeconds&#40;5&#41;&#41;, Context.NONE&#41;\n         .getFinalResult&#40;&#41;&#41; &#123;\n         System.out.printf&#40;&quot;Page Angle: %s%n&quot;, formPage.getTextAngle&#40;&#41;&#41;;\n         System.out.printf&#40;&quot;Page Dimension unit: %s%n&quot;, formPage.getUnit&#40;&#41;&#41;;\n         &#47;&#47; Table information\n         System.out.println&#40;&quot;Recognized Tables: &quot;&#41;;\n         formPage.getTables&#40;&#41;\n             .stream&#40;&#41;\n             .flatMap&#40;formTable -&gt; formTable.getCells&#40;&#41;.stream&#40;&#41;&#41;\n             .forEach&#40;recognizedTableCell -&gt; System.out.printf&#40;&quot;%s &quot;, recognizedTableCell.getText&#40;&#41;&#41;&#41;;\n     &#125;\n &#125;\n </pre>"
  parameters:
  - description: The data of the form to recognize content information from.
    name: form
    type: <xref href="java.io.InputStream?alt=java.io.InputStream&text=InputStream" data-throw-if-not-resolved="False" />
  - description: The exact length of the data.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: |-
      The additional configurable <xref uid="RecognizeContentOptions" data-throw-if-not-resolved="false">options</xref>
       that may be passed when recognizing content/layout on a form.
    name: recognizeContentOptions
    type: <xref href="com.azure.ai.formrecognizer.models.RecognizeContentOptions?alt=com.azure.ai.formrecognizer.models.RecognizeContentOptions&text=RecognizeContentOptions" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the HTTP pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public SyncPoller<FormRecognizerOperationResult,List<FormPage>> beginRecognizeContent(InputStream form, long length, RecognizeContentOptions recognizeContentOptions, Context context)
  returns:
    description: |-
      A <xref uid="SyncPoller" data-throw-if-not-resolved="false">SyncPoller</xref> that polls the recognize content operation until it has completed,
       has failed, or has been cancelled. The completed operation returns a List of <xref uid="FormPage" data-throw-if-not-resolved="false">FormPage</xref>.
    type: <xref href="com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormPage?alt=com.azure.ai.formrecognizer.models.FormPage&text=FormPage" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.ai.formrecognizer
artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
