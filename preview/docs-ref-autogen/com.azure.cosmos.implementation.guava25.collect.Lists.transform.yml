### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Lists.transform*
fullName: com.azure.cosmos.implementation.guava25.collect.Lists.<F,T>transform
name: <F,T>transform
nameWithType: Lists.<F,T>transform
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Lists.<F,T>transform(java.util.List<F>,com.azure.cosmos.implementation.guava25.base.Function<? super F,? extends T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Lists.<F,T>transform(List<F> fromList, Function<? super F,? extends T> function)
  name: <F,T>transform(List<F> fromList, Function<? super F,? extends T> function)
  nameWithType: Lists.<F,T>transform(List<F> fromList, Function<? super F,? extends T> function)
  summary: |-
    Returns a list that applies <code>function</code> to each element of <code>fromList</code>. The returned
     list is a transformed view of <code>fromList</code>; changes to <code>fromList</code> will be reflected
     in the returned list and vice versa.

     <p>Since functions are not reversible, the transform is one-way and new items cannot be stored
     in the returned list. The <code>add</code>, <code>addAll</code> and <code>set</code> methods are unsupported
     in the returned list.

     <p>The function is applied lazily, invoked when needed. This is necessary for the returned list
     to be a view, but it means that the function will be applied many times for bulk operations
     like <xref uid="List#contains" data-throw-if-not-resolved="false">List#contains</xref> and <xref uid="List#hashCode" data-throw-if-not-resolved="false">List#hashCode</xref>. For this to perform well, <code>
     function</code> should be fast. To avoid lazy evaluation when the returned list doesn't need to be a
     view, copy the returned list into a new list of your choosing.

     <p>If <code>fromList</code> implements <xref uid="RandomAccess" data-throw-if-not-resolved="false">RandomAccess</xref>, so will the returned list. The returned
     list is threadsafe if the supplied list and function are.

     <p>If only a <code>Collection</code> or <code>Iterable</code> input is available, use <xref uid="Collections2#transform" data-throw-if-not-resolved="false">Collections2#transform</xref> or <xref uid="Iterables#transform" data-throw-if-not-resolved="false">Iterables#transform</xref>.

     <p><b>Note:</b> serializing the returned list is implemented by serializing <code>fromList</code>,
     its contents, and <code>function</code> -- <i>not</i> by serializing the transformed values. This
     can lead to surprising behavior, so serializing the returned list is <b>not recommended</b>.
     Instead, copy the list using <xref uid="ImmutableList#copyOf(Collection)" data-throw-if-not-resolved="false">ImmutableList#copyOf(Collection)</xref> (for example), then
     serialize the copy. Other methods similar to this do not implement serialization at all for
     this reason.

     <p><b>Java 8 users:</b> many use cases for this method are better addressed by <xref uid="java.util.stream.Stream#map" data-throw-if-not-resolved="false">java.util.stream.Stream#map</xref>. This method is not being deprecated, but we gently encourage you
     to migrate to streams.
  parameters:
  - name: fromList
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="F?alt=F&text=F" data-throw-if-not-resolved="False" />&gt;
  - name: function
    type: <xref href="com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function" data-throw-if-not-resolved="False" />&lt;<xref href="? super F?alt=? super F&text=? super F" data-throw-if-not-resolved="False" />,<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static List<T> <F,T>transform(List<F> fromList, Function<? super F,? extends T> function)
  returns:
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
