### YamlMime:JavaMember
uid: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync*
fullName: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync
name: beginFailoverWithoutPollingWithResponseAsync
nameWithType: StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync
members:
- uid: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName)
  name: beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName)
  summary: |-
    Failover request can be triggered for a storage account in case of availability issues. The failover occurs from
     the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become
     primary after failover.
  parameters:
  - description: |-
      The name of the resource group within the user's subscription. The name is case
           insensitive.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The name of the storage account within the specified resource group. Storage account names
           must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.storage.fluent.StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, Context context)
  name: beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, Context context)
  nameWithType: StorageAccountsClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, Context context)
  summary: |-
    Failover request can be triggered for a storage account in case of availability issues. The failover occurs from
     the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become
     primary after failover.
  parameters:
  - description: |-
      The name of the resource group within the user's subscription. The name is case
           insensitive.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The name of the storage account within the specified resource group. Storage account names
           must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, Context context)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.storage.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
