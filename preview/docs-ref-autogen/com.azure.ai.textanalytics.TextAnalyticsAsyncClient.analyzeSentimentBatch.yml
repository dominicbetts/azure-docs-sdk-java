### YamlMime:JavaMember
uid: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch*
fullName: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch
name: analyzeSentimentBatch
nameWithType: TextAnalyticsAsyncClient.analyzeSentimentBatch
members:
- uid: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)
  fullName: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)
  name: analyzeSentimentBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)
  nameWithType: TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and\n Neutral) for the document and each sentence within it.\n\n <p>Analyze sentiment in a list of <xref uid=\"TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes\n to the call asynchronously and prints out the sentiment details when a response is received.</p>\n\n <pre>\n List&lt;TextDocumentInput&gt; textDocumentInputs1 = Arrays.asList&#40;\n     new TextDocumentInput&#40;&quot;0&quot;, &quot;The hotel was dark and unclean.&quot;&#41;,\n     new TextDocumentInput&#40;&quot;1&quot;, &quot;The restaurant had amazing gnocchi.&quot;&#41;&#41;;\n \n &#47;&#47; Request options: show statistics and model version\n TextAnalyticsRequestOptions requestOptions = new TextAnalyticsRequestOptions&#40;&#41;.setIncludeStatistics&#40;true&#41;;\n \n textAnalyticsAsyncClient.analyzeSentimentBatch&#40;textDocumentInputs1, requestOptions&#41;.byPage&#40;&#41;\n     .subscribe&#40;response -&gt; &#123;\n         &#47;&#47; Batch statistics\n         TextDocumentBatchStatistics batchStatistics = response.getStatistics&#40;&#41;;\n         System.out.printf&#40;&quot;Batch statistics, transaction count: %s, valid document count: %s.%n&quot;,\n             batchStatistics.getTransactionCount&#40;&#41;,\n             batchStatistics.getValidDocumentCount&#40;&#41;&#41;;\n \n         response.getElements&#40;&#41;.forEach&#40;analyzeSentimentResult -&gt; &#123;\n             System.out.printf&#40;&quot;Document ID: %s%n&quot;, analyzeSentimentResult.getId&#40;&#41;&#41;;\n             DocumentSentiment documentSentiment = analyzeSentimentResult.getDocumentSentiment&#40;&#41;;\n             System.out.printf&#40;&quot;Recognized document sentiment: %s.%n&quot;, documentSentiment.getSentiment&#40;&#41;&#41;;\n             documentSentiment.getSentences&#40;&#41;.forEach&#40;sentenceSentiment -&gt;\n                 System.out.printf&#40;&quot;Recognized sentence sentiment: %s, positive score: %.2f, &quot;\n                         + &quot;neutral score: %.2f, negative score: %.2f.%n&quot;,\n                     sentenceSentiment.getSentiment&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;&#41;;\n         &#125;&#41;;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      A list of <xref uid="TextDocumentInput" data-throw-if-not-resolved="false">documents</xref>  to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.TextDocumentInput?alt=com.azure.ai.textanalytics.models.TextDocumentInput&text=TextDocumentInput" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The <xref uid="TextAnalyticsRequestOptions" data-throw-if-not-resolved="false">options</xref> to configure the scoring model for documents
       and show statistics.
    name: options
    type: <xref href="com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions" data-throw-if-not-resolved="False" />
  syntax: public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)
  returns:
    description: |-
      A <xref uid="TextAnalyticsPagedFlux" data-throw-if-not-resolved="false">TextAnalyticsPagedFlux</xref> contains a list of
       <xref uid="AnalyzeSentimentResult" data-throw-if-not-resolved="false">analyzed text sentiment document result</xref>.
    type: <xref href="com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.AnalyzeSentimentResult?alt=com.azure.ai.textanalytics.models.AnalyzeSentimentResult&text=AnalyzeSentimentResult" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>)
  fullName: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents)
  name: analyzeSentimentBatch(Iterable<String> documents)
  nameWithType: TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and\n Neutral) for the document and each sentence within it.\n\n This method will use the default language that sets up in\n <xref uid=\"TextAnalyticsClientBuilder#defaultLanguage(String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as\n the language.\n\n <p>Analyze sentiment in a list of documents. Subscribes to the call asynchronously and prints out the\n sentiment details when a response is received.</p>\n\n <pre>\n List&lt;String&gt; documents = Arrays.asList&#40;\n     &quot;The hotel was dark and unclean.&quot;, &quot;The restaurant had amazing gnocchi.&quot;&#41;;\n \n textAnalyticsAsyncClient.analyzeSentimentBatch&#40;documents&#41;.byPage&#40;&#41;.subscribe&#40;response -&gt; &#123;\n     &#47;&#47; Batch statistics\n     TextDocumentBatchStatistics batchStatistics = response.getStatistics&#40;&#41;;\n     System.out.printf&#40;&quot;Batch statistics, transaction count: %s, valid document count: %s.%n&quot;,\n         batchStatistics.getTransactionCount&#40;&#41;, batchStatistics.getValidDocumentCount&#40;&#41;&#41;;\n \n     response.getElements&#40;&#41;.forEach&#40;analyzeSentimentResult -&gt; &#123;\n         System.out.printf&#40;&quot;Document ID: %s%n&quot;, analyzeSentimentResult.getId&#40;&#41;&#41;;\n         DocumentSentiment documentSentiment = analyzeSentimentResult.getDocumentSentiment&#40;&#41;;\n         System.out.printf&#40;&quot;Recognized document sentiment: %s.%n&quot;, documentSentiment.getSentiment&#40;&#41;&#41;;\n         documentSentiment.getSentences&#40;&#41;.forEach&#40;sentenceSentiment -&gt;\n             System.out.printf&#40;&quot;Recognized sentence sentiment: %s, positive score: %.2f, neutral score: %.2f, &quot;\n                     + &quot;negative score: %.2f.%n&quot;,\n                 sentenceSentiment.getSentiment&#40;&#41;,\n                 sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n                 sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n                 sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;&#41;;\n     &#125;&#41;;\n &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      A list of documents to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  syntax: public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> documents)
  returns:
    description: |-
      A <xref uid="TextAnalyticsPagedFlux" data-throw-if-not-resolved="false">TextAnalyticsPagedFlux</xref> contains a list of
       <xref uid="AnalyzeSentimentResult" data-throw-if-not-resolved="false">analyzed text sentiment document result</xref>.
    type: <xref href="com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.AnalyzeSentimentResult?alt=com.azure.ai.textanalytics.models.AnalyzeSentimentResult&text=AnalyzeSentimentResult" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String)
  fullName: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents, String language)
  name: analyzeSentimentBatch(Iterable<String> documents, String language)
  nameWithType: TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents, String language)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and\n Neutral) for the document and each sentence within it.\n\n <p>Analyze sentiment in a list of documents with provided language code. Subscribes to the\n call asynchronously and prints out the sentiment details when a response is received.</p>\n\n <pre>\n List&lt;String&gt; documents = Arrays.asList&#40;\n     &quot;The hotel was dark and unclean.&quot;,\n     &quot;The restaurant had amazing gnocchi.&quot;\n &#41;;\n \n textAnalyticsAsyncClient.analyzeSentimentBatch&#40;documents, &quot;en&quot;&#41;.byPage&#40;&#41;.subscribe&#40;\n     response -&gt; &#123;\n         &#47;&#47; Batch statistics\n         TextDocumentBatchStatistics batchStatistics = response.getStatistics&#40;&#41;;\n         System.out.printf&#40;&quot;Batch statistics, transaction count: %s, valid document count: %s.%n&quot;,\n             batchStatistics.getTransactionCount&#40;&#41;, batchStatistics.getValidDocumentCount&#40;&#41;&#41;;\n \n         response.getElements&#40;&#41;.forEach&#40;analyzeSentimentResult -&gt; &#123;\n             System.out.printf&#40;&quot;Document ID: %s%n&quot;, analyzeSentimentResult.getId&#40;&#41;&#41;;\n             DocumentSentiment documentSentiment = analyzeSentimentResult.getDocumentSentiment&#40;&#41;;\n             System.out.printf&#40;&quot;Recognized document sentiment: %s.%n&quot;, documentSentiment.getSentiment&#40;&#41;&#41;;\n             documentSentiment.getSentences&#40;&#41;.forEach&#40;sentenceSentiment -&gt;\n                 System.out.printf&#40;&quot;Recognized sentence sentiment: %s, positive score: %.2f, &quot;\n                         + &quot;neutral score: %.2f, negative score: %.2f.%n&quot;,\n                     sentenceSentiment.getSentiment&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;&#41;;\n         &#125;&#41;;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      A list of documents to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The 2 letter ISO 639-1 representation of language for the document. If not set, uses "en" for
       English as default.
    name: language
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> documents, String language)
  returns:
    description: |-
      A <xref uid="TextAnalyticsPagedFlux" data-throw-if-not-resolved="false">TextAnalyticsPagedFlux</xref> contains a list of
       <xref uid="AnalyzeSentimentResult" data-throw-if-not-resolved="false">analyzed text sentiment document result</xref>.
    type: <xref href="com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.AnalyzeSentimentResult?alt=com.azure.ai.textanalytics.models.AnalyzeSentimentResult&text=AnalyzeSentimentResult" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)
  fullName: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)
  name: analyzeSentimentBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)
  nameWithType: TextAnalyticsAsyncClient.analyzeSentimentBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)
  summary: "Returns a sentiment prediction, as well as confidence scores for each sentiment label (Positive, Negative, and\n Neutral) for the document and each sentence within it.\n\n <p>Analyze sentiment in a list of documents with provided language code and request options. Subscribes to the\n call asynchronously and prints out the sentiment details when a response is received.</p>\n\n <pre>\n List&lt;String&gt; documents = Arrays.asList&#40;\n     &quot;The hotel was dark and unclean.&quot;,\n     &quot;The restaurant had amazing gnocchi.&quot;\n &#41;;\n \n textAnalyticsAsyncClient.analyzeSentimentBatch&#40;documents, &quot;en&quot;, null&#41;.byPage&#40;&#41;.subscribe&#40;\n     response -&gt; &#123;\n         &#47;&#47; Batch statistics\n         TextDocumentBatchStatistics batchStatistics = response.getStatistics&#40;&#41;;\n         System.out.printf&#40;&quot;Batch statistics, transaction count: %s, valid document count: %s.%n&quot;,\n             batchStatistics.getTransactionCount&#40;&#41;, batchStatistics.getValidDocumentCount&#40;&#41;&#41;;\n \n         response.getElements&#40;&#41;.forEach&#40;analyzeSentimentResult -&gt; &#123;\n             System.out.printf&#40;&quot;Document ID: %s%n&quot;, analyzeSentimentResult.getId&#40;&#41;&#41;;\n             DocumentSentiment documentSentiment = analyzeSentimentResult.getDocumentSentiment&#40;&#41;;\n             System.out.printf&#40;&quot;Recognized document sentiment: %s.%n&quot;, documentSentiment.getSentiment&#40;&#41;&#41;;\n             documentSentiment.getSentences&#40;&#41;.forEach&#40;sentenceSentiment -&gt;\n                 System.out.printf&#40;&quot;Recognized sentence sentiment: %s, positive score: %.2f, &quot;\n                         + &quot;neutral score: %.2f, negative score: %.2f.%n&quot;,\n                     sentenceSentiment.getSentiment&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getPositive&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNeutral&#40;&#41;,\n                     sentenceSentiment.getConfidenceScores&#40;&#41;.getNegative&#40;&#41;&#41;&#41;;\n         &#125;&#41;;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      A list of documents to be analyzed.
       For text length limits, maximum batch size, and supported text encoding, see
       <a href="https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits">data limits</a>.
    name: documents
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The 2 letter ISO 639-1 representation of language for the document. If not set, uses "en" for
       English as default.
    name: language
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The <xref uid="TextAnalyticsRequestOptions" data-throw-if-not-resolved="false">options</xref> to configure the scoring model for documents
       and show statistics.
    name: options
    type: <xref href="com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions" data-throw-if-not-resolved="False" />
  syntax: public TextAnalyticsPagedFlux<AnalyzeSentimentResult> analyzeSentimentBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)
  returns:
    description: |-
      A <xref uid="TextAnalyticsPagedFlux" data-throw-if-not-resolved="false">TextAnalyticsPagedFlux</xref> contains a list of
       <xref uid="AnalyzeSentimentResult" data-throw-if-not-resolved="false">analyzed text sentiment document result</xref>.
    type: <xref href="com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.textanalytics.models.AnalyzeSentimentResult?alt=com.azure.ai.textanalytics.models.AnalyzeSentimentResult&text=AnalyzeSentimentResult" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.ai.textanalytics
artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
