### YamlMime:JavaMember
uid: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl*
fullName: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl
name: beginRecognizeReceiptsFromUrl
nameWithType: FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl
members:
- uid: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(java.lang.String)
  fullName: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(String receiptUrl)
  name: beginRecognizeReceiptsFromUrl(String receiptUrl)
  nameWithType: FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(String receiptUrl)
  summary: "Recognizes receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n model.\n <p>The service does not support cancellation of the long running operation and returns with an\n error message indicating absence of cancellation support.</p>\n See <a href=\"https://aka.ms/formrecognizer/receiptfields\">here</a> for fields found on a receipt.\n\n <p><strong>Code sample</strong></p>\n <pre>\n String receiptUrl = &quot;&#123;receiptUrl&#125;&quot;;\n &#47;&#47; if training polling operation completed, retrieve the final result.\n formRecognizerAsyncClient.beginRecognizeReceiptsFromUrl&#40;receiptUrl&#41;\n     &#47;&#47; if training polling operation completed, retrieve the final result.\n     .flatMap&#40;AsyncPollResponse::getFinalResult&#41;\n     .subscribe&#40;recognizedReceipts -&gt; &#123;\n         for &#40;int i = 0; i &lt; recognizedReceipts.size&#40;&#41;; i++&#41; &#123;\n             RecognizedForm recognizedForm = recognizedReceipts.get&#40;i&#41;;\n             Map&lt;String, FormField&gt; recognizedFields = recognizedForm.getFields&#40;&#41;;\n             System.out.printf&#40;&quot;----------- Recognized Receipt page %d -----------%n&quot;, i&#41;;\n             FormField merchantNameField = recognizedFields.get&#40;&quot;MerchantName&quot;&#41;;\n             if &#40;merchantNameField != null&#41; &#123;\n                 if &#40;FieldValueType.STRING == merchantNameField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     String merchantName = merchantNameField.getValue&#40;&#41;.asString&#40;&#41;;\n                     System.out.printf&#40;&quot;Merchant Name: %s, confidence: %.2f%n&quot;,\n                         merchantName, merchantNameField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField merchantPhoneNumberField = recognizedFields.get&#40;&quot;MerchantPhoneNumber&quot;&#41;;\n             if &#40;merchantPhoneNumberField != null&#41; &#123;\n                 if &#40;FieldValueType.PHONE_NUMBER == merchantPhoneNumberField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     String merchantAddress = merchantPhoneNumberField.getValue&#40;&#41;.asPhoneNumber&#40;&#41;;\n                     System.out.printf&#40;&quot;Merchant Phone number: %s, confidence: %.2f%n&quot;,\n                         merchantAddress, merchantPhoneNumberField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField transactionDateField = recognizedFields.get&#40;&quot;TransactionDate&quot;&#41;;\n             if &#40;transactionDateField != null&#41; &#123;\n                 if &#40;FieldValueType.DATE == transactionDateField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     LocalDate transactionDate = transactionDateField.getValue&#40;&#41;.asDate&#40;&#41;;\n                     System.out.printf&#40;&quot;Transaction Date: %s, confidence: %.2f%n&quot;,\n                         transactionDate, transactionDateField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField receiptItemsField = recognizedFields.get&#40;&quot;Items&quot;&#41;;\n             if &#40;receiptItemsField != null&#41; &#123;\n                 System.out.printf&#40;&quot;Receipt Items: %n&quot;&#41;;\n                 if &#40;FieldValueType.LIST == receiptItemsField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     List&lt;FormField&gt; receiptItems = receiptItemsField.getValue&#40;&#41;.asList&#40;&#41;;\n                     receiptItems.stream&#40;&#41;\n                         .filter&#40;receiptItem -&gt; FieldValueType.MAP == receiptItem.getValue&#40;&#41;.getValueType&#40;&#41;&#41;\n                         .map&#40;formField -&gt; formField.getValue&#40;&#41;.asMap&#40;&#41;&#41;\n                         .forEach&#40;formFieldMap -&gt; formFieldMap.forEach&#40;&#40;key, formField&#41; -&gt; &#123;\n                             if &#40;&quot;Quantity&quot;.equals&#40;key&#41;&#41; &#123;\n                                 if &#40;FieldValueType.FLOAT == formField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                                     Float quantity = formField.getValue&#40;&#41;.asFloat&#40;&#41;;\n                                     System.out.printf&#40;&quot;Quantity: %f, confidence: %.2f%n&quot;,\n                                         quantity, formField.getConfidence&#40;&#41;&#41;;\n                                 &#125;\n                             &#125;\n                         &#125;&#41;&#41;;\n                 &#125;\n             &#125;\n         &#125;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: The URL of the receipt to analyze.
    name: receiptUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public PollerFlux<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeReceiptsFromUrl(String receiptUrl)
  returns:
    description: |-
      A <xref uid="PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the recognize receipt operation until it has completed, has failed,
       or has been cancelled. The completed operation returns a List of <xref uid="RecognizedForm" data-throw-if-not-resolved="false">RecognizedForm</xref>.
    type: <xref href="com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(java.lang.String,com.azure.ai.formrecognizer.models.RecognizeReceiptsOptions)
  fullName: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(String receiptUrl, RecognizeReceiptsOptions recognizeReceiptsOptions)
  name: beginRecognizeReceiptsFromUrl(String receiptUrl, RecognizeReceiptsOptions recognizeReceiptsOptions)
  nameWithType: FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl(String receiptUrl, RecognizeReceiptsOptions recognizeReceiptsOptions)
  summary: "Recognizes receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n model.\n <p>The service does not support cancellation of the long running operation and returns with an\n error message indicating absence of cancellation support.</p>\n\n <p><strong>Code sample</strong></p>\n <pre>\n String receiptUrl = &quot;&#123;receiptUrl&#125;&quot;;\n boolean includeFieldElements = true;\n &#47;&#47; if training polling operation completed, retrieve the final result.\n formRecognizerAsyncClient.beginRecognizeReceiptsFromUrl&#40;receiptUrl,\n     new RecognizeReceiptsOptions&#40;&#41;\n         .setFieldElementsIncluded&#40;includeFieldElements&#41;\n         .setPollInterval&#40;Duration.ofSeconds&#40;5&#41;&#41;&#41;\n     .flatMap&#40;AsyncPollResponse::getFinalResult&#41;\n     .subscribe&#40;recognizedReceipts -&gt; &#123;\n         for &#40;int i = 0; i &lt; recognizedReceipts.size&#40;&#41;; i++&#41; &#123;\n             RecognizedForm recognizedReceipt = recognizedReceipts.get&#40;i&#41;;\n             Map&lt;String, FormField&gt; recognizedFields = recognizedReceipt.getFields&#40;&#41;;\n             System.out.printf&#40;&quot;----------- Recognized Receipt page %d -----------%n&quot;, i&#41;;\n             FormField merchantNameField = recognizedFields.get&#40;&quot;MerchantName&quot;&#41;;\n             if &#40;merchantNameField != null&#41; &#123;\n                 if &#40;FieldValueType.STRING == merchantNameField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     String merchantName = merchantNameField.getValue&#40;&#41;.asString&#40;&#41;;\n                     System.out.printf&#40;&quot;Merchant Name: %s, confidence: %.2f%n&quot;,\n                         merchantName, merchantNameField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField merchantPhoneNumberField = recognizedFields.get&#40;&quot;MerchantPhoneNumber&quot;&#41;;\n             if &#40;merchantPhoneNumberField != null&#41; &#123;\n                 if &#40;FieldValueType.PHONE_NUMBER == merchantPhoneNumberField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     String merchantAddress = merchantPhoneNumberField.getValue&#40;&#41;.asPhoneNumber&#40;&#41;;\n                     System.out.printf&#40;&quot;Merchant Phone number: %s, confidence: %.2f%n&quot;,\n                         merchantAddress, merchantPhoneNumberField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField transactionDateField = recognizedFields.get&#40;&quot;TransactionDate&quot;&#41;;\n             if &#40;transactionDateField != null&#41; &#123;\n                 if &#40;FieldValueType.DATE == transactionDateField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     LocalDate transactionDate = transactionDateField.getValue&#40;&#41;.asDate&#40;&#41;;\n                     System.out.printf&#40;&quot;Transaction Date: %s, confidence: %.2f%n&quot;,\n                         transactionDate, transactionDateField.getConfidence&#40;&#41;&#41;;\n                 &#125;\n             &#125;\n \n             FormField receiptItemsField = recognizedFields.get&#40;&quot;Items&quot;&#41;;\n             if &#40;receiptItemsField != null&#41; &#123;\n                 System.out.printf&#40;&quot;Receipt Items: %n&quot;&#41;;\n                 if &#40;FieldValueType.LIST == receiptItemsField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                     List&lt;FormField&gt; receiptItems = receiptItemsField.getValue&#40;&#41;.asList&#40;&#41;;\n                     receiptItems.stream&#40;&#41;\n                         .filter&#40;receiptItem -&gt; FieldValueType.MAP == receiptItem.getValue&#40;&#41;.getValueType&#40;&#41;&#41;\n                         .map&#40;formField -&gt; formField.getValue&#40;&#41;.asMap&#40;&#41;&#41;\n                         .forEach&#40;formFieldMap -&gt; formFieldMap.forEach&#40;&#40;key, formField&#41; -&gt; &#123;\n                             if &#40;&quot;Quantity&quot;.equals&#40;key&#41;&#41; &#123;\n                                 if &#40;FieldValueType.FLOAT == formField.getValue&#40;&#41;.getValueType&#40;&#41;&#41; &#123;\n                                     Float quantity = formField.getValue&#40;&#41;.asFloat&#40;&#41;;\n                                     System.out.printf&#40;&quot;Quantity: %f, confidence: %.2f%n&quot;,\n                                         quantity, formField.getConfidence&#40;&#41;&#41;;\n                                 &#125;\n                             &#125;\n                         &#125;&#41;&#41;;\n                 &#125;\n             &#125;\n         &#125;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: The source URL to the input receipt.
    name: receiptUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The additional configurable <xref uid="RecognizeReceiptsOptions" data-throw-if-not-resolved="false">options</xref>
       that may be passed when analyzing a receipt.
    name: recognizeReceiptsOptions
    type: <xref href="com.azure.ai.formrecognizer.models.RecognizeReceiptsOptions?alt=com.azure.ai.formrecognizer.models.RecognizeReceiptsOptions&text=RecognizeReceiptsOptions" data-throw-if-not-resolved="False" />
  syntax: public PollerFlux<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeReceiptsFromUrl(String receiptUrl, RecognizeReceiptsOptions recognizeReceiptsOptions)
  returns:
    description: |-
      A <xref uid="PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the recognize receipt operation until it has completed, has failed,
       or has been cancelled. The completed operation returns a List of <xref uid="RecognizedForm" data-throw-if-not-resolved="false">RecognizedForm</xref>.
    type: <xref href="com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.ai.formrecognizer
artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
