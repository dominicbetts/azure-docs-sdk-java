### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed*
fullName: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed
name: elapsed
nameWithType: Stopwatch.elapsed
members:
- uid: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed()
  fullName: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed()
  name: elapsed()
  nameWithType: Stopwatch.elapsed()
  summary: Returns the current elapsed time shown on this stopwatch as a <xref uid="Duration" data-throw-if-not-resolved="false">Duration</xref>. Unlike <xref uid="#elapsed(TimeUnit)" data-throw-if-not-resolved="false">#elapsed(TimeUnit)</xref>, this method does not lose any precision due to rounding.
  syntax: public Duration elapsed()
  returns:
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
- uid: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed(java.util.concurrent.TimeUnit)
  fullName: com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed(TimeUnit desiredUnit)
  name: elapsed(TimeUnit desiredUnit)
  nameWithType: Stopwatch.elapsed(TimeUnit desiredUnit)
  summary: |-
    Returns the current elapsed time shown on this stopwatch, expressed in the desired time unit,
     with any fraction rounded down.

     <p><b>Note:</b> the overhead of measurement can be more than a microsecond, so it is generally
     not useful to specify <xref uid="TimeUnit#NANOSECONDS" data-throw-if-not-resolved="false">TimeUnit#NANOSECONDS</xref> precision here.

     <p>It is generally not a good idea to use an ambiguous, unitless <code>long</code> to represent
     elapsed time. Therefore, we recommend using <xref uid="#elapsed()" data-throw-if-not-resolved="false">#elapsed()</xref> instead, which returns a
     strongly-typed <xref uid="Duration" data-throw-if-not-resolved="false">Duration</xref> instance.
  parameters:
  - name: desiredUnit
    type: <xref href="java.util.concurrent.TimeUnit?alt=java.util.concurrent.TimeUnit&text=TimeUnit" data-throw-if-not-resolved="False" />
  syntax: public long elapsed(TimeUnit desiredUnit)
  returns:
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.base
artifact: com.azure:azure-cosmos:4.3.2-beta.2
