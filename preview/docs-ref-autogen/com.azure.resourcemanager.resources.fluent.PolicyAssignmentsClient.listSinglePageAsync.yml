### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync*
fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync
name: listSinglePageAsync
nameWithType: PolicyAssignmentsClient.listSinglePageAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync(java.lang.String)
  fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync(String filter)
  name: listSinglePageAsync(String filter)
  nameWithType: PolicyAssignmentsClient.listSinglePageAsync(String filter)
  summary: |-
    This operation retrieves the list of all policy assignments associated with the given subscription that match the
     optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
     $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription,
     including those that apply directly or from management groups that contain the given subscription, as well as any
     applied to objects contained within the subscription. If $filter=atScope() is provided, the returned list
     includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except
     those applied to objects contained within the subscription. If $filter=policyDefinitionId eq '{value}' is
     provided, the returned list includes all policy assignments of the policy definition whose id is {value}.
  parameters:
  - description: |-
      The filter to apply on the operation. Valid values for $filter are: 'atScope()' or
           'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<PolicyAssignmentInner>> listSinglePageAsync(String filter)
  returns:
    description: list of policy assignments.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner&text=PolicyAssignmentInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.PolicyAssignmentsClient.listSinglePageAsync(String filter, Context context)
  name: listSinglePageAsync(String filter, Context context)
  nameWithType: PolicyAssignmentsClient.listSinglePageAsync(String filter, Context context)
  summary: |-
    This operation retrieves the list of all policy assignments associated with the given subscription that match the
     optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If
     $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription,
     including those that apply directly or from management groups that contain the given subscription, as well as any
     applied to objects contained within the subscription. If $filter=atScope() is provided, the returned list
     includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except
     those applied to objects contained within the subscription. If $filter=policyDefinitionId eq '{value}' is
     provided, the returned list includes all policy assignments of the policy definition whose id is {value}.
  parameters:
  - description: |-
      The filter to apply on the operation. Valid values for $filter are: 'atScope()' or
           'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<PolicyAssignmentInner>> listSinglePageAsync(String filter, Context context)
  returns:
    description: list of policy assignments.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner?alt=com.azure.resourcemanager.resources.fluent.inner.PolicyAssignmentInner&text=PolicyAssignmentInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
