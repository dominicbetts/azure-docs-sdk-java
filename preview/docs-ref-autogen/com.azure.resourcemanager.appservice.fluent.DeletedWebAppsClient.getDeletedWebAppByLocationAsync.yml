### YamlMime:JavaMember
uid: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync*
fullName: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync
name: getDeletedWebAppByLocationAsync
nameWithType: DeletedWebAppsClient.getDeletedWebAppByLocationAsync
members:
- uid: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync(java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync(String location, String deletedSiteId)
  name: getDeletedWebAppByLocationAsync(String location, String deletedSiteId)
  nameWithType: DeletedWebAppsClient.getDeletedWebAppByLocationAsync(String location, String deletedSiteId)
  summary: Description for Get deleted app for a subscription at location.
  parameters:
  - description: The location parameter.
    name: location
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The numeric ID of the deleted app, e.g. 12345.
    name: deletedSiteId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<DeletedSiteInner> getDeletedWebAppByLocationAsync(String location, String deletedSiteId)
  returns:
    description: a deleted app.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.DeletedSiteInner?alt=com.azure.resourcemanager.appservice.fluent.inner.DeletedSiteInner&text=DeletedSiteInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.appservice.fluent.DeletedWebAppsClient.getDeletedWebAppByLocationAsync(String location, String deletedSiteId, Context context)
  name: getDeletedWebAppByLocationAsync(String location, String deletedSiteId, Context context)
  nameWithType: DeletedWebAppsClient.getDeletedWebAppByLocationAsync(String location, String deletedSiteId, Context context)
  summary: Description for Get deleted app for a subscription at location.
  parameters:
  - description: The location parameter.
    name: location
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The numeric ID of the deleted app, e.g. 12345.
    name: deletedSiteId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<DeletedSiteInner> getDeletedWebAppByLocationAsync(String location, String deletedSiteId, Context context)
  returns:
    description: a deleted app.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.DeletedSiteInner?alt=com.azure.resourcemanager.appservice.fluent.inner.DeletedSiteInner&text=DeletedSiteInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.appservice.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.0.0-beta.2
