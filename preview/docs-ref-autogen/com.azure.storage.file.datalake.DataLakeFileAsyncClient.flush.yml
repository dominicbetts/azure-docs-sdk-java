### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush*
fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush
name: flush
nameWithType: DataLakeFileAsyncClient.flush
members:
- uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush(long)
  fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush(long position)
  name: flush(long position)
  nameWithType: DataLakeFileAsyncClient.flush(long position)
  summary: |-
    Flushes (writes) data previously appended to the file through a call to append.
     The previously uploaded data must be contiguous.
     <p>By default this method will not overwrite existing data.</p>

     <p><strong>Code Samples</strong></p>

     <pre>
     client.flush&#40;position&#41;.subscribe&#40;response -&gt;
         System.out.println&#40;&quot;Flush data completed&quot;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">Azure
     Docs</a></p>
  parameters:
  - description: The length of the file after all data has been written.
    name: position
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  syntax: public Mono<PathInfo> flush(long position)
  returns:
    description: A reactive response containing the information of the created resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathInfo?alt=com.azure.storage.file.datalake.models.PathInfo&text=PathInfo" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush(long,boolean)
  fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient.flush(long position, boolean overwrite)
  name: flush(long position, boolean overwrite)
  nameWithType: DataLakeFileAsyncClient.flush(long position, boolean overwrite)
  summary: |-
    Flushes (writes) data previously appended to the file through a call to append.
     The previously uploaded data must be contiguous.

     <p><strong>Code Samples</strong></p>

     <pre>
     boolean overwrite = true;
     client.flush&#40;position, overwrite&#41;.subscribe&#40;response -&gt;
         System.out.println&#40;&quot;Flush data completed&quot;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">Azure
     Docs</a></p>
  parameters:
  - description: The length of the file after all data has been written.
    name: position
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: Whether or not to overwrite, should data exist on the file.
    name: overwrite
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<PathInfo> flush(long position, boolean overwrite)
  returns:
    description: A reactive response containing the information of the created resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathInfo?alt=com.azure.storage.file.datalake.models.PathInfo&text=PathInfo" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
