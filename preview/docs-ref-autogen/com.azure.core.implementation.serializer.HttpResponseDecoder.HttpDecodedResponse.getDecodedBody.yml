### YamlMime:JavaMember
uid: com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody*
fullName: com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody
name: getDecodedBody
nameWithType: HttpResponseDecoder.HttpDecodedResponse.getDecodedBody
members:
- uid: com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody(java.lang.String)
  fullName: com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse.getDecodedBody(String body)
  name: getDecodedBody(String body)
  nameWithType: HttpResponseDecoder.HttpDecodedResponse.getDecodedBody(String body)
  summary: |-
    Gets the publisher when subscribed the http content gets read, decoded
     and emitted. <code>Mono.empty()</code> gets emitted if the content is not
     decodable.
  parameters:
  - description: |-
      the response body to decode, null for this parameter
                   indicate read body from source response and decode it.
    name: body
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Object> getDecodedBody(String body)
  returns:
    description: publisher that emits decoded http content
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.core.implementation.serializer
artifact: com.azure:azure-core:1.3.0-beta.1
