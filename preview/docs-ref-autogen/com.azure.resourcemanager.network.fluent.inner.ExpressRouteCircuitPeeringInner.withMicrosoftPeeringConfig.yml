### YamlMime:JavaMember
uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig*
fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig
name: withMicrosoftPeeringConfig
nameWithType: ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig
members:
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig(com.azure.resourcemanager.network.models.ExpressRouteCircuitPeeringConfig)
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  name: withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  nameWithType: ExpressRouteCircuitPeeringInner.withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  summary: 'Set the microsoftPeeringConfig property: The Microsoft peering configuration.'
  parameters:
  - description: the microsoftPeeringConfig value to set.
    name: microsoftPeeringConfig
    type: <xref href="com.azure.resourcemanager.network.models.ExpressRouteCircuitPeeringConfig?alt=com.azure.resourcemanager.network.models.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False" />
  syntax: public ExpressRouteCircuitPeeringInner withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  returns:
    description: the ExpressRouteCircuitPeeringInner object itself.
    type: <xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.network.fluent.inner
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
