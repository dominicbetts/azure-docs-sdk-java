### YamlMime:JavaMember
uid: com.azure.storage.file.share.ShareFileClient.listRanges*
fullName: com.azure.storage.file.share.ShareFileClient.listRanges
name: listRanges
nameWithType: ShareFileClient.listRanges
members:
- uid: com.azure.storage.file.share.ShareFileClient.listRanges()
  fullName: com.azure.storage.file.share.ShareFileClient.listRanges()
  name: listRanges()
  nameWithType: ShareFileClient.listRanges()
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges for the file client.</p>

     <pre>
     Iterable&lt;ShareFileRange&gt; ranges = fileClient.listRanges&#40;&#41;;
     ranges.forEach&#40;range -&gt;
         System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;, range.getStart&#40;&#41;, range.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  syntax: public PagedIterable<ShareFileRange> listRanges()
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)
  name: listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)
  nameWithType: ShareFileClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges within the file range from 1KB to 2KB.</p>

     <pre>
     ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;
     Iterable&lt;ShareFileRange&gt; ranges = fileClient.listRanges&#40;new ShareFileRange&#40;1024, 2048L&#41;, requestConditions,
         Duration.ofSeconds&#40;1&#41;, new Context&#40;key1, value1&#41;&#41;;
     ranges.forEach&#40;range -&gt;
         System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;, range.getStart&#40;&#41;, range.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  parameters:
  - description: Optional byte range which returns file data only from the specified range.
    name: range
    type: <xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />
  - description: <xref uid="ShareRequestConditions" data-throw-if-not-resolved="false">ShareRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<ShareFileRange> listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files that satisfy the requirements
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)
  fullName: com.azure.storage.file.share.ShareFileClient.listRanges(ShareFileRange range, Duration timeout, Context context)
  name: listRanges(ShareFileRange range, Duration timeout, Context context)
  nameWithType: ShareFileClient.listRanges(ShareFileRange range, Duration timeout, Context context)
  summary: |-
    List of valid ranges for a file.

     <p><strong>Code Samples</strong></p>

     <p>List all ranges within the file range from 1KB to 2KB.</p>

     <pre>
     Iterable&lt;ShareFileRange&gt; ranges = fileClient.listRanges&#40;new ShareFileRange&#40;1024, 2048L&#41;, Duration.ofSeconds&#40;1&#41;,
         new Context&#40;key1, value1&#41;&#41;;
     ranges.forEach&#40;range -&gt;
         System.out.printf&#40;&quot;List ranges completed with start: %d, end: %d&quot;, range.getStart&#40;&#41;, range.getEnd&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges">Azure Docs</a>.</p>
  parameters:
  - description: Optional byte range which returns file data only from the specified range.
    name: range
    type: <xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />
  - description: |-
      An optional timeout applied to the operation. If a response is not returned before the timeout
       concludes a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be thrown.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  - description: Additional context that is passed through the Http pipeline during the service call.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<ShareFileRange> listRanges(ShareFileRange range, Duration timeout, Context context)
  returns:
    description: <xref uid="ShareFileRange" data-throw-if-not-resolved="false">ranges</xref> in the files that satisfy the requirements
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.models.ShareFileRange?alt=com.azure.storage.file.share.models.ShareFileRange&text=ShareFileRange" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.share
artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
