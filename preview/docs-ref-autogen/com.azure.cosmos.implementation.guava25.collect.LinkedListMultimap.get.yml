### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.get*
fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.get
name: get
nameWithType: LinkedListMultimap<K,V>.get
members:
- uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.get(K)
  fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.get(K key)
  name: get(K key)
  nameWithType: LinkedListMultimap<K,V>.get(K key)
  summary: |-
    Returns a view collection of the values associated with <code>key</code> in this multimap, if any.
     Note that when <code>containsKey(key)</code> is false, this returns an empty collection, not <code>
     null</code>.

     <p>Changes to the returned collection will update the underlying multimap, and vice versa.

     <p>Because the values for a given key may have duplicates and follow the insertion ordering,
     this method returns a <xref uid="List" data-throw-if-not-resolved="false">List</xref>, instead of the <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> specified in
     the <xref uid="Multimap" data-throw-if-not-resolved="false">Multimap</xref> interface.

     <p>If the multimap is modified while an iteration over the list is in progress (except through
     the iterator's own <code>add</code>, <code>set</code> or <code>remove</code> operations) the results of the
     iteration are undefined.

     <p>The returned list is not serializable and does not have random access.
  parameters:
  - name: key
    type: <xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />
  syntax: public List<V> get(K key)
  returns:
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
