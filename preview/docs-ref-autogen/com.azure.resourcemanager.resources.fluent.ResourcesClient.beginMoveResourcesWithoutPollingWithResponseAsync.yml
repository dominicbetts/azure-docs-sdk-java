### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync*
fullName: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync
name: beginMoveResourcesWithoutPollingWithResponseAsync
nameWithType: ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo)
  fullName: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  name: beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  nameWithType: ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  summary: |-
    The resources to move must be in the same source resource group. The target resource group may be in a different
     subscription. When moving resources, both the source group and the target group are locked for the duration of
     the operation. Write and delete operations are blocked on the groups until the move completes.
  parameters:
  - description: The name of the resource group containing the resources to move.
    name: sourceResourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Parameters of move resources.
    name: parameters
    type: <xref href="com.azure.resourcemanager.resources.models.ResourcesMoveInfo?alt=com.azure.resourcemanager.resources.models.ResourcesMoveInfo&text=ResourcesMoveInfo" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ResourcesMoveInfo,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  name: beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  nameWithType: ResourcesClient.beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  summary: |-
    The resources to move must be in the same source resource group. The target resource group may be in a different
     subscription. When moving resources, both the source group and the target group are locked for the duration of
     the operation. Write and delete operations are blocked on the groups until the move completes.
  parameters:
  - description: The name of the resource group containing the resources to move.
    name: sourceResourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Parameters of move resources.
    name: parameters
    type: <xref href="com.azure.resourcemanager.resources.models.ResourcesMoveInfo?alt=com.azure.resourcemanager.resources.models.ResourcesMoveInfo&text=ResourcesMoveInfo" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginMoveResourcesWithoutPollingWithResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, Context context)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
