### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems*
fullName: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems
name: listFileSystems
nameWithType: DataLakeServiceClient.listFileSystems
members:
- uid: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems()
  fullName: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems()
  name: listFileSystems()
  nameWithType: DataLakeServiceClient.listFileSystems()
  summary: |-
    Returns a lazy loaded list of file systems in this account. The returned <xref uid="PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> can be consumed
     while new items are automatically retrieved as needed. For more information, see the <a href="https://docs.microsoft.com/rest/api/storageservices/list-containers2">Azure Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     client.listFileSystems&#40;&#41;.forEach&#40;fileSystem -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;, fileSystem.getName&#40;&#41;&#41;&#41;;
     </pre>
  syntax: public PagedIterable<FileSystemItem> listFileSystems()
  returns:
    description: The list of file systems.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.FileSystemItem?alt=com.azure.storage.file.datalake.models.FileSystemItem&text=FileSystemItem" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems(com.azure.storage.file.datalake.models.ListFileSystemsOptions,java.time.Duration)
  fullName: com.azure.storage.file.datalake.DataLakeServiceClient.listFileSystems(ListFileSystemsOptions options, Duration timeout)
  name: listFileSystems(ListFileSystemsOptions options, Duration timeout)
  nameWithType: DataLakeServiceClient.listFileSystems(ListFileSystemsOptions options, Duration timeout)
  summary: "Returns a lazy loaded list of file systems in this account. The returned <xref uid=\"PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> can be consumed\n while new items are automatically retrieved as needed. For more information, see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/list-containers2\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n ListFileSystemsOptions options = new ListFileSystemsOptions&#40;&#41;\n     .setPrefix&#40;&quot;filSystemNamePrefixToMatch&quot;&#41;\n     .setDetails&#40;new FileSystemListDetails&#40;&#41;.setRetrieveMetadata&#40;true&#41;&#41;;\n \n client.listFileSystems&#40;options, timeout&#41;.forEach&#40;fileSystem -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;,\n     fileSystem.getName&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: A <xref uid="ListFileSystemsOptions" data-throw-if-not-resolved="false">ListFileSystemsOptions</xref> which specifies what data should be returned by the service.
    name: options
    type: <xref href="com.azure.storage.file.datalake.models.ListFileSystemsOptions?alt=com.azure.storage.file.datalake.models.ListFileSystemsOptions&text=ListFileSystemsOptions" data-throw-if-not-resolved="False" />
  - description: An optional timeout value beyond which a <xref uid="RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    name: timeout
    type: <xref href="java.time.Duration?alt=java.time.Duration&text=Duration" data-throw-if-not-resolved="False" />
  syntax: public PagedIterable<FileSystemItem> listFileSystems(ListFileSystemsOptions options, Duration timeout)
  returns:
    description: The list of file systems.
    type: <xref href="com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.FileSystemItem?alt=com.azure.storage.file.datalake.models.FileSystemItem&text=FileSystemItem" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
