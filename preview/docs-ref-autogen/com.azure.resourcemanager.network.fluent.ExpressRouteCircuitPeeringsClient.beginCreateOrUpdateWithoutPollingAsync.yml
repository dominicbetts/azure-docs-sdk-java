### YamlMime:JavaMember
uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync*
fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync
name: beginCreateOrUpdateWithoutPollingAsync
nameWithType: ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync
members:
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)
  nameWithType: ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)
  summary: Creates or updates a peering in the specified express route circuits.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the express route circuit.
    name: circuitName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the peering.
    name: peeringName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Peering in an ExpressRouteCircuit resource.
    name: peeringParameters
    type: <xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />
  syntax: public Mono<ExpressRouteCircuitPeeringInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters)
  returns:
    description: peering in an ExpressRouteCircuit resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)
  nameWithType: ExpressRouteCircuitPeeringsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)
  summary: Creates or updates a peering in the specified express route circuits.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the express route circuit.
    name: circuitName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the peering.
    name: peeringName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Peering in an ExpressRouteCircuit resource.
    name: peeringParameters
    type: <xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<ExpressRouteCircuitPeeringInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, ExpressRouteCircuitPeeringInner peeringParameters, Context context)
  returns:
    description: peering in an ExpressRouteCircuit resource.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.network.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
