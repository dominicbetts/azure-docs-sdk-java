### YamlMime:JavaMember
uid: com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner.withPermissions*
fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner.withPermissions
name: withPermissions
nameWithType: RoleDefinitionInner.withPermissions
members:
- uid: com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner.withPermissions(java.util.List<com.azure.resourcemanager.authorization.fluent.inner.PermissionInner>)
  fullName: com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner.withPermissions(List<PermissionInner> permissions)
  name: withPermissions(List<PermissionInner> permissions)
  nameWithType: RoleDefinitionInner.withPermissions(List<PermissionInner> permissions)
  summary: 'Set the permissions property: Role definition permissions.'
  parameters:
  - description: the permissions value to set.
    name: permissions
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.authorization.fluent.inner.PermissionInner?alt=com.azure.resourcemanager.authorization.fluent.inner.PermissionInner&text=PermissionInner" data-throw-if-not-resolved="False" />&gt;
  syntax: public RoleDefinitionInner withPermissions(List<PermissionInner> permissions)
  returns:
    description: the RoleDefinitionInner object itself.
    type: <xref href="com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner?alt=com.azure.resourcemanager.authorization.fluent.inner.RoleDefinitionInner&text=RoleDefinitionInner" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.authorization.fluent.inner
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
