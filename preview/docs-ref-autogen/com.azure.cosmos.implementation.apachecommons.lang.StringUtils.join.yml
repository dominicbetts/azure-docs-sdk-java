### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join*
fullName: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join
name: join
nameWithType: StringUtils.join
members:
- uid: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(java.lang.Iterable<?>,java.lang.String)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(Iterable<?> iterable, String separator)
  name: join(Iterable<?> iterable, String separator)
  nameWithType: StringUtils.join(Iterable<?> iterable, String separator)
  summary: |-
    <p>Joins the elements of the provided <code>Iterable</code> into
     a single String containing the provided elements.</p>

     <p>No delimiter is added before or after the list.
     A <code>null</code> separator is the same as an empty String ("").</p>

     <p>See the examples here: <xref uid="#join(Object[],String)" data-throw-if-not-resolved="false">#join(Object[],String)</xref>. </p>
  parameters:
  - description: the <code>Iterable</code> providing the values to join together, may be null
    name: iterable
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;?&gt;
  - description: the separator character to use, null treated as ""
    name: separator
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public static String join(Iterable<?> iterable, String separator)
  returns:
    description: the joined String, <code>null</code> if null iterator input
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
- uid: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(java.lang.Object[],java.lang.String)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(Object[] array, String separator)
  name: join(Object[] array, String separator)
  nameWithType: StringUtils.join(Object[] array, String separator)
  summary: |-
    <p>Joins the elements of the provided array into a single String
     containing the provided list of elements.</p>

     <p>No delimiter is added before or after the list.
     A <code>null</code> separator is the same as an empty String ("").
     Null objects or empty strings within the array are represented by
     empty strings.</p>

     <pre>
     StringUtils.join(null, *)                = null
     StringUtils.join([], *)                  = ""
     StringUtils.join([null], *)              = ""
     StringUtils.join(["a", "b", "c"], "--")  = "a--b--c"
     StringUtils.join(["a", "b", "c"], null)  = "abc"
     StringUtils.join(["a", "b", "c"], "")    = "abc"
     StringUtils.join([null, "", "a"], ',')   = ",,a"
     </pre>
  parameters:
  - description: the array of values to join together, may be null
    name: array
    type: <xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />[]
  - description: the separator character to use, null treated as ""
    name: separator
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public static String join(Object[] array, String separator)
  returns:
    description: the joined String, <code>null</code> if null array input
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
- uid: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(java.lang.Object[],java.lang.String,int,int)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(Object[] array, String separator, int startIndex, int endIndex)
  name: join(Object[] array, String separator, int startIndex, int endIndex)
  nameWithType: StringUtils.join(Object[] array, String separator, int startIndex, int endIndex)
  summary: |-
    <p>Joins the elements of the provided array into a single String
     containing the provided list of elements.</p>

     <p>No delimiter is added before or after the list.
     A <code>null</code> separator is the same as an empty String ("").
     Null objects or empty strings within the array are represented by
     empty strings.</p>

     <pre>
     StringUtils.join(null, *, *, *)                = null
     StringUtils.join([], *, *, *)                  = ""
     StringUtils.join([null], *, *, *)              = ""
     StringUtils.join(["a", "b", "c"], "--", 0, 3)  = "a--b--c"
     StringUtils.join(["a", "b", "c"], "--", 1, 3)  = "b--c"
     StringUtils.join(["a", "b", "c"], "--", 2, 3)  = "c"
     StringUtils.join(["a", "b", "c"], "--", 2, 2)  = ""
     StringUtils.join(["a", "b", "c"], null, 0, 3)  = "abc"
     StringUtils.join(["a", "b", "c"], "", 0, 3)    = "abc"
     StringUtils.join([null, "", "a"], ',', 0, 3)   = ",,a"
     </pre>
  parameters:
  - description: the array of values to join together, may be null
    name: array
    type: <xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />[]
  - description: the separator character to use, null treated as ""
    name: separator
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: the first index to start joining from.
    name: startIndex
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  - description: the index to stop joining from (exclusive).
    name: endIndex
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public static String join(Object[] array, String separator, int startIndex, int endIndex)
  returns:
    description: |-
      the joined String, <code>null</code> if null array input; or the empty string
       if <code>endIndex - startIndex <= 0</code>. The number of joined entries is given by
       <code>endIndex - startIndex</code>
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
- uid: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(java.util.Iterator<?>,java.lang.String)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.StringUtils.join(Iterator<?> iterator, String separator)
  name: join(Iterator<?> iterator, String separator)
  nameWithType: StringUtils.join(Iterator<?> iterator, String separator)
  summary: |-
    <p>Joins the elements of the provided <code>Iterator</code> into
     a single String containing the provided elements.</p>

     <p>No delimiter is added before or after the list.
     A <code>null</code> separator is the same as an empty String ("").</p>

     <p>See the examples here: <xref uid="#join(Object[],String)" data-throw-if-not-resolved="false">#join(Object[],String)</xref>. </p>
  parameters:
  - description: the <code>Iterator</code> of values to join together, may be null
    name: iterator
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;?&gt;
  - description: the separator character to use, null treated as ""
    name: separator
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public static String join(Iterator<?> iterator, String separator)
  returns:
    description: the joined String, <code>null</code> if null iterator input
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.apachecommons.lang
artifact: com.azure:azure-cosmos:4.3.2-beta.2
