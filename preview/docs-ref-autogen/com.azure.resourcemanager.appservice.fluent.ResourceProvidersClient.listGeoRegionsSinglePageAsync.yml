### YamlMime:JavaMember
uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync*
fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync
name: listGeoRegionsSinglePageAsync
nameWithType: ResourceProvidersClient.listGeoRegionsSinglePageAsync
members:
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync(com.azure.resourcemanager.appservice.models.SkuName,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)
  name: listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)
  nameWithType: ResourceProvidersClient.listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)
  summary: Description for Get a list of available geographical regions.
  parameters:
  - description: Name of SKU used to filter the regions.
    name: sku
    type: <xref href="com.azure.resourcemanager.appservice.models.SkuName?alt=com.azure.resourcemanager.appservice.models.SkuName&text=SkuName" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that
           support Linux workers.
    name: linuxWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that
           support Xenon workers.
    name: xenonWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions
           that support Linux Consumption Workers.
    name: linuxDynamicWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<GeoRegionInner>> listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled)
  returns:
    description: collection of geographical regions.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.inner.GeoRegionInner&text=GeoRegionInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync(com.azure.resourcemanager.appservice.models.SkuName,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)
  name: listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)
  nameWithType: ResourceProvidersClient.listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)
  summary: Description for Get a list of available geographical regions.
  parameters:
  - description: Name of SKU used to filter the regions.
    name: sku
    type: <xref href="com.azure.resourcemanager.appservice.models.SkuName?alt=com.azure.resourcemanager.appservice.models.SkuName&text=SkuName" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that
           support Linux workers.
    name: linuxWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions that
           support Xenon workers.
    name: xenonWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: |-
      Specify &lt;code&gt;true&lt;/code&gt; if you want to filter to only regions
           that support Linux Consumption Workers.
    name: linuxDynamicWorkersEnabled
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<GeoRegionInner>> listGeoRegionsSinglePageAsync(SkuName sku, Boolean linuxWorkersEnabled, Boolean xenonWorkersEnabled, Boolean linuxDynamicWorkersEnabled, Context context)
  returns:
    description: collection of geographical regions.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.GeoRegionInner?alt=com.azure.resourcemanager.appservice.fluent.inner.GeoRegionInner&text=GeoRegionInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.appservice.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.0.0-beta.2
