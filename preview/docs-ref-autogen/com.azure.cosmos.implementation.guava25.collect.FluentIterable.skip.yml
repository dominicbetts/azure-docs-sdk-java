### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.skip*
fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.skip
name: skip
nameWithType: FluentIterable<E>.skip
members:
- uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.skip(int)
  fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.skip(int numberToSkip)
  name: skip(int numberToSkip)
  nameWithType: FluentIterable<E>.skip(int numberToSkip)
  summary: |-
    Returns a view of this fluent iterable that skips its first <code>numberToSkip</code> elements. If
     this fluent iterable contains fewer than <code>numberToSkip</code> elements, the returned fluent
     iterable skips all of its elements.

     <p>Modifications to this fluent iterable before a call to <code>iterator()</code> are reflected in
     the returned fluent iterable. That is, the its iterator skips the first <code>numberToSkip</code>
     elements that exist when the iterator is created, not when <code>skip()</code> is called.

     <p>The returned fluent iterable's iterator supports <code>remove()</code> if the <code>Iterator</code> of
     this fluent iterable supports it. Note that it is <i>not</i> possible to delete the last
     skipped element by immediately calling <code>remove()</code> on the returned fluent iterable's
     iterator, as the <code>Iterator</code> contract states that a call to <code>* remove()</code> before a
     call to <code>next()</code> will throw an <xref uid="IllegalStateException" data-throw-if-not-resolved="false">IllegalStateException</xref>.

     <p><b><code>Stream</code> equivalent:</b> <xref uid="Stream#skip" data-throw-if-not-resolved="false">Stream#skip</xref> (same).
  parameters:
  - name: numberToSkip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public final FluentIterable<E> skip(int numberToSkip)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
