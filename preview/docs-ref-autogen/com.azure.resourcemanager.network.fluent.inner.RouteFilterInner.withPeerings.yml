### YamlMime:JavaMember
uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner.withPeerings*
fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner.withPeerings
name: withPeerings
nameWithType: RouteFilterInner.withPeerings
members:
- uid: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner.withPeerings(java.util.List<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner>)
  fullName: com.azure.resourcemanager.network.fluent.inner.RouteFilterInner.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)
  name: withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)
  nameWithType: RouteFilterInner.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)
  summary: 'Set the peerings property: A collection of references to express route circuit peerings.'
  parameters:
  - description: the peerings value to set.
    name: peerings
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner" data-throw-if-not-resolved="False" />&gt;
  syntax: public RouteFilterInner withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)
  returns:
    description: the RouteFilterInner object itself.
    type: <xref href="com.azure.resourcemanager.network.fluent.inner.RouteFilterInner?alt=com.azure.resourcemanager.network.fluent.inner.RouteFilterInner&text=RouteFilterInner" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.network.fluent.inner
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
