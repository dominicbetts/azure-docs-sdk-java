### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.toArray*
fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.toArray
name: toArray
nameWithType: FluentIterable<E>.toArray
members:
- uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.toArray(java.lang.Class<E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.toArray(Class<E> type)
  name: toArray(Class<E> type)
  nameWithType: FluentIterable<E>.toArray(Class<E> type)
  summary: |-
    Returns an array containing all of the elements from this fluent iterable in iteration order.

     <p><b><code>Stream</code> equivalent:</b> if an object array is acceptable, use <code>
     stream.toArray()</code>; if <code>type</code> is a class literal such as <code>MyType.class</code>, use <code>
     stream.toArray(MyType[]::new)</code>. Otherwise use <code>stream.toArray( len -> (E[])
     Array.newInstance(type, len))</code>.
  parameters:
  - description: the type of the elements
    name: type
    type: <xref href="java.lang.Class?alt=java.lang.Class&text=Class" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
  syntax: public final E[] toArray(Class<E> type)
  returns:
    description: |-
      a newly-allocated array into which all the elements of this fluent iterable have been
           copied
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />[]
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
