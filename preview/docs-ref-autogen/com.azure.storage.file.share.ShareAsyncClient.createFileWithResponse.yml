### YamlMime:JavaMember
uid: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse*
fullName: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse
name: createFileWithResponse
nameWithType: ShareAsyncClient.createFileWithResponse
members:
- uid: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse(java.lang.String,long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  fullName: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata)
  name: createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata)
  nameWithType: ShareAsyncClient.createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata)
  summary: |-
    Creates the file in the share with the given name, file max size and associates the passed properties to it.

     <p><strong>Code Samples</strong></p>

     <p>Create the file "myfile" with length of 1024 bytes, some headers, file smb properties and metadata</p>

     <pre>
     ShareFileHttpHeaders httpHeaders = new ShareFileHttpHeaders&#40;&#41;
         .setContentType&#40;&quot;text&#47;html&quot;&#41;
         .setContentEncoding&#40;&quot;gzip&quot;&#41;
         .setContentLanguage&#40;&quot;en&quot;&#41;
         .setCacheControl&#40;&quot;no-transform&quot;&#41;
         .setContentDisposition&#40;&quot;attachment&quot;&#41;;
     FileSmbProperties smbProperties = new FileSmbProperties&#40;&#41;
         .setNtfsFileAttributes&#40;EnumSet.of&#40;NtfsFileAttributes.READ_ONLY&#41;&#41;
         .setFileCreationTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFileLastWriteTime&#40;OffsetDateTime.now&#40;&#41;&#41;
         .setFilePermissionKey&#40;&quot;filePermissionKey&quot;&#41;;
     String filePermission = &quot;filePermission&quot;;
     &#47;&#47; NOTE: filePermission and filePermissionKey should never be both set
     shareAsyncClient.createFileWithResponse&#40;&quot;myfile&quot;, 1024, httpHeaders, smbProperties,
         filePermission, Collections.singletonMap&#40;&quot;directory&quot;, &quot;metadata&quot;&#41;&#41;
         .subscribe&#40;response -&gt; System.out.printf&#40;&quot;Creating the file completed with status code %d&quot;,
             response.getStatusCode&#40;&#41;&#41;&#41;;
     </pre>

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file">Azure Docs</a>.</p>
  parameters:
  - description: Name of the file.
    name: fileName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The maximum size in bytes for the file.
    name: maxSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: The user settable file http headers.
    name: httpHeaders
    type: <xref href="com.azure.storage.file.share.models.ShareFileHttpHeaders?alt=com.azure.storage.file.share.models.ShareFileHttpHeaders&text=ShareFileHttpHeaders" data-throw-if-not-resolved="False" />
  - description: The user settable file smb properties.
    name: smbProperties
    type: <xref href="com.azure.storage.file.share.FileSmbProperties?alt=com.azure.storage.file.share.FileSmbProperties&text=FileSmbProperties" data-throw-if-not-resolved="False" />
  - description: The file permission of the file.
    name: filePermission
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Optional name-value pairs associated with the file as metadata.
    name: metadata
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  syntax: public Mono<Response<ShareFileAsyncClient>> createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata)
  returns:
    description: |-
      A response containing a <xref uid="ShareFileAsyncClient" data-throw-if-not-resolved="false">ShareFileAsyncClient</xref> to interact with the created file and the status of
       its creation.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.ShareFileAsyncClient?alt=com.azure.storage.file.share.ShareFileAsyncClient&text=ShareFileAsyncClient" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse(java.lang.String,long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions)
  fullName: com.azure.storage.file.share.ShareAsyncClient.createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions)
  name: createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions)
  nameWithType: ShareAsyncClient.createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions)
  summary: "Creates the file in the share with the given name, file max size and associates the passed properties to it.\n\n <p><strong>Code Samples</strong></p>\n\n <p>Create the file \"myfile\" with length of 1024 bytes, some headers, file smb properties and metadata</p>\n\n <pre>\n ShareFileHttpHeaders httpHeaders = new ShareFileHttpHeaders&#40;&#41;\n     .setContentType&#40;&quot;text&#47;html&quot;&#41;\n     .setContentEncoding&#40;&quot;gzip&quot;&#41;\n     .setContentLanguage&#40;&quot;en&quot;&#41;\n     .setCacheControl&#40;&quot;no-transform&quot;&#41;\n     .setContentDisposition&#40;&quot;attachment&quot;&#41;;\n FileSmbProperties smbProperties = new FileSmbProperties&#40;&#41;\n     .setNtfsFileAttributes&#40;EnumSet.of&#40;NtfsFileAttributes.READ_ONLY&#41;&#41;\n     .setFileCreationTime&#40;OffsetDateTime.now&#40;&#41;&#41;\n     .setFileLastWriteTime&#40;OffsetDateTime.now&#40;&#41;&#41;\n     .setFilePermissionKey&#40;&quot;filePermissionKey&quot;&#41;;\n String filePermission = &quot;filePermission&quot;;\n &#47;&#47; NOTE: filePermission and filePermissionKey should never be both set\n \n ShareRequestConditions requestConditions = new ShareRequestConditions&#40;&#41;.setLeaseId&#40;leaseId&#41;;\n \n shareAsyncClient.createFileWithResponse&#40;&quot;myfile&quot;, 1024, httpHeaders, smbProperties,\n     filePermission, Collections.singletonMap&#40;&quot;directory&quot;, &quot;metadata&quot;&#41;, requestConditions&#41;\n     .subscribe&#40;response -&gt; System.out.printf&#40;&quot;Creating the file completed with status code %d&quot;,\n         response.getStatusCode&#40;&#41;&#41;&#41;;\n </pre>\n\n <p>For more information, see the\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\">Azure Docs</a>.</p>"
  parameters:
  - description: Name of the file.
    name: fileName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The maximum size in bytes for the file.
    name: maxSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: The user settable file http headers.
    name: httpHeaders
    type: <xref href="com.azure.storage.file.share.models.ShareFileHttpHeaders?alt=com.azure.storage.file.share.models.ShareFileHttpHeaders&text=ShareFileHttpHeaders" data-throw-if-not-resolved="False" />
  - description: The user settable file smb properties.
    name: smbProperties
    type: <xref href="com.azure.storage.file.share.FileSmbProperties?alt=com.azure.storage.file.share.FileSmbProperties&text=FileSmbProperties" data-throw-if-not-resolved="False" />
  - description: The file permission of the file.
    name: filePermission
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Optional name-value pairs associated with the file as metadata.
    name: metadata
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  - description: <xref uid="ShareRequestConditions" data-throw-if-not-resolved="false">ShareRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.share.models.ShareRequestConditions?alt=com.azure.storage.file.share.models.ShareRequestConditions&text=ShareRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ShareFileAsyncClient>> createFileWithResponse(String fileName, long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions)
  returns:
    description: |-
      A response containing a <xref uid="ShareFileAsyncClient" data-throw-if-not-resolved="false">ShareFileAsyncClient</xref> to interact with the created file and the status of
       its creation.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.share.ShareFileAsyncClient?alt=com.azure.storage.file.share.ShareFileAsyncClient&text=ShareFileAsyncClient" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.share
artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
