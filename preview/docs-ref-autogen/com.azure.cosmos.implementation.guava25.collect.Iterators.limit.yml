### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Iterators.limit*
fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>limit
name: <T>limit
nameWithType: Iterators.<T>limit
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>limit(java.util.Iterator<T>,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>limit(Iterator<T> iterator, int limitSize)
  name: <T>limit(Iterator<T> iterator, int limitSize)
  nameWithType: Iterators.<T>limit(Iterator<T> iterator, int limitSize)
  summary: |-
    Returns a view containing the first <code>limitSize</code> elements of <code>iterator</code>. If <code>
     iterator</code> contains fewer than <code>limitSize</code> elements, the returned view contains all of its
     elements. The returned iterator supports <code>remove()</code> if <code>iterator</code> does.
  parameters:
  - description: the iterator to limit
    name: iterator
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
  - description: the maximum number of elements in the returned iterator
    name: limitSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public static Iterator<T> <T>limit(Iterator<T> iterator, int limitSize)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
