### YamlMime:JavaMember
uid: com.azure.security.keyvault.keys.KeyAsyncClient.restoreKeyBackupWithResponse*
fullName: com.azure.security.keyvault.keys.KeyAsyncClient.restoreKeyBackupWithResponse
name: restoreKeyBackupWithResponse
nameWithType: KeyAsyncClient.restoreKeyBackupWithResponse
members:
- uid: com.azure.security.keyvault.keys.KeyAsyncClient.restoreKeyBackupWithResponse(byte[])
  fullName: com.azure.security.keyvault.keys.KeyAsyncClient.restoreKeyBackupWithResponse(byte[] backup)
  name: restoreKeyBackupWithResponse(byte[] backup)
  nameWithType: KeyAsyncClient.restoreKeyBackupWithResponse(byte[] backup)
  summary: |-
    Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key,
     its key identifier, attributes and access control policies. The restore operation may be used to import a
     previously backed up key. The individual versions of a key cannot be restored. The key is restored in its
     entirety with the same key name as it had when it was backed up. If the key name is not available in the target
     Key Vault, the restore operation will be rejected. While the key name is retained during restore, the final key
     identifier will change if the key is restored to a different vault. Restore will restore all versions and
     preserve version identifiers. The restore operation is subject to security constraints: The target Key Vault must
     be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have restore permission
     in the target Key Vault. This operation requires the <code>keys/restore</code> permission.

     <p><strong>Code Samples</strong></p>
     <p>Restores the key in the key vault from its backup. Subscribes to the call asynchronously and prints out the
     restored key details when a response has been received.</p>
     //Pass the Key Backup Byte array to the restore operation.

     <pre>
     byte[] keyBackupByteArray = &#123;&#125;;
     keyAsyncClient.restoreKeyBackupWithResponse&#40;keyBackupByteArray&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;keyResponse  -&gt;
             System.out.printf&#40;&quot;Restored Key with name %s and id %s %n&quot;, keyResponse.getValue&#40;&#41;.getName&#40;&#41;,
                 keyResponse.getValue&#40;&#41;.getId&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: The backup blob associated with the key.
    name: backup
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  syntax: public Mono<Response<KeyVaultKey>> restoreKeyBackupWithResponse(byte[] backup)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains the <xref uid="KeyVaultKey" data-throw-if-not-resolved="false">restored key</xref>.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.keys
artifact: com.azure:azure-security-keyvault-keys:4.2.0-beta.4
