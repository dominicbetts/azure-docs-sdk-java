### YamlMime:JavaMember
uid: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool*
fullName: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool
name: withNewElasticPool
nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool
members:
- uid: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(java.lang.String,com.azure.resourcemanager.sql.models.ElasticPoolEdition)
  fullName: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  summary: Create new elastic pool in the SQL Server.
  parameters:
  - description: name of the elastic pool to be created
    name: elasticPoolName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: edition of the elastic pool
    name: elasticPoolEdition
    type: <xref href="com.azure.resourcemanager.sql.models.ElasticPoolEdition?alt=com.azure.resourcemanager.sql.models.ElasticPoolEdition&text=ElasticPoolEdition" data-throw-if-not-resolved="False" />
  syntax: public abstract SqlServer.Update withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition)
  returns:
    description: Next stage of the SQL Server update
    type: <xref href="com.azure.resourcemanager.sql.models.SqlServer.Update?alt=com.azure.resourcemanager.sql.models.SqlServer.Update&text=Update" data-throw-if-not-resolved="False" />
- uid: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(java.lang.String,com.azure.resourcemanager.sql.models.ElasticPoolEdition,java.lang.String...)
  fullName: com.azure.resourcemanager.sql.models.SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String[] databaseNames)
  name: withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String[] databaseNames)
  nameWithType: SqlServer.UpdateStages.WithElasticPool.withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String[] databaseNames)
  summary: Create new elastic pool in the SQL Server.
  parameters:
  - description: name of the elastic pool to be created
    name: elasticPoolName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: edition of the elastic pool
    name: elasticPoolEdition
    type: <xref href="com.azure.resourcemanager.sql.models.ElasticPoolEdition?alt=com.azure.resourcemanager.sql.models.ElasticPoolEdition&text=ElasticPoolEdition" data-throw-if-not-resolved="False" />
  - description: names of the database to be included in the elastic pool
    name: databaseNames
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />[]
  syntax: public abstract SqlServer.Update withNewElasticPool(String elasticPoolName, ElasticPoolEdition elasticPoolEdition, String[] databaseNames)
  returns:
    description: Next stage of the SQL Server update
    type: <xref href="com.azure.resourcemanager.sql.models.SqlServer.Update?alt=com.azure.resourcemanager.sql.models.SqlServer.Update&text=Update" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.sql.models
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
