### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths*
fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths
name: listPaths
nameWithType: DataLakeFileSystemAsyncClient.listPaths
members:
- uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths()
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths()
  name: listPaths()
  nameWithType: DataLakeFileSystemAsyncClient.listPaths()
  summary: |-
    Returns a reactive Publisher emitting all the files/directories in this account lazily as needed. For more
     information, see the <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list">Azure Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     client.listPaths&#40;&#41;.subscribe&#40;path -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;, path.getName&#40;&#41;&#41;&#41;;
     </pre>
  syntax: public PagedFlux<PathItem> listPaths()
  returns:
    description: A reactive response emitting the list of files/directories.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths(com.azure.storage.file.datalake.models.ListPathsOptions)
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.listPaths(ListPathsOptions options)
  name: listPaths(ListPathsOptions options)
  nameWithType: DataLakeFileSystemAsyncClient.listPaths(ListPathsOptions options)
  summary: "Returns a reactive Publisher emitting all the files/directories in this account lazily as needed. For more\n information, see the <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem/list\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n ListPathsOptions options = new ListPathsOptions&#40;&#41;\n     .setPath&#40;&quot;PathNamePrefixToMatch&quot;&#41;\n     .setMaxResults&#40;10&#41;;\n \n client.listPaths&#40;options&#41;.subscribe&#40;path -&gt; System.out.printf&#40;&quot;Name: %s%n&quot;, path.getName&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: A <xref uid="ListPathsOptions" data-throw-if-not-resolved="false">ListPathsOptions</xref> which specifies what data should be returned by the service.
    name: options
    type: <xref href="com.azure.storage.file.datalake.models.ListPathsOptions?alt=com.azure.storage.file.datalake.models.ListPathsOptions&text=ListPathsOptions" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<PathItem> listPaths(ListPathsOptions options)
  returns:
    description: A reactive response emitting the list of files/directories.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.file.datalake.models.PathItem?alt=com.azure.storage.file.datalake.models.PathItem&text=PathItem" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
