### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator.equals*
fullName: com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator<E>.equals
name: equals
nameWithType: ComparableComparator<E>.equals
members:
- uid: com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator.equals(java.lang.Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.comparators.ComparableComparator<E>.equals(Object object)
  name: equals(Object object)
  nameWithType: ComparableComparator<E>.equals(Object object)
  summary: |-
    Returns <code>true</code> iff <i>that</i> Object is is a <xref uid="Comparator" data-throw-if-not-resolved="false">Comparator</xref>
     whose ordering is known to be equivalent to mine.
     <p>
     This implementation returns <code>true</code> iff
     <code><i>object</i>.<xref uid="Object#getClass()" data-throw-if-not-resolved="false">getClass()</xref></code> equals
     <code>this.getClass()</code>. Subclasses may want to override this behavior to remain
     consistent with the <xref uid="Comparator#equals(Object)" data-throw-if-not-resolved="false">Comparator#equals(Object)</xref> contract.
  overridden: java.lang.Object.equals(java.lang.Object)
  parameters:
  - description: the object to compare with
    name: object
    type: <xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />
  syntax: public boolean equals(Object object)
  returns:
    description: <code>true</code> if equal
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.apachecommons.collections.comparators
artifact: com.azure:azure-cosmos:4.3.2-beta.2
