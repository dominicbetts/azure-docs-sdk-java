### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteDirectory*
fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteDirectory
name: deleteDirectory
nameWithType: DataLakeFileSystemAsyncClient.deleteDirectory
members:
- uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteDirectory(java.lang.String)
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.deleteDirectory(String directoryName)
  name: deleteDirectory(String directoryName)
  nameWithType: DataLakeFileSystemAsyncClient.deleteDirectory(String directoryName)
  summary: |-
    Deletes the specified directory in the file system. If the directory doesn't exist the operation fails.
     For more information see the <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">Azure
     Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     client.deleteDirectory&#40;directoryName&#41;.subscribe&#40;response -&gt;
         System.out.println&#40;&quot;Delete request completed&quot;&#41;&#41;;
     </pre>
  parameters:
  - description: Name of the directory to delete.
    name: directoryName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> deleteDirectory(String directoryName)
  returns:
    description: A reactive response signalling completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
