### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.ForwardingList.standardAddAll*
fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingList<E>.standardAddAll
name: standardAddAll
nameWithType: ForwardingList<E>.standardAddAll
members:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingList.standardAddAll(int,java.lang.Iterable<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingList<E>.standardAddAll(int index, Iterable<? extends E> elements)
  name: standardAddAll(int index, Iterable<? extends E> elements)
  nameWithType: ForwardingList<E>.standardAddAll(int index, Iterable<? extends E> elements)
  summary: |-
    A sensible default implementation of <xref uid="#addAll(int, Collection)" data-throw-if-not-resolved="false">#addAll(int, Collection)</xref>, in terms of the <code>
     add</code> method of <xref uid="#listIterator(int)" data-throw-if-not-resolved="false">#listIterator(int)</xref>. If you override <xref uid="#listIterator(int)" data-throw-if-not-resolved="false">#listIterator(int)</xref>, you may
     wish to override <xref uid="#addAll(int, Collection)" data-throw-if-not-resolved="false">#addAll(int, Collection)</xref> to forward to this implementation.
  parameters:
  - name: index
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  - name: elements
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="? extends E?alt=? extends E&text=? extends E" data-throw-if-not-resolved="False" />&gt;
  syntax: protected boolean standardAddAll(int index, Iterable<? extends E> elements)
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
