### YamlMime:JavaMember
uid: com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess*
fullName: com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess
name: withAllowVirtualNetworkAccess
nameWithType: VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess
members:
- uid: com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(java.lang.Boolean)
  fullName: com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)
  name: withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)
  nameWithType: VirtualNetworkPeeringInner.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)
  summary: |-
    Set the allowVirtualNetworkAccess property: Whether the VMs in the local virtual network space would be able to
     access the VMs in remote virtual network space.
  parameters:
  - description: the allowVirtualNetworkAccess value to set.
    name: allowVirtualNetworkAccess
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  syntax: public VirtualNetworkPeeringInner withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)
  returns:
    description: the VirtualNetworkPeeringInner object itself.
    type: <xref href="com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.network.fluent.inner.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.network.fluent.inner
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
