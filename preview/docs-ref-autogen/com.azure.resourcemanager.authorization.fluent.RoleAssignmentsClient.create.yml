### YamlMime:JavaMember
uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create*
fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create
name: create
nameWithType: RoleAssignmentsClient.create
members:
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  name: create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  nameWithType: RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  summary: Creates a role assignment.
  parameters:
  - description: |-
      The scope of the role assignment to create. The scope can be any REST resource instance. For
           example, use '/subscriptions/{subscription-id}/' for a subscription,
           '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
           '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
           for a resource.
    name: scope
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the role assignment to create. It can be any valid GUID.
    name: roleAssignmentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Role assignment create parameters.
    name: parameters
    type: <xref href="com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters" data-throw-if-not-resolved="False" />
  syntax: public RoleAssignmentInner create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters)
  returns:
    description: role Assignments.
    type: <xref href="com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner&text=RoleAssignmentInner" data-throw-if-not-resolved="False" />
- uid: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.authorization.fluent.RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  name: create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsClient.create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  summary: Creates a role assignment.
  parameters:
  - description: |-
      The scope of the role assignment to create. The scope can be any REST resource instance. For
           example, use '/subscriptions/{subscription-id}/' for a subscription,
           '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
           '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
           for a resource.
    name: scope
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the role assignment to create. It can be any valid GUID.
    name: roleAssignmentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Role assignment create parameters.
    name: parameters
    type: <xref href="com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters?alt=com.azure.resourcemanager.authorization.models.RoleAssignmentCreateParameters&text=RoleAssignmentCreateParameters" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public RoleAssignmentInner create(String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  returns:
    description: role Assignments.
    type: <xref href="com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.inner.RoleAssignmentInner&text=RoleAssignmentInner" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.resourcemanager.authorization.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.0.0-beta.2
