### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Multimaps.newSetMultimap*
fullName: com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap
name: <K,V>newSetMultimap
nameWithType: Multimaps.<K,V>newSetMultimap
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap(java.util.Map<K,java.util.Collection<V>>,com.azure.cosmos.implementation.guava25.base.Supplier<? extends java.util.Set<V>>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multimaps.<K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)
  name: <K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)
  nameWithType: Multimaps.<K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)
  summary: |-
    Creates a new <code>SetMultimap</code> that uses the provided map and factory. It can generate a
     multimap based on arbitrary <xref uid="Map" data-throw-if-not-resolved="false">Map</xref> and <xref uid="Set" data-throw-if-not-resolved="false">Set</xref> classes.

     <p>The <code>factory</code>-generated and <code>map</code> classes determine the multimap iteration
     order. They also specify the behavior of the <code>equals</code>, <code>hashCode</code>, and <code>
     toString</code> methods for the multimap and its returned views. However, the multimap's <code>get</code>
     method returns instances of a different class than <code>factory.get()</code> does.

     <p>The multimap is serializable if <code>map</code>, <code>factory</code>, the sets generated by <code>
     factory</code>, and the multimap contents are all serializable.

     <p>The multimap is not threadsafe when any concurrent operations update the multimap, even if
     <code>map</code> and the instances generated by <code>factory</code> are. Concurrent read operations will
     work correctly. To allow concurrent update operations, wrap the multimap with a call to <xref uid="#synchronizedSetMultimap" data-throw-if-not-resolved="false">#synchronizedSetMultimap</xref>.

     <p>Call this method only when the simpler methods <xref uid="HashMultimap#create()" data-throw-if-not-resolved="false">HashMultimap#create()</xref>, <xref uid="LinkedHashMultimap#create()" data-throw-if-not-resolved="false">LinkedHashMultimap#create()</xref>, <xref uid="TreeMultimap#create()" data-throw-if-not-resolved="false">TreeMultimap#create()</xref>, and <xref uid="TreeMultimap#create(Comparator, Comparator)" data-throw-if-not-resolved="false">TreeMultimap#create(Comparator, Comparator)</xref> won't suffice.

     <p>Note: the multimap assumes complete ownership over of <code>map</code> and the sets returned by
     <code>factory</code>. Those objects should not be manually updated and they should not use soft,
     weak, or phantom references.
  parameters:
  - description: place to store the mapping from each key to its corresponding values
    name: map
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="java.util.Collection?alt=java.util.Collection&text=Collection" data-throw-if-not-resolved="False" />&lt;<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;&gt;
  - description: supplier of new, empty sets that will each hold all values for a given key
    name: factory
    type: <xref href="com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier" data-throw-if-not-resolved="False" />&lt;<xref href="? extends java.util.Set?alt=? extends java.util.Set&text=Set" data-throw-if-not-resolved="False" />&lt;<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;&gt;
  syntax: public static SetMultimap<K,V> <K,V>newSetMultimap(Map<K,Collection<V>> map, Supplier<? extends Set<V>> factory)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.SetMultimap?alt=com.azure.cosmos.implementation.guava25.collect.SetMultimap&text=SetMultimap" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
