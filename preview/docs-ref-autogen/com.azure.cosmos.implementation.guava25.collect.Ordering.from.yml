### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Ordering.from*
fullName: com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>from
name: <T>from
nameWithType: Ordering<T>.<T>from
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Ordering.<T>from(com.azure.cosmos.implementation.guava25.collect.Ordering<T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>from(Ordering<T> ordering)
  name: <T>from(Ordering<T> ordering)
  nameWithType: Ordering<T>.<T>from(Ordering<T> ordering)
  summary: Simply returns its argument.
  parameters:
  - name: ordering
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Ordering<T> <T>from(Ordering<T> ordering)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Ordering.<T>from(java.util.Comparator<T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>from(Comparator<T> comparator)
  name: <T>from(Comparator<T> comparator)
  nameWithType: Ordering<T>.<T>from(Comparator<T> comparator)
  summary: |-
    Returns an ordering based on an <i>existing</i> comparator instance. Note that it is
     unnecessary to create a <i>new</i> anonymous inner class implementing <code>Comparator</code> just
     to pass it in here. Instead, simply subclass <code>Ordering</code> and implement its <code>compare</code>
     method directly.

     <p><b>Java 8 users:</b> this class is now obsolete as explained in the class documentation, so
     there is no need to use this method.
  parameters:
  - description: the comparator that defines the order
    name: comparator
    type: <xref href="java.util.Comparator?alt=java.util.Comparator&text=Comparator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Ordering<T> <T>from(Comparator<T> comparator)
  returns:
    description: |-
      comparator itself if it is already an <code>Ordering</code>; otherwise an ordering that
           wraps that comparator
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
