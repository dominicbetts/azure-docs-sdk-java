### YamlMime:JavaMember
uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining*
fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining
name: beginTraining
nameWithType: FormTrainingAsyncClient.beginTraining
members:
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  name: beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  nameWithType: FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  summary: |-
    Create and train a custom model.
     Models are trained using documents that are of the following content type -
     'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'.
     Other type of content is ignored.
     <p>The service does not support cancellation of the long running operation and returns with an
     error message indicating absence of cancellation support.</p>
     See <a href="https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data">here</a>
     for information on building your own training data set.

     <p><strong>Code sample</strong></p>
     <pre>
     String trainingFilesUrl = &quot;&#123;SAS-URL-of-your-container-in-blob-storage&#125;&quot;;
     boolean useTrainingLabels = true;
     formTrainingAsyncClient.beginTraining&#40;trainingFilesUrl, useTrainingLabels&#41;
         &#47;&#47; if training polling operation completed, retrieve the final result.
         .flatMap&#40;AsyncPollResponse::getFinalResult&#41;
         .subscribe&#40;customFormModel -&gt; &#123;
             System.out.printf&#40;&quot;Model Id: %s%n&quot;, customFormModel.getModelId&#40;&#41;&#41;;
             System.out.printf&#40;&quot;Model Status: %s%n&quot;, customFormModel.getModelStatus&#40;&#41;&#41;;
             customFormModel.getSubmodels&#40;&#41;
                 .forEach&#40;customFormSubmodel -&gt; customFormSubmodel.getFields&#40;&#41;
                     .forEach&#40;&#40;key, customFormModelField&#41; -&gt;
                         System.out.printf&#40;&quot;Form type: %s Field Text: %s Field Accuracy: %f%n&quot;,
                             key, customFormModelField.getName&#40;&#41;, customFormModelField.getAccuracy&#40;&#41;&#41;&#41;&#41;;
         &#125;&#41;;
     </pre>
  parameters:
  - description: |-
      source URL parameter that is an externally accessible Azure
       storage blob container Uri (preferably a Shared Access Signature Uri).
    name: trainingFilesUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: boolean to specify the use of labeled files for training the model.
    name: useTrainingLabels
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  syntax: public PollerFlux<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  returns:
    description: |-
      A <xref uid="PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the training model operation until it has completed, has failed, or has
       been cancelled. The completed operation returns the trained <xref uid="CustomFormModel" data-throw-if-not-resolved="false">custom form model</xref>.
    type: <xref href="com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="com.azure.ai.formrecognizer.training.models.CustomFormModel?alt=com.azure.ai.formrecognizer.training.models.CustomFormModel&text=CustomFormModel" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean,com.azure.ai.formrecognizer.training.models.TrainingOptions)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  name: beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  nameWithType: FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  summary: "Create and train a custom model.\n <p>Models are trained using documents that are of the following content type -\n 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'.Other type of content is ignored.\n </p>\n See <a href=\"https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data\">here</a>\n for information on building your own training data set.\n <p>The service does not support cancellation of the long running operation and returns with an\n error message indicating absence of cancellation support.</p>\n\n <p><strong>Code sample</strong></p>\n <pre>\n String trainingFilesUrl = &quot;&#123;SAS-URL-of-your-container-in-blob-storage&#125;&quot;;\n TrainingFileFilter trainingFileFilter = new TrainingFileFilter&#40;&#41;.setSubfoldersIncluded&#40;true&#41;.setPrefix&#40;&quot;Invoice&quot;&#41;;\n \n formTrainingAsyncClient.beginTraining&#40;trainingFilesUrl, true,\n     new TrainingOptions&#40;&#41;\n         .setTrainingFileFilter&#40;trainingFileFilter&#41;\n         .setPollInterval&#40;Duration.ofSeconds&#40;5&#41;&#41;&#41;\n     &#47;&#47; if training polling operation completed, retrieve the final result.\n     .flatMap&#40;AsyncPollResponse::getFinalResult&#41;\n     .subscribe&#40;customFormModel -&gt; &#123;\n         System.out.printf&#40;&quot;Model Id: %s%n&quot;, customFormModel.getModelId&#40;&#41;&#41;;\n         System.out.printf&#40;&quot;Model Status: %s%n&quot;, customFormModel.getModelStatus&#40;&#41;&#41;;\n         customFormModel.getSubmodels&#40;&#41;.forEach&#40;customFormSubmodel -&gt;\n             customFormSubmodel.getFields&#40;&#41;.forEach&#40;&#40;key, customFormModelField&#41; -&gt;\n                 System.out.printf&#40;&quot;Form Type: %s Field Text: %s Field Accuracy: %f%n&quot;,\n                     key, customFormModelField.getName&#40;&#41;, customFormModelField.getAccuracy&#40;&#41;&#41;&#41;&#41;;\n     &#125;&#41;;\n </pre>"
  parameters:
  - description: |-
      an externally accessible Azure storage blob container Uri (preferably a
       Shared Access Signature Uri).
    name: trainingFilesUrl
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: boolean to specify the use of labeled files for training the model.
    name: useTrainingLabels
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  - description: |-
      The additional configurable <xref uid="TrainingOptions" data-throw-if-not-resolved="false">options</xref>
       that may be passed when training a model.
    name: trainingOptions
    type: <xref href="com.azure.ai.formrecognizer.training.models.TrainingOptions?alt=com.azure.ai.formrecognizer.training.models.TrainingOptions&text=TrainingOptions" data-throw-if-not-resolved="False" />
  syntax: public PollerFlux<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  returns:
    description: |-
      A <xref uid="PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the training model operation until it has completed, has failed, or has
       been cancelled. The completed operation returns the trained <xref uid="CustomFormModel" data-throw-if-not-resolved="false">custom form model</xref>.
    type: <xref href="com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult" data-throw-if-not-resolved="False" />,<xref href="com.azure.ai.formrecognizer.training.models.CustomFormModel?alt=com.azure.ai.formrecognizer.training.models.CustomFormModel&text=CustomFormModel" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.ai.formrecognizer.training
artifact: com.azure:azure-ai-formrecognizer:3.0.0-beta.1
