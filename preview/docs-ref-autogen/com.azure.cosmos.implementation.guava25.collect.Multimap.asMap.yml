### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Multimap.asMap*
fullName: com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>.asMap
name: asMap
nameWithType: Multimap<K,V>.asMap
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap.asMap()
  fullName: com.azure.cosmos.implementation.guava25.collect.Multimap<K,V>.asMap()
  name: asMap()
  nameWithType: Multimap<K,V>.asMap()
  summary: |-
    Returns a view of this multimap as a <code>Map</code> from each distinct key to the nonempty
     collection of that key's associated values. Note that <code>this.asMap().get(k)</code> is equivalent
     to <code>this.get(k)</code> only when <code>k</code> is a key contained in the multimap; otherwise it
     returns <code>null</code> as opposed to an empty collection.

     <p>Changes to the returned map or the collections that serve as its values will update the
     underlying multimap, and vice versa. The map does not support <code>put</code> or <code>putAll</code>,
     nor do its entries support <xref uid="Entry#setValue" data-throw-if-not-resolved="false">setValue</xref>.
  syntax: public abstract Map<K,Collection<V>> asMap()
  returns:
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="java.util.Collection?alt=java.util.Collection&text=Collection" data-throw-if-not-resolved="False" />&lt;<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
