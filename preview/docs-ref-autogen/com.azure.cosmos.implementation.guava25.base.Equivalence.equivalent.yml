### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent*
fullName: com.azure.cosmos.implementation.guava25.base.Equivalence<T>.equivalent
name: equivalent
nameWithType: Equivalence<T>.equivalent
members:
- uid: com.azure.cosmos.implementation.guava25.base.Equivalence.equivalent(T,T)
  fullName: com.azure.cosmos.implementation.guava25.base.Equivalence<T>.equivalent(T a, T b)
  name: equivalent(T a, T b)
  nameWithType: Equivalence<T>.equivalent(T a, T b)
  summary: |-
    Returns <code>true</code> if the given objects are considered equivalent.

     <p>This method describes an <i>equivalence relation</i> on object references, meaning that for
     all references <code>x</code>, <code>y</code>, and <code>z</code> (any of which may be null):

     <ul>
       <li><code>equivalent(x, x)</code> is true (<i>reflexive</i> property)
       <li><code>equivalent(x, y)</code> and <code>equivalent(y, x)</code> each return the same result
           (<i>symmetric</i> property)
       <li>If <code>equivalent(x, y)</code> and <code>equivalent(y, z)</code> are both true, then <code>
           equivalent(x, z)</code> is also true (<i>transitive</i> property)
     </ul>

     <p>Note that all calls to <code>equivalent(x, y)</code> are expected to return the same result as
     long as neither <code>x</code> nor <code>y</code> is modified.
  parameters:
  - name: a
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />
  - name: b
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />
  syntax: public final boolean equivalent(T a, T b)
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.base
artifact: com.azure:azure-cosmos:4.3.2-beta.2
