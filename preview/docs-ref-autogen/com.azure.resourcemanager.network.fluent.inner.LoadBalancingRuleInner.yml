### YamlMime:JavaType
uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
name: LoadBalancingRuleInner
nameWithType: LoadBalancingRuleInner
summary: The LoadBalancingRule model.
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False" />
- <xref href="com.azure.core.management.SubResource" data-throw-if-not-resolved="False" />
inheritedMembers:
- com.azure.core.management.SubResource.id()
- com.azure.core.management.SubResource.withId(java.lang.String)
- java.lang.Object.clone()
- java.lang.Object.equals(java.lang.Object)
- java.lang.Object.finalize()
- java.lang.Object.getClass()
- java.lang.Object.hashCode()
- java.lang.Object.notify()
- java.lang.Object.notifyAll()
- java.lang.Object.toString()
- java.lang.Object.wait()
- java.lang.Object.wait(long)
- java.lang.Object.wait(long,int)
syntax: public class LoadBalancingRuleInner extends SubResource
constructors:
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner()
methods:
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate()
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool(com.azure.core.management.SubResource)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort(java.lang.Integer)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat(java.lang.Boolean)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp(java.lang.Boolean)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset(java.lang.Boolean)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag(java.lang.String)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration(com.azure.core.management.SubResource)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort(java.lang.Integer)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes(java.lang.Integer)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution(com.azure.resourcemanager.network.models.LoadDistribution)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName(java.lang.String)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe(com.azure.core.management.SubResource)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
- com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState(java.lang.String)
type: class
metadata: {}
package: com.azure.resourcemanager.network.fluent.inner
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
