### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.entries*
fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.entries
name: entries
nameWithType: LinkedListMultimap<K,V>.entries
members:
- uid: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap.entries()
  fullName: com.azure.cosmos.implementation.guava25.collect.LinkedListMultimap<K,V>.entries()
  name: entries()
  nameWithType: LinkedListMultimap<K,V>.entries()
  summary: |-
    Returns a view collection of all key-value pairs contained in this multimap, as <xref uid="Entry" data-throw-if-not-resolved="false">Entry</xref>
     instances.

     <p>Changes to the returned collection or the entries it contains will update the underlying
     multimap, and vice versa. However, <i>adding</i> to the returned collection is not possible.

     <p>The iterator generated by the returned collection traverses the entries in the order they
     were added to the multimap. Because the entries may have duplicates and follow the insertion
     ordering, this method returns a <xref uid="List" data-throw-if-not-resolved="false">List</xref>, instead of the <xref uid="Collection" data-throw-if-not-resolved="false">Collection</xref> specified in
     the <xref uid="ListMultimap" data-throw-if-not-resolved="false">ListMultimap</xref> interface.

     <p>An entry's <xref uid="Entry#getKey" data-throw-if-not-resolved="false">Entry#getKey</xref> method always returns the same key, regardless of what
     happens subsequently. As long as the corresponding key-value mapping is not removed from the
     multimap, <xref uid="Entry#getValue" data-throw-if-not-resolved="false">Entry#getValue</xref> returns the value from the multimap, which may change over
     time, and <xref uid="Entry#setValue" data-throw-if-not-resolved="false">Entry#setValue</xref> modifies that value. Removing the mapping from the multimap
     does not alter the value returned by <code>getValue()</code>, though a subsequent <code>setValue()</code>
     call won't update the multimap but will lead to a revised value being returned by <code>
     getValue()</code>.
  overridden: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.entries()
  syntax: public List<Map.Entry<K,V>> entries()
  returns:
    type: <xref href="java.util.List?alt=java.util.List&text=List" data-throw-if-not-resolved="False" />&lt;<xref href="java.util.Map.Entry?alt=java.util.Map.Entry&text=Entry" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
