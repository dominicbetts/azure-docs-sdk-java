### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Sets.difference*
fullName: com.azure.cosmos.implementation.guava25.collect.Sets.<E>difference
name: <E>difference
nameWithType: Sets.<E>difference
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.<E>difference(java.util.Set<E>,java.util.Set<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.<E>difference(Set<E> set1, Set<?> set2)
  name: <E>difference(Set<E> set1, Set<?> set2)
  nameWithType: Sets.<E>difference(Set<E> set1, Set<?> set2)
  summary: |-
    Returns an unmodifiable <b>view</b> of the difference of two sets. The returned set contains
     all elements that are contained by <code>set1</code> and not contained by <code>set2</code>. <code>set2</code>
     may also contain elements not present in <code>set1</code>; these are simply ignored. The iteration
     order of the returned set matches that of <code>set1</code>.

     <p>Results are undefined if <code>set1</code> and <code>set2</code> are sets based on different
     equivalence relations (as <code>HashSet</code>, <code>TreeSet</code>, and the keySet of an <code>
     IdentityHashMap</code> all are).
  parameters:
  - name: set1
    type: <xref href="java.util.Set?alt=java.util.Set&text=Set" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
  - name: set2
    type: <xref href="java.util.Set?alt=java.util.Set&text=Set" data-throw-if-not-resolved="False" />&lt;?&gt;
  syntax: public static Sets.SetView<E> <E>difference(Set<E> set1, Set<?> set2)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Sets.SetView?alt=com.azure.cosmos.implementation.guava25.collect.Sets.SetView&text=SetView" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
