### YamlMime:JavaMember
uid: com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse*
fullName: com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse
name: appendBlockWithResponse
nameWithType: AppendBlobAsyncClient.appendBlockWithResponse
members:
- uid: com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],com.azure.storage.blob.models.AppendBlobRequestConditions)
  fullName: com.azure.storage.blob.specialized.AppendBlobAsyncClient.appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)
  name: appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)
  nameWithType: AppendBlobAsyncClient.appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)
  summary: "Commits a new block of data to the end of the existing append blob.\n <p>\n Note that the data passed must be replayable if retries are enabled (the default). In other words, the\n <code>Flux</code> must produce the same data each time it is subscribed to.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n byte[] md5 = MessageDigest.getInstance&#40;&quot;MD5&quot;&#41;.digest&#40;&quot;data&quot;.getBytes&#40;StandardCharsets.UTF_8&#41;&#41;;\n AppendBlobRequestConditions requestConditions = new AppendBlobRequestConditions&#40;&#41;\n     .setAppendPosition&#40;POSITION&#41;\n     .setMaxSize&#40;maxSize&#41;;\n \n client.appendBlockWithResponse&#40;data, length, md5, requestConditions&#41;.subscribe&#40;response -&gt;\n     System.out.printf&#40;&quot;AppendBlob has %d committed blocks%n&quot;, response.getValue&#40;&#41;.getBlobCommittedBlockCount&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: |-
      The data to write to the blob. Note that this <code>Flux</code> must be replayable if retries are enabled
       (the default). In other words, the Flux must produce the same data each time it is subscribed to.
    name: data
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
  - description: |-
      The exact length of the data. It is important that this value match precisely the length of the
       data emitted by the <code>Flux</code>.
    name: length
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: |-
      An MD5 hash of the block content. This hash is used to verify the integrity of the block during
       transport. When this header is specified, the storage service compares the hash of the content that has arrived
       with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
       operation will fail.
    name: contentMd5
    type: <xref href="byte?alt=byte&text=byte" data-throw-if-not-resolved="False" />[]
  - description: <xref uid="AppendBlobRequestConditions" data-throw-if-not-resolved="false">AppendBlobRequestConditions</xref>
    name: appendBlobRequestConditions
    type: <xref href="com.azure.storage.blob.models.AppendBlobRequestConditions?alt=com.azure.storage.blob.models.AppendBlobRequestConditions&text=AppendBlobRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<AppendBlobItem>> appendBlockWithResponse(Flux<ByteBuffer> data, long length, byte[] contentMd5, AppendBlobRequestConditions appendBlobRequestConditions)
  returns:
    description: |-
      A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains the append
       blob operation.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.storage.blob.models.AppendBlobItem?alt=com.azure.storage.blob.models.AppendBlobItem&text=AppendBlobItem" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.blob.specialized
artifact: com.azure:azure-storage-blob:12.8.0-beta.1
