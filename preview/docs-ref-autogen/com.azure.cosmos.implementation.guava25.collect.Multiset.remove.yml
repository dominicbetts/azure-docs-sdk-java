### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Multiset.remove*
fullName: com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove
name: remove
nameWithType: Multiset<E>.remove
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.remove(java.lang.Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove(Object element)
  name: remove(Object element)
  nameWithType: Multiset<E>.remove(Object element)
  summary: |-
    Removes a <i>single</i> occurrence of the specified element from this multiset, if present.

     <p>This method refines <xref uid="Collection#remove" data-throw-if-not-resolved="false">Collection#remove</xref> to further specify that it <b>may not</b>
     throw an exception in response to <code>element</code> being null or of the wrong type.

     <p>To both remove the element and obtain the previous count of that element, use <xref uid="#remove(Object, int)" data-throw-if-not-resolved="false">remove</xref><code>(element, 1)</code> instead.
  parameters:
  - description: the element to remove one occurrence of
    name: element
    type: <xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />
  syntax: public abstract boolean remove(Object element)
  returns:
    description: <code>true</code> if an occurrence was found and removed
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
- uid: com.azure.cosmos.implementation.guava25.collect.Multiset.remove(java.lang.Object,int)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove(Object element, int occurrences)
  name: remove(Object element, int occurrences)
  nameWithType: Multiset<E>.remove(Object element, int occurrences)
  summary: |-
    Removes a number of occurrences of the specified element from this multiset. If the multiset
     contains fewer than this number of occurrences to begin with, all occurrences will be removed.
     Note that if <code>occurrences == 1</code>, this is functionally equivalent to the call <code>
     remove(element)</code>.
  parameters:
  - description: the element to conditionally remove occurrences of
    name: element
    type: <xref href="java.lang.Object?alt=java.lang.Object&text=Object" data-throw-if-not-resolved="False" />
  - description: |-
      the number of occurrences of the element to remove. May be zero, in which
           case no change will be made.
    name: occurrences
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public abstract int remove(Object element, int occurrences)
  returns:
    description: the count of the element before the operation; possibly zero
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
