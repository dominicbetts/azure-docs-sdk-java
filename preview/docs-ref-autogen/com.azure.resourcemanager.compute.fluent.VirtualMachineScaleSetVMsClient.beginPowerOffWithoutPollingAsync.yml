### YamlMime:JavaMember
uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync*
fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync
name: beginPowerOffWithoutPollingAsync
nameWithType: VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync
members:
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  name: beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  nameWithType: VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  summary: |-
    Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting
     charged for the resources. Instead, use deallocate to release resources and avoid charges.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the VM scale set.
    name: vmScaleSetName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The instance ID of the virtual machine.
    name: instanceId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  name: beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  nameWithType: VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  summary: |-
    Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting
     charged for the resources. Instead, use deallocate to release resources and avoid charges.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the VM scale set.
    name: vmScaleSetName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The instance ID of the virtual machine.
    name: instanceId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The parameter to request non-graceful VM shutdown. True value for this flag indicates
           non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
           specified.
    name: skipShutdown
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.compute.fluent.VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  name: beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  nameWithType: VirtualMachineScaleSetVMsClient.beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  summary: |-
    Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting
     charged for the resources. Instead, use deallocate to release resources and avoid charges.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the VM scale set.
    name: vmScaleSetName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The instance ID of the virtual machine.
    name: instanceId
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The parameter to request non-graceful VM shutdown. True value for this flag indicates
           non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not
           specified.
    name: skipShutdown
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Void> beginPowerOffWithoutPollingAsync(String resourceGroupName, String vmScaleSetName, String instanceId, Boolean skipShutdown, Context context)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.compute.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
