### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient.query*
fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient.query
name: query
nameWithType: DataLakeFileAsyncClient.query
members:
- uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient.query(java.lang.String)
  fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient.query(String expression)
  name: query(String expression)
  nameWithType: DataLakeFileAsyncClient.query(String expression)
  summary: |-
    Queries the entire file.

     <p>For more information, see the
     <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/query-blob-contents">Azure Docs</a></p>

     <p><strong>Code Samples</strong></p>

     <pre>
     ByteArrayOutputStream queryData = new ByteArrayOutputStream&#40;&#41;;
     String expression = &quot;SELECT * from BlobStorage&quot;;
     client.query&#40;expression&#41;.subscribe&#40;piece -&gt; &#123;
         try &#123;
             queryData.write&#40;piece.array&#40;&#41;&#41;;
         &#125; catch &#40;IOException ex&#41; &#123;
             throw new UncheckedIOException&#40;ex&#41;;
         &#125;
     &#125;&#41;;
     </pre>
  parameters:
  - description: The query expression.
    name: expression
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Flux<ByteBuffer> query(String expression)
  returns:
    description: A reactive response containing the queried data.
    type: <xref href="reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux" data-throw-if-not-resolved="False" />&lt;<xref href="java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
