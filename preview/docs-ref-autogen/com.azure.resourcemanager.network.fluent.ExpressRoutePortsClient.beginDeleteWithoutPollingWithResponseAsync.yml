### YamlMime:JavaMember
uid: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync*
fullName: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync
name: beginDeleteWithoutPollingWithResponseAsync
nameWithType: ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync
members:
- uid: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName)
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName)
  nameWithType: ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName)
  summary: Deletes the specified ExpressRoutePort resource.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the ExpressRoutePort resource.
    name: expressRoutePortName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName, Context context)
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName, Context context)
  nameWithType: ExpressRoutePortsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName, Context context)
  summary: Deletes the specified ExpressRoutePort resource.
  parameters:
  - description: The name of the resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the ExpressRoutePort resource.
    name: expressRoutePortName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String expressRoutePortName, Context context)
  returns:
    description: the completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.network.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
