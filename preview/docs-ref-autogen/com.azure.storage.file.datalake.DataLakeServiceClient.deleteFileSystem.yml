### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeServiceClient.deleteFileSystem*
fullName: com.azure.storage.file.datalake.DataLakeServiceClient.deleteFileSystem
name: deleteFileSystem
nameWithType: DataLakeServiceClient.deleteFileSystem
members:
- uid: com.azure.storage.file.datalake.DataLakeServiceClient.deleteFileSystem(java.lang.String)
  fullName: com.azure.storage.file.datalake.DataLakeServiceClient.deleteFileSystem(String fileSystemName)
  name: deleteFileSystem(String fileSystemName)
  nameWithType: DataLakeServiceClient.deleteFileSystem(String fileSystemName)
  summary: |-
    Deletes the specified file system in the storage account. If the file system doesn't exist the operation fails.
     For more information see the <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container">Azure
     Docs</a>.

     <p><strong>Code Samples</strong></p>

     <pre>
     try &#123;
         client.deleteFileSystem&#40;&quot;fileSystemName&quot;&#41;;
         System.out.printf&#40;&quot;Delete file system completed with status %n&quot;&#41;;
     &#125; catch &#40;UnsupportedOperationException error&#41; &#123;
         System.out.printf&#40;&quot;Delete file system failed: %s%n&quot;, error&#41;;
     &#125;
     </pre>
  parameters:
  - description: Name of the file system to delete
    name: fileSystemName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public void deleteFileSystem(String fileSystemName)
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
