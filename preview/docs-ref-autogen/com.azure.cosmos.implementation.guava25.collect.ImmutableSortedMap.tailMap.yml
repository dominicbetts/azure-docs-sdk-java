### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.tailMap*
fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap<K,V>.tailMap
name: tailMap
nameWithType: ImmutableSortedMap<K,V>.tailMap
members:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.tailMap(K)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap<K,V>.tailMap(K fromKey)
  name: tailMap(K fromKey)
  nameWithType: ImmutableSortedMap<K,V>.tailMap(K fromKey)
  summary: |-
    This method returns a <code>ImmutableSortedMap</code>, consisting of the entries whose keys are
     greater than or equals to <code>fromKey</code>.

     <p>The <xref uid="SortedMap#tailMap" data-throw-if-not-resolved="false">SortedMap#tailMap</xref> documentation states that a submap of a submap throws an
     <xref uid="IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> if passed a <code>fromKey</code> less than an earlier <code>
     fromKey</code>. However, this method doesn't throw an exception in that situation, but instead keeps
     the original <code>fromKey</code>.
  parameters:
  - name: fromKey
    type: <xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />
  syntax: public ImmutableSortedMap<K,V> tailMap(K fromKey)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap&text=ImmutableSortedMap" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap.tailMap(K,boolean)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap<K,V>.tailMap(K fromKey, boolean inclusive)
  name: tailMap(K fromKey, boolean inclusive)
  nameWithType: ImmutableSortedMap<K,V>.tailMap(K fromKey, boolean inclusive)
  summary: |-
    This method returns a <code>ImmutableSortedMap</code>, consisting of the entries whose keys are
     greater than (or equal to, if <code>inclusive</code>) <code>fromKey</code>.

     <p>The <xref uid="SortedMap#tailMap" data-throw-if-not-resolved="false">SortedMap#tailMap</xref> documentation states that a submap of a submap throws an
     <xref uid="IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> if passed a <code>fromKey</code> less than an earlier <code>
     fromKey</code>. However, this method doesn't throw an exception in that situation, but instead keeps
     the original <code>fromKey</code>.
  parameters:
  - name: fromKey
    type: <xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />
  - name: inclusive
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
  syntax: public ImmutableSortedMap<K,V> tailMap(K fromKey, boolean inclusive)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedMap&text=ImmutableSortedMap" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />,<xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
