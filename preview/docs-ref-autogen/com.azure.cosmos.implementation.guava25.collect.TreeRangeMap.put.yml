### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.TreeRangeMap.put*
fullName: com.azure.cosmos.implementation.guava25.collect.TreeRangeMap<K,V>.put
name: put
nameWithType: TreeRangeMap<K,V>.put
members:
- uid: com.azure.cosmos.implementation.guava25.collect.TreeRangeMap.put(com.azure.cosmos.implementation.guava25.collect.Range<K>,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.TreeRangeMap<K,V>.put(Range<K> range, V value)
  name: put(Range<K> range, V value)
  nameWithType: TreeRangeMap<K,V>.put(Range<K> range, V value)
  summary: |-
    Maps a range to a specified value (optional operation).

     <p>Specifically, after a call to <code>put(range, value)</code>, if <xref uid="Range#contains(Comparable)" data-throw-if-not-resolved="false">range.contains(k)</xref>, then <xref uid="#get(Comparable)" data-throw-if-not-resolved="false">get(k)</xref> will return
     <code>value</code>.

     <p>If <code>range</code> <xref uid="Range#isEmpty()" data-throw-if-not-resolved="false">is empty</xref>, then this is a no-op.
  parameters:
  - name: range
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range" data-throw-if-not-resolved="False" />&lt;<xref href="K?alt=K&text=K" data-throw-if-not-resolved="False" />&gt;
  - name: value
    type: <xref href="V?alt=V&text=V" data-throw-if-not-resolved="False" />
  syntax: public void put(Range<K> range, V value)
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
