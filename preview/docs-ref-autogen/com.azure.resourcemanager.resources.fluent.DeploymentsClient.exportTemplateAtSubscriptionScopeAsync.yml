### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync*
fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync
name: exportTemplateAtSubscriptionScopeAsync
nameWithType: DeploymentsClient.exportTemplateAtSubscriptionScopeAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(java.lang.String)
  fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName)
  name: exportTemplateAtSubscriptionScopeAsync(String deploymentName)
  nameWithType: DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName)
  summary: Exports the template used for specified deployment.
  parameters:
  - description: The name of the deployment.
    name: deploymentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeAsync(String deploymentName)
  returns:
    description: the deployment export result.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.inner.DeploymentExportResultInner&text=DeploymentExportResultInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName, Context context)
  name: exportTemplateAtSubscriptionScopeAsync(String deploymentName, Context context)
  nameWithType: DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName, Context context)
  summary: Exports the template used for specified deployment.
  parameters:
  - description: The name of the deployment.
    name: deploymentName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeAsync(String deploymentName, Context context)
  returns:
    description: the deployment export result.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.inner.DeploymentExportResultInner&text=DeploymentExportResultInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
