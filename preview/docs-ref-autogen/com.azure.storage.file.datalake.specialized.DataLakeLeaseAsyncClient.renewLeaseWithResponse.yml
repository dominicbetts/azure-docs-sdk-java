### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.renewLeaseWithResponse*
fullName: com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.renewLeaseWithResponse
name: renewLeaseWithResponse
nameWithType: DataLakeLeaseAsyncClient.renewLeaseWithResponse
members:
- uid: com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.renewLeaseWithResponse(com.azure.core.http.RequestConditions)
  fullName: com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.renewLeaseWithResponse(RequestConditions modifiedRequestConditions)
  name: renewLeaseWithResponse(RequestConditions modifiedRequestConditions)
  nameWithType: DataLakeLeaseAsyncClient.renewLeaseWithResponse(RequestConditions modifiedRequestConditions)
  summary: "Renews the previously acquired lease.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n RequestConditions modifiedRequestConditions = new RequestConditions&#40;&#41;\n     .setIfUnmodifiedSince&#40;OffsetDateTime.now&#40;&#41;.minusDays&#40;3&#41;&#41;;\n \n client.renewLeaseWithResponse&#40;modifiedRequestConditions&#41;.subscribe&#40;response -&gt;\n     System.out.printf&#40;&quot;Renewed lease ID is %s%n&quot;, response.getValue&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: |-
      Standard HTTP Access conditions related to the modification of data. ETag and
       LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given
       request. The request will fail if the specified condition is not satisfied.
    name: modifiedRequestConditions
    type: <xref href="com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<String>> renewLeaseWithResponse(RequestConditions modifiedRequestConditions)
  returns:
    description: A reactive response containing the renewed lease ID.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake.specialized
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
