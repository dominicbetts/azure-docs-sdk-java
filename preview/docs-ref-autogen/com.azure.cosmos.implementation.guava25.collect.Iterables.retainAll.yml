### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Iterables.retainAll*
fullName: com.azure.cosmos.implementation.guava25.collect.Iterables.retainAll
name: retainAll
nameWithType: Iterables.retainAll
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Iterables.retainAll(java.lang.Iterable<?>,java.util.Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterables.retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)
  name: retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)
  nameWithType: Iterables.retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)
  summary: |-
    Removes, from an iterable, every element that does not belong to the provided collection.

     <p>This method calls <xref uid="Collection#retainAll" data-throw-if-not-resolved="false">Collection#retainAll</xref> if <code>iterable</code> is a collection, and
     <xref uid="Iterators#retainAll" data-throw-if-not-resolved="false">Iterators#retainAll</xref> otherwise.
  parameters:
  - description: the iterable to (potentially) remove elements from
    name: removeFrom
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;?&gt;
  - description: the elements to retain
    name: elementsToRetain
    type: <xref href="java.util.Collection?alt=java.util.Collection&text=Collection" data-throw-if-not-resolved="False" />&lt;?&gt;
  syntax: public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)
  returns:
    description: <code>true</code> if any element was removed from <code>iterable</code>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
