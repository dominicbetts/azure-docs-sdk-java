### YamlMime:JavaMember
uid: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync*
fullName: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync
name: listSinglePageAsync
nameWithType: TenantActivityLogsClient.listSinglePageAsync
members:
- uid: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync(java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync(String filter, String select)
  name: listSinglePageAsync(String filter, String select)
  nameWithType: TenantActivityLogsClient.listSinglePageAsync(String filter, String select)
  summary: |-
    Gets the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity Logs
     for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point out
     here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces
     the logs that were generated at the tenant level.
  parameters:
  - description: |-
      Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the
           following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start
           Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and
           resourceGroupName eq '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp
           ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and
           resourceUri eq '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge
           '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
           Operation'.&lt;br&gt;- List events for a resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;'
           and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceProvider eq
           '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List events for a correlation Id:
           api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
           '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq
           '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma
           separated list of property names to be returned. Possible values are: *authorization*, *claims*,
           *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*,
           *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*,
           *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*.
    name: select
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<EventDataInner>> listSinglePageAsync(String filter, String select)
  returns:
    description: the Activity Logs for the Tenant.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.monitor.fluent.inner.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.inner.EventDataInner&text=EventDataInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.monitor.fluent.TenantActivityLogsClient.listSinglePageAsync(String filter, String select, Context context)
  name: listSinglePageAsync(String filter, String select, Context context)
  nameWithType: TenantActivityLogsClient.listSinglePageAsync(String filter, String select, Context context)
  summary: |-
    Gets the Activity Logs for the Tenant.&lt;br&gt;Everything that is applicable to the API to get the Activity Logs
     for the subscription is applicable to this API (the parameters, $filter, etc.).&lt;br&gt;One thing to point out
     here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces
     the logs that were generated at the tenant level.
  parameters:
  - description: |-
      Reduces the set of data collected. &lt;br&gt;The **$filter** is very restricted and allows only the
           following patterns.&lt;br&gt;- List events for a resource group: $filter=eventTimestamp ge '&lt;Start
           Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and
           resourceGroupName eq '&lt;ResourceGroupName&gt;'.&lt;br&gt;- List events for resource: $filter=eventTimestamp
           ge '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and
           resourceUri eq '&lt;ResourceURI&gt;'.&lt;br&gt;- List events for a subscription: $filter=eventTimestamp ge
           '&lt;Start Time&gt;' and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin,
           Operation'.&lt;br&gt;- List events for a resource provider: $filter=eventTimestamp ge '&lt;Start Time&gt;'
           and eventTimestamp le '&lt;End Time&gt;' and eventChannels eq 'Admin, Operation' and resourceProvider eq
           '&lt;ResourceProviderName&gt;'.&lt;br&gt;- List events for a correlation Id:
           api-version=2014-04-01&amp;$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
           '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq
           '&lt;CorrelationID&gt;'.&lt;br&gt;**NOTE**: No other syntax is allowed.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      Used to fetch events with only the given properties.&lt;br&gt;The **$select** argument is a comma
           separated list of property names to be returned. Possible values are: *authorization*, *claims*,
           *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*,
           *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*,
           *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*.
    name: select
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<PagedResponse<EventDataInner>> listSinglePageAsync(String filter, String select, Context context)
  returns:
    description: the Activity Logs for the Tenant.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.monitor.fluent.inner.EventDataInner?alt=com.azure.resourcemanager.monitor.fluent.inner.EventDataInner&text=EventDataInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.monitor.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-monitor:2.0.0-beta.2
