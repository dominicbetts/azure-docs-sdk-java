### YamlMime:JavaMember
uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync*
fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync
name: checkNameAvailabilityWithResponseAsync
nameWithType: ResourceProvidersClient.checkNameAvailabilityWithResponseAsync
members:
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CheckNameResourceTypes,java.lang.Boolean)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn)
  name: checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn)
  nameWithType: ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn)
  summary: Description for Check if a resource name is available.
  parameters:
  - description: Resource name to verify.
    name: name
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Resource type used for verification.
    name: type
    type: <xref href="com.azure.resourcemanager.appservice.models.CheckNameResourceTypes?alt=com.azure.resourcemanager.appservice.models.CheckNameResourceTypes&text=CheckNameResourceTypes" data-throw-if-not-resolved="False" />
  - description: Is fully qualified domain name.
    name: isFqdn
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ResourceNameAvailabilityInner>> checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn)
  returns:
    description: information regarding availability of a resource name.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.inner.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.appservice.models.CheckNameResourceTypes,java.lang.Boolean,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn, Context context)
  name: checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn, Context context)
  nameWithType: ResourceProvidersClient.checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn, Context context)
  summary: Description for Check if a resource name is available.
  parameters:
  - description: Resource name to verify.
    name: name
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Resource type used for verification.
    name: type
    type: <xref href="com.azure.resourcemanager.appservice.models.CheckNameResourceTypes?alt=com.azure.resourcemanager.appservice.models.CheckNameResourceTypes&text=CheckNameResourceTypes" data-throw-if-not-resolved="False" />
  - description: Is fully qualified domain name.
    name: isFqdn
    type: <xref href="java.lang.Boolean?alt=java.lang.Boolean&text=Boolean" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ResourceNameAvailabilityInner>> checkNameAvailabilityWithResponseAsync(String name, CheckNameResourceTypes type, Boolean isFqdn, Context context)
  returns:
    description: information regarding availability of a resource name.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.ResourceNameAvailabilityInner?alt=com.azure.resourcemanager.appservice.fluent.inner.ResourceNameAvailabilityInner&text=ResourceNameAvailabilityInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.appservice.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.0.0-beta.2
