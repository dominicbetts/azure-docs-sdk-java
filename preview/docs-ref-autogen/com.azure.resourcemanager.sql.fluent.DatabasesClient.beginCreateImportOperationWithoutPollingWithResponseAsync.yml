### YamlMime:JavaMember
uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync*
fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync
name: beginCreateImportOperationWithoutPollingWithResponseAsync
nameWithType: DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync
members:
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportExtensionRequest)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters)
  name: beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters)
  nameWithType: DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters)
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  parameters:
  - description: |-
      The name of the resource group that contains the resource. You can obtain this value
           from the Azure Resource Manager API or the portal.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the server.
    name: serverName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the database to import into.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Import database parameters.
    name: parameters
    type: <xref href="com.azure.resourcemanager.sql.models.ImportExtensionRequest?alt=com.azure.resourcemanager.sql.models.ImportExtensionRequest&text=ImportExtensionRequest" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ImportExportResponseInner>> beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters)
  returns:
    description: response for Import/Export Get operation.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.sql.fluent.inner.ImportExportResponseInner?alt=com.azure.resourcemanager.sql.fluent.inner.ImportExportResponseInner&text=ImportExportResponseInner" data-throw-if-not-resolved="False" />&gt;&gt;
- uid: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ImportExtensionRequest,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.sql.fluent.DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters, Context context)
  name: beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters, Context context)
  nameWithType: DatabasesClient.beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters, Context context)
  summary: Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.
  parameters:
  - description: |-
      The name of the resource group that contains the resource. You can obtain this value
           from the Azure Resource Manager API or the portal.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the server.
    name: serverName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The name of the database to import into.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Import database parameters.
    name: parameters
    type: <xref href="com.azure.resourcemanager.sql.models.ImportExtensionRequest?alt=com.azure.resourcemanager.sql.models.ImportExtensionRequest&text=ImportExtensionRequest" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<ImportExportResponseInner>> beginCreateImportOperationWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, ImportExtensionRequest parameters, Context context)
  returns:
    description: response for Import/Export Get operation.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.sql.fluent.inner.ImportExportResponseInner?alt=com.azure.resourcemanager.sql.fluent.inner.ImportExportResponseInner&text=ImportExportResponseInner" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.sql.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
