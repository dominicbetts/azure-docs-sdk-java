### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse*
fullName: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse
name: reverse
nameWithType: Ints.reverse
members:
- uid: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse(int[])
  fullName: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse(int[] array)
  name: reverse(int[] array)
  nameWithType: Ints.reverse(int[] array)
  summary: |-
    Reverses the elements of <code>array</code>. This is equivalent to <code>
     Collections.reverse(Ints.asList(array))</code>, but is likely to be more efficient.
  parameters:
  - name: array
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />[]
  syntax: public static void reverse(int[] array)
- uid: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse(int[],int,int)
  fullName: com.azure.cosmos.implementation.guava25.primitives.Ints.reverse(int[] array, int fromIndex, int toIndex)
  name: reverse(int[] array, int fromIndex, int toIndex)
  nameWithType: Ints.reverse(int[] array, int fromIndex, int toIndex)
  summary: |-
    Reverses the elements of <code>array</code> between <code>fromIndex</code> inclusive and <code>toIndex</code>
     exclusive. This is equivalent to <code>
     Collections.reverse(Ints.asList(array).subList(fromIndex, toIndex))</code>, but is likely to be more
     efficient.
  parameters:
  - name: array
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />[]
  - name: fromIndex
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  - name: toIndex
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public static void reverse(int[] array, int fromIndex, int toIndex)
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.primitives
artifact: com.azure:azure-cosmos:4.3.2-beta.2
