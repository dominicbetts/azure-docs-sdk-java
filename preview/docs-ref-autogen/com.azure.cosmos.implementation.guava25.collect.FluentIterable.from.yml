### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.from*
fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<E>from
name: <E>from
nameWithType: FluentIterable<E>.<E>from
members:
- uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.<E>from(E[])
  fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<E>from(E[] elements)
  name: <E>from(E[] elements)
  nameWithType: FluentIterable<E>.<E>from(E[] elements)
  summary: |-
    Returns a fluent iterable containing <code>elements</code> in the specified order.

     <p>The returned iterable is an unmodifiable view of the input array.

     <p><b><code>Stream</code> equivalent:</b> <xref uid="java.util.stream.Stream#of(Object[])" data-throw-if-not-resolved="false">Stream.of(T...)</xref>.
  parameters:
  - name: elements
    type: <xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />[]
  syntax: public static FluentIterable<E> <E>from(E[] elements)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.<E>from(com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<E>from(FluentIterable<E> iterable)
  name: <E>from(FluentIterable<E> iterable)
  nameWithType: FluentIterable<E>.<E>from(FluentIterable<E> iterable)
  summary: |-
    Construct a fluent iterable from another fluent iterable. This is obviously never necessary,
     but is intended to help call out cases where one migration from <code>Iterable</code> to <code>
     FluentIterable</code> has obviated the need to explicitly convert to a <code>FluentIterable</code>.
  parameters:
  - name: iterable
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
  syntax: public static FluentIterable<E> <E>from(FluentIterable<E> iterable)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.FluentIterable.<E>from(java.lang.Iterable<E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.FluentIterable<E>.<E>from(Iterable<E> iterable)
  name: <E>from(Iterable<E> iterable)
  nameWithType: FluentIterable<E>.<E>from(Iterable<E> iterable)
  summary: |-
    Returns a fluent iterable that wraps <code>iterable</code>, or <code>iterable</code> itself if it is
     already a <code>FluentIterable</code>.

     <p><b><code>Stream</code> equivalent:</b> <xref uid="Collection#stream" data-throw-if-not-resolved="false">Collection#stream</xref> if <code>iterable</code> is a <xref uid="Collection" data-throw-if-not-resolved="false">Collection</xref>; <xref uid="Streams#stream(Iterable)" data-throw-if-not-resolved="false">Streams#stream(Iterable)</xref> otherwise.
  parameters:
  - name: iterable
    type: <xref href="java.lang.Iterable?alt=java.lang.Iterable&text=Iterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
  syntax: public static FluentIterable<E> <E>from(Iterable<E> iterable)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.FluentIterable?alt=com.azure.cosmos.implementation.guava25.collect.FluentIterable&text=FluentIterable" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
