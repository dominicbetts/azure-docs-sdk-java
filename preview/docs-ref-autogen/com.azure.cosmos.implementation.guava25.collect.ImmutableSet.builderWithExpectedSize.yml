### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.builderWithExpectedSize*
fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>builderWithExpectedSize
name: <E>builderWithExpectedSize
nameWithType: ImmutableSet<E>.<E>builderWithExpectedSize
members:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableSet.<E>builderWithExpectedSize(int)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>builderWithExpectedSize(int expectedSize)
  name: <E>builderWithExpectedSize(int expectedSize)
  nameWithType: ImmutableSet<E>.<E>builderWithExpectedSize(int expectedSize)
  summary: |-
    Returns a new builder, expecting the specified number of distinct elements to be added.

     <p>If <code>expectedSize</code> is exactly the number of distinct elements added to the builder
     before <xref uid="Builder#build" data-throw-if-not-resolved="false">Builder#build</xref> is called, the builder is likely to perform better than an unsized
     <xref uid="#builder()" data-throw-if-not-resolved="false">#builder()</xref> would have.

     <p>It is not specified if any performance benefits apply if <code>expectedSize</code> is close to,
     but not exactly, the number of distinct elements added to the builder.
  parameters:
  - name: expectedSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
  syntax: public static ImmutableSet.Builder<E> <E>builderWithExpectedSize(int expectedSize)
  returns:
    type: <xref href="com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet.Builder&text=Builder" data-throw-if-not-resolved="False" />&lt;<xref href="E?alt=E&text=E" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
