### YamlMime:JavaMember
uid: com.azure.security.keyvault.secrets.SecretClient.getSecret*
fullName: com.azure.security.keyvault.secrets.SecretClient.getSecret
name: getSecret
nameWithType: SecretClient.getSecret
members:
- uid: com.azure.security.keyvault.secrets.SecretClient.getSecret(java.lang.String)
  fullName: com.azure.security.keyvault.secrets.SecretClient.getSecret(String name)
  name: getSecret(String name)
  nameWithType: SecretClient.getSecret(String name)
  summary: |-
    Gets the latest version of the specified secret from the key vault.
     This operation requires the <code>secrets/get</code> permission.

     <p><strong>Code sample</strong></p>
     <p>Gets the latest version of the secret in the key vault. Prints out the details of the returned secret.</p>
     <pre>
     KeyVaultSecret secretWithoutVersion = secretClient.getSecret&#40;&quot;secretName&quot;, secretVersion&#41;;
     System.out.printf&#40;&quot;Secret is returned with name %s and value %s%n&quot;,
         secretWithoutVersion.getName&#40;&#41;, secretWithoutVersion.getValue&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The name of the secret.
    name: name
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public KeyVaultSecret getSecret(String name)
  returns:
    description: The requested <xref uid="KeyVaultSecret" data-throw-if-not-resolved="false">KeyVaultSecret</xref>.
    type: <xref href="com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret" data-throw-if-not-resolved="False" />
- uid: com.azure.security.keyvault.secrets.SecretClient.getSecret(java.lang.String,java.lang.String)
  fullName: com.azure.security.keyvault.secrets.SecretClient.getSecret(String name, String version)
  name: getSecret(String name, String version)
  nameWithType: SecretClient.getSecret(String name, String version)
  summary: |-
    Gets the specified secret with specified version from the key vault. This operation requires the
     <code>secrets/get</code> permission.

     <p><strong>Code sample</strong></p>
     <p>Gets a specific version of the secret in the key vault. Prints out the details of the returned secret.</p>
     <pre>
     String secretVersion = &quot;6A385B124DEF4096AF1361A85B16C204&quot;;
     KeyVaultSecret secretWithVersion = secretClient.getSecret&#40;&quot;secretName&quot;, secretVersion&#41;;
     System.out.printf&#40;&quot;Secret is returned with name %s and value %s%n&quot;,
         secretWithVersion.getName&#40;&#41;, secretWithVersion.getValue&#40;&#41;&#41;;
     </pre>
  parameters:
  - description: The name of the secret, cannot be null.
    name: name
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: |-
      The version of the secret to retrieve. If this is an empty string or null, this call is
           equivalent to calling <xref uid="#getSecret(String)" data-throw-if-not-resolved="false">#getSecret(String)</xref>, with the latest version being retrieved.
    name: version
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public KeyVaultSecret getSecret(String name, String version)
  returns:
    description: The requested <xref uid="KeyVaultSecret" data-throw-if-not-resolved="false">secret</xref>.
    type: <xref href="com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.security.keyvault.secrets
artifact: com.azure:azure-security-keyvault-secrets:4.2.0-beta.3
