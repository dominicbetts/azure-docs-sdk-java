### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.primitives.UnsignedLongs.compare*
fullName: com.azure.cosmos.implementation.guava25.primitives.UnsignedLongs.compare
name: compare
nameWithType: UnsignedLongs.compare
members:
- uid: com.azure.cosmos.implementation.guava25.primitives.UnsignedLongs.compare(long,long)
  fullName: com.azure.cosmos.implementation.guava25.primitives.UnsignedLongs.compare(long a, long b)
  name: compare(long a, long b)
  nameWithType: UnsignedLongs.compare(long a, long b)
  summary: |-
    Compares the two specified <code>long</code> values, treating them as unsigned values between <code>
     0</code> and <code>2^64 - 1</code> inclusive.

     <p><b>Java 8 users:</b> use <xref uid="Long#compareUnsigned(long, long)" data-throw-if-not-resolved="false">Long#compareUnsigned(long, long)</xref> instead.
  parameters:
  - description: the first unsigned <code>long</code> to compare
    name: a
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  - description: the second unsigned <code>long</code> to compare
    name: b
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False" />
  syntax: public static int compare(long a, long b)
  returns:
    description: |-
      a negative value if <code>a</code> is less than <code>b</code>; a positive value if <code>a</code> is
           greater than <code>b</code>; or zero if they are equal
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.primitives
artifact: com.azure:azure-cosmos:4.3.2-beta.2
