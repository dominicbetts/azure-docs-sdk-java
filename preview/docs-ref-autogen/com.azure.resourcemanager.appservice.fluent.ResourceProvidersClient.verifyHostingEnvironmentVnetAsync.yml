### YamlMime:JavaMember
uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync*
fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync
name: verifyHostingEnvironmentVnetAsync
nameWithType: ResourceProvidersClient.verifyHostingEnvironmentVnetAsync
members:
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(com.azure.resourcemanager.appservice.models.VnetParameters)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters)
  name: verifyHostingEnvironmentVnetAsync(VnetParameters parameters)
  nameWithType: ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters)
  summary: |-
    Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network
     Security Group rules.
  parameters:
  - description: The required set of inputs to validate a VNET.
    name: parameters
    type: <xref href="com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters" data-throw-if-not-resolved="False" />
  syntax: public Mono<VnetValidationFailureDetailsInner> verifyHostingEnvironmentVnetAsync(VnetParameters parameters)
  returns:
    description: a class that describes the reason for a validation failure.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.inner.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(com.azure.resourcemanager.appservice.models.VnetParameters,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.appservice.fluent.ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters, Context context)
  name: verifyHostingEnvironmentVnetAsync(VnetParameters parameters, Context context)
  nameWithType: ResourceProvidersClient.verifyHostingEnvironmentVnetAsync(VnetParameters parameters, Context context)
  summary: |-
    Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the Network
     Security Group rules.
  parameters:
  - description: The required set of inputs to validate a VNET.
    name: parameters
    type: <xref href="com.azure.resourcemanager.appservice.models.VnetParameters?alt=com.azure.resourcemanager.appservice.models.VnetParameters&text=VnetParameters" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<VnetValidationFailureDetailsInner> verifyHostingEnvironmentVnetAsync(VnetParameters parameters, Context context)
  returns:
    description: a class that describes the reason for a validation failure.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.appservice.fluent.inner.VnetValidationFailureDetailsInner?alt=com.azure.resourcemanager.appservice.fluent.inner.VnetValidationFailureDetailsInner&text=VnetValidationFailureDetailsInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.appservice.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.0.0-beta.2
