### YamlMime:JavaMember
uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync*
fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync
name: listAsync
nameWithType: DeploymentsClient.listAsync
members:
- uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync()
  fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync()
  name: listAsync()
  nameWithType: DeploymentsClient.listAsync()
  summary: Get all the deployments for a subscription.
  syntax: public PagedFlux<DeploymentExtendedInner> listAsync()
  returns:
    description: all the deployments for a subscription.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner&text=DeploymentExtendedInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(java.lang.String,java.lang.Integer)
  fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(String filter, Integer top)
  name: listAsync(String filter, Integer top)
  nameWithType: DeploymentsClient.listAsync(String filter, Integer top)
  summary: Get all the deployments for a subscription.
  parameters:
  - description: |-
      The filter to apply on the operation. For example, you can use $filter=provisioningState eq
           '{state}'.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The number of results to get. If null is passed, returns all deployments.
    name: top
    type: <xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<DeploymentExtendedInner> listAsync(String filter, Integer top)
  returns:
    description: all the deployments for a subscription.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner&text=DeploymentExtendedInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(String filter, Integer top, Context context)
  name: listAsync(String filter, Integer top, Context context)
  nameWithType: DeploymentsClient.listAsync(String filter, Integer top, Context context)
  summary: Get all the deployments for a subscription.
  parameters:
  - description: |-
      The filter to apply on the operation. For example, you can use $filter=provisioningState eq
           '{state}'.
    name: filter
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The number of results to get. If null is passed, returns all deployments.
    name: top
    type: <xref href="java.lang.Integer?alt=java.lang.Integer&text=Integer" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public PagedFlux<DeploymentExtendedInner> listAsync(String filter, Integer top, Context context)
  returns:
    description: all the deployments for a subscription.
    type: <xref href="com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.inner.DeploymentExtendedInner&text=DeploymentExtendedInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.resources.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
