### YamlMime:JavaMember
uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer*
fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer
name: updateIssuer
nameWithType: CertificateAsyncClient.updateIssuer
members:
- uid: com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer(com.azure.security.keyvault.certificates.models.CertificateIssuer)
  fullName: com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer(CertificateIssuer issuer)
  name: updateIssuer(CertificateIssuer issuer)
  nameWithType: CertificateAsyncClient.updateIssuer(CertificateIssuer issuer)
  summary: |-
    Updates the specified certificate issuer. The UpdateCertificateIssuer operation updates the specified attributes of
     the certificate issuer entity. This operation requires the certificates/setissuers permission.

     <p><strong>Code Samples</strong></p>
     <p>Gets the certificate issuer, changes its attributes/properties then updates it in the Azure Key Vault. Prints out the
     returned certificate issuer details when a response has been received.</p>

     <pre>
     certificateAsyncClient.getIssuer&#40;&quot;issuerName&quot;&#41;
         .subscriberContext&#40;Context.of&#40;key1, value1, key2, value2&#41;&#41;
         .subscribe&#40;issuerResponseValue -&gt; &#123;
             CertificateIssuer issuer = issuerResponseValue;
             &#47;&#47;Update the enabled status of the issuer.
             issuer.setEnabled&#40;false&#41;;
             certificateAsyncClient.updateIssuer&#40;issuer&#41;
                 .subscribe&#40;issuerResponse -&gt;
                     System.out.printf&#40;&quot;Issuer's enabled status %s %n&quot;,
                         issuerResponse.isEnabled&#40;&#41;.toString&#40;&#41;&#41;&#41;;
         &#125;&#41;;
     </pre>
  parameters:
  - description: |-
      The <xref uid="CertificateIssuer" data-throw-if-not-resolved="false">issuer</xref> with updated properties. Use
       <xref uid="CertificateIssuer#CertificateIssuer(String)" data-throw-if-not-resolved="false">CertificateIssuer#CertificateIssuer(String)</xref> to initialize the issuer object
    name: issuer
    type: <xref href="com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer" data-throw-if-not-resolved="False" />
  syntax: public Mono<CertificateIssuer> updateIssuer(CertificateIssuer issuer)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing the <xref uid="CertificateIssuer" data-throw-if-not-resolved="false">updated issuer</xref>.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.certificates
artifact: com.azure:azure-security-keyvault-certificates:4.1.0-beta.3
