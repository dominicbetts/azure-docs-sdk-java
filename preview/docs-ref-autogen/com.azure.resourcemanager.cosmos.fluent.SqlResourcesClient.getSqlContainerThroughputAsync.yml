### YamlMime:JavaMember
uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync*
fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync
name: getSqlContainerThroughputAsync
nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync
members:
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  name: getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  parameters:
  - description: Name of an Azure resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database account name.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database name.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB container name.
    name: containerName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  syntax: public Mono<ThroughputSettingsGetResultsInner> getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  returns:
    description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner&text=ThroughputSettingsGetResultsInner" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  name: getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClient.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  parameters:
  - description: Name of an Azure resource group.
    name: resourceGroupName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database account name.
    name: accountName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB database name.
    name: databaseName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: Cosmos DB container name.
    name: containerName
    type: <xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />
  - description: The context to associate with this operation.
    name: context
    type: <xref href="com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context" data-throw-if-not-resolved="False" />
  syntax: public Mono<ThroughputSettingsGetResultsInner> getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  returns:
    description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner?alt=com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner&text=ThroughputSettingsGetResultsInner" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.resourcemanager.cosmos.fluent
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
