### YamlMime:JavaMember
uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.setMetadataWithResponse*
fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.setMetadataWithResponse
name: setMetadataWithResponse
nameWithType: DataLakeFileSystemAsyncClient.setMetadataWithResponse
members:
- uid: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.datalake.models.DataLakeRequestConditions)
  fullName: com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.setMetadataWithResponse(Map<String,String> metadata, DataLakeRequestConditions requestConditions)
  name: setMetadataWithResponse(Map<String,String> metadata, DataLakeRequestConditions requestConditions)
  nameWithType: DataLakeFileSystemAsyncClient.setMetadataWithResponse(Map<String,String> metadata, DataLakeRequestConditions requestConditions)
  summary: "Sets the file systems's metadata. For more information, see the\n <a href=\"https://docs.microsoft.com/rest/api/storageservices/set-container-metadata\">Azure Docs</a>.\n\n <p><strong>Code Samples</strong></p>\n\n <pre>\n Map&lt;String, String&gt; metadata = Collections.singletonMap&#40;&quot;metadata&quot;, &quot;value&quot;&#41;;\n DataLakeRequestConditions requestConditions = new DataLakeRequestConditions&#40;&#41;\n     .setLeaseId&#40;leaseId&#41;\n     .setIfUnmodifiedSince&#40;OffsetDateTime.now&#40;&#41;.minusDays&#40;3&#41;&#41;;\n \n client.setMetadataWithResponse&#40;metadata, requestConditions&#41;.subscribe&#40;response -&gt;\n     System.out.printf&#40;&quot;Set metadata completed with status %d%n&quot;, response.getStatusCode&#40;&#41;&#41;&#41;;\n </pre>"
  parameters:
  - description: Metadata to associate with the file system.
    name: metadata
    type: <xref href="java.util.Map?alt=java.util.Map&text=Map" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />,<xref href="java.lang.String?alt=java.lang.String&text=String" data-throw-if-not-resolved="False" />&gt;
  - description: <xref uid="DataLakeRequestConditions" data-throw-if-not-resolved="false">DataLakeRequestConditions</xref>
    name: requestConditions
    type: <xref href="com.azure.storage.file.datalake.models.DataLakeRequestConditions?alt=com.azure.storage.file.datalake.models.DataLakeRequestConditions&text=DataLakeRequestConditions" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<Void>> setMetadataWithResponse(Map<String,String> metadata, DataLakeRequestConditions requestConditions)
  returns:
    description: |-
      A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains signalling
       completion.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="java.lang.Void?alt=java.lang.Void&text=Void" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.storage.file.datalake
artifact: com.azure:azure-storage-file-datalake:12.2.0-beta.1
