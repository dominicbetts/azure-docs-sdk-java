### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.collect.Iterators.concat*
fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat
name: <T>concat
nameWithType: Iterators.<T>concat
members:
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(java.util.Iterator<? extends T>,java.util.Iterator<? extends T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b)
  name: <T>concat(Iterator<? extends T> a, Iterator<? extends T> b)
  nameWithType: Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b)
  summary: |-
    Combines two iterators into a single iterator. The returned iterator iterates across the
     elements in <code>a</code>, followed by the elements in <code>b</code>. The source iterators are not
     polled until necessary.

     <p>The returned iterator supports <code>remove()</code> when the corresponding input iterator
     supports it.
  parameters:
  - name: a
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: b
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Iterator<T> <T>concat(Iterator<? extends T> a, Iterator<? extends T> b)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(java.util.Iterator<? extends T>,java.util.Iterator<? extends T>,java.util.Iterator<? extends T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)
  name: <T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)
  nameWithType: Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)
  summary: |-
    Combines three iterators into a single iterator. The returned iterator iterates across the
     elements in <code>a</code>, followed by the elements in <code>b</code>, followed by the elements in
     <code>c</code>. The source iterators are not polled until necessary.

     <p>The returned iterator supports <code>remove()</code> when the corresponding input iterator
     supports it.
  parameters:
  - name: a
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: b
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: c
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Iterator<T> <T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(java.util.Iterator<? extends T>,java.util.Iterator<? extends T>,java.util.Iterator<? extends T>,java.util.Iterator<? extends T>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)
  name: <T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)
  nameWithType: Iterators.<T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)
  summary: |-
    Combines four iterators into a single iterator. The returned iterator iterates across the
     elements in <code>a</code>, followed by the elements in <code>b</code>, followed by the elements in
     <code>c</code>, followed by the elements in <code>d</code>. The source iterators are not polled until
     necessary.

     <p>The returned iterator supports <code>remove()</code> when the corresponding input iterator
     supports it.
  parameters:
  - name: a
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: b
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: c
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  - name: d
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;
  syntax: public static Iterator<T> <T>concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(java.util.Iterator<? extends T>...)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(Iterator<? extends T>[] inputs)
  name: <T>concat(Iterator<? extends T>[] inputs)
  nameWithType: Iterators.<T>concat(Iterator<? extends T>[] inputs)
  summary: |-
    Combines multiple iterators into a single iterator. The returned iterator iterates across the
     elements of each iterator in <code>inputs</code>. The input iterators are not polled until
     necessary.

     <p>The returned iterator supports <code>remove()</code> when the corresponding input iterator
     supports it.
  parameters:
  - name: inputs
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;[]
  syntax: public static Iterator<T> <T>concat(Iterator<? extends T>[] inputs)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
- uid: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(java.util.Iterator<? extends java.util.Iterator<? extends T>>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Iterators.<T>concat(Iterator<? extends Iterator<? extends T>> inputs)
  name: <T>concat(Iterator<? extends Iterator<? extends T>> inputs)
  nameWithType: Iterators.<T>concat(Iterator<? extends Iterator<? extends T>> inputs)
  summary: |-
    Combines multiple iterators into a single iterator. The returned iterator iterates across the
     elements of each iterator in <code>inputs</code>. The input iterators are not polled until
     necessary.

     <p>The returned iterator supports <code>remove()</code> when the corresponding input iterator
     supports it. The methods of the returned iterator may throw <code>NullPointerException</code> if any
     of the input iterators is null.
  parameters:
  - name: inputs
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends java.util.Iterator?alt=? extends java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="? extends T?alt=? extends T&text=? extends T" data-throw-if-not-resolved="False" />&gt;&gt;
  syntax: public static Iterator<T> <T>concat(Iterator<? extends Iterator<? extends T>> inputs)
  returns:
    type: <xref href="java.util.Iterator?alt=java.util.Iterator&text=Iterator" data-throw-if-not-resolved="False" />&lt;<xref href="T?alt=T&text=T" data-throw-if-not-resolved="False" />&gt;
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.collect
artifact: com.azure:azure-cosmos:4.3.2-beta.2
