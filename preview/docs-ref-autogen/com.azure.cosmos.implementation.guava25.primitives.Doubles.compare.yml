### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.primitives.Doubles.compare*
fullName: com.azure.cosmos.implementation.guava25.primitives.Doubles.compare
name: compare
nameWithType: Doubles.compare
members:
- uid: com.azure.cosmos.implementation.guava25.primitives.Doubles.compare(double,double)
  fullName: com.azure.cosmos.implementation.guava25.primitives.Doubles.compare(double a, double b)
  name: compare(double a, double b)
  nameWithType: Doubles.compare(double a, double b)
  summary: |-
    Compares the two specified <code>double</code> values. The sign of the value returned is the same as
     that of <code>((Double) a).<xref uid="Double#compareTo" data-throw-if-not-resolved="false">compareTo</xref>(b)</code>. As with that
     method, <code>NaN</code> is treated as greater than all other values, and <code>0.0 > -0.0</code>.

     <p><b>Note:</b> this method simply delegates to the JDK method <xref uid="Double#compare" data-throw-if-not-resolved="false">Double#compare</xref>. It is
     provided for consistency with the other primitive types, whose compare methods were not added
     to the JDK until JDK 7.
  parameters:
  - description: the first <code>double</code> to compare
    name: a
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False" />
  - description: the second <code>double</code> to compare
    name: b
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False" />
  syntax: public static int compare(double a, double b)
  returns:
    description: |-
      a negative value if <code>a</code> is less than <code>b</code>; a positive value if <code>a</code> is
           greater than <code>b</code>; or zero if they are equal
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.primitives
artifact: com.azure:azure-cosmos:4.3.2-beta.2
