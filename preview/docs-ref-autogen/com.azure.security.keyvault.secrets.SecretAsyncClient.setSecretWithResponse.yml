### YamlMime:JavaMember
uid: com.azure.security.keyvault.secrets.SecretAsyncClient.setSecretWithResponse*
fullName: com.azure.security.keyvault.secrets.SecretAsyncClient.setSecretWithResponse
name: setSecretWithResponse
nameWithType: SecretAsyncClient.setSecretWithResponse
members:
- uid: com.azure.security.keyvault.secrets.SecretAsyncClient.setSecretWithResponse(com.azure.security.keyvault.secrets.models.KeyVaultSecret)
  fullName: com.azure.security.keyvault.secrets.SecretAsyncClient.setSecretWithResponse(KeyVaultSecret secret)
  name: setSecretWithResponse(KeyVaultSecret secret)
  nameWithType: SecretAsyncClient.setSecretWithResponse(KeyVaultSecret secret)
  summary: |-
    Adds a secret to the key vault if it does not exist. If the named secret exists, a new version of the secret is
     created. This operation requires the <code>secrets/set</code> permission.

     <p>The <xref uid="SecretProperties#getExpiresOn()" data-throw-if-not-resolved="false">expires</xref>, <xref uid="SecretProperties#getContentType()" data-throw-if-not-resolved="false">contentType</xref>,
     and <xref uid="SecretProperties#getNotBefore()" data-throw-if-not-resolved="false">notBefore</xref> values in <code>secret</code> are optional.
     If not specified, <xref uid="SecretProperties#isEnabled()" data-throw-if-not-resolved="false">enabled</xref> is set to true by key vault.</p>

     <p><strong>Code sample</strong></p>
     <p>Creates a new secret which activates in one day and expires in one year. Subscribes to the call asynchronously
     and prints out the newly created secret details when a response is received.</p>

     <pre>
     KeyVaultSecret newSecret = new KeyVaultSecret&#40;&quot;secretName&quot;, &quot;secretValue&quot;&#41;.
         setProperties&#40;new SecretProperties&#40;&#41;.setExpiresOn&#40;OffsetDateTime.now&#40;&#41;.plusDays&#40;60&#41;&#41;&#41;;
     secretAsyncClient.setSecretWithResponse&#40;newSecret&#41;
         .subscribe&#40;secretResponse -&gt;
             System.out.printf&#40;&quot;Secret is created with name %s and value %s %n&quot;,
                 secretResponse.getValue&#40;&#41;.getName&#40;&#41;, secretResponse.getValue&#40;&#41;.getValue&#40;&#41;&#41;&#41;;
     </pre>
  parameters:
  - description: |-
      The Secret object containing information about the secret and its properties. The properties
           <xref uid="KeyVaultSecret#getName()" data-throw-if-not-resolved="false">secret.name</xref> and <xref uid="KeyVaultSecret#getValue()" data-throw-if-not-resolved="false">secret.value</xref> cannot be
           null.
    name: secret
    type: <xref href="com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret" data-throw-if-not-resolved="False" />
  syntax: public Mono<Response<KeyVaultSecret>> setSecretWithResponse(KeyVaultSecret secret)
  returns:
    description: A <xref uid="Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="Response#getValue()" data-throw-if-not-resolved="false">value</xref> contains the <xref uid="KeyVaultSecret" data-throw-if-not-resolved="false">created secret</xref>.
    type: <xref href="reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response" data-throw-if-not-resolved="False" />&lt;<xref href="com.azure.security.keyvault.secrets.models.KeyVaultSecret?alt=com.azure.security.keyvault.secrets.models.KeyVaultSecret&text=KeyVaultSecret" data-throw-if-not-resolved="False" />&gt;&gt;
type: method
metadata: {}
package: com.azure.security.keyvault.secrets
artifact: com.azure:azure-security-keyvault-secrets:4.2.0-beta.3
