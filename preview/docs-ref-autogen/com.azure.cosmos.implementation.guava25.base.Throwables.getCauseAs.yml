### YamlMime:JavaMember
uid: com.azure.cosmos.implementation.guava25.base.Throwables.getCauseAs*
fullName: com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs
name: <X>getCauseAs
nameWithType: Throwables.<X>getCauseAs
members:
- uid: com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs(java.lang.Throwable,java.lang.Class<X>)
  fullName: com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)
  name: <X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)
  nameWithType: Throwables.<X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)
  summary: |-
    Returns <code>throwable</code>'s cause, cast to <code>expectedCauseType</code>.

     <p>Prefer this method instead of manually casting an exception's cause. For example, <code>
     (IOException) e.getCause()</code> throws a <xref uid="ClassCastException" data-throw-if-not-resolved="false">ClassCastException</xref> that discards the original
     exception <code>e</code> if the cause is not an <xref uid="IOException" data-throw-if-not-resolved="false">IOException</xref>, but <code>
     Throwables.getCauseAs(e, IOException.class)</code> keeps <code>e</code> as the <xref uid="ClassCastException" data-throw-if-not-resolved="false">ClassCastException</xref>'s cause.
  parameters:
  - name: throwable
    type: <xref href="java.lang.Throwable?alt=java.lang.Throwable&text=Throwable" data-throw-if-not-resolved="False" />
  - name: expectedCauseType
    type: <xref href="java.lang.Class?alt=java.lang.Class&text=Class" data-throw-if-not-resolved="False" />&lt;<xref href="X?alt=X&text=X" data-throw-if-not-resolved="False" />&gt;
  syntax: public static X <X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)
  returns:
    type: <xref href="X?alt=X&text=X" data-throw-if-not-resolved="False" />
type: method
metadata: {}
package: com.azure.cosmos.implementation.guava25.base
artifact: com.azure:azure-cosmos:4.3.2-beta.2
